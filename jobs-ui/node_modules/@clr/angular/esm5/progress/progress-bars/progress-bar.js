import * as tslib_1 from "tslib";
/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, Input, HostBinding } from '@angular/core';
import { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';
import { AriaLiveService, AriaLivePoliteness } from '../../utils/a11y/aria-live.service';
var ClrProgressBar = /** @class */ (function () {
    function ClrProgressBar(ariaLiveService) {
        this.ariaLiveService = ariaLiveService;
        this.externalId = '';
        // Progress
        this.max = 100;
        this._value = 0;
    }
    Object.defineProperty(ClrProgressBar.prototype, "id", {
        get: function () {
            return this._ID;
        },
        set: function (value) {
            this._ID = value;
            this.externalId = null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            this._value = value;
            if (this.displayAriaLive()) {
                this.ariaLiveService.announce(this.displayValue, this.ariaLive);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "progressClass", {
        // Styles
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "labeledClass", {
        get: function () {
            return this._labeled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrLabeled", {
        set: function (value) {
            this._labeled = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "fadeClass", {
        get: function () {
            return this._fade;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrFade", {
        set: function (value) {
            this._fade = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "loopClass", {
        get: function () {
            return this._loop;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrLoop", {
        set: function (value) {
            this._loop = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "successClass", {
        get: function () {
            return this._success;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrSuccess", {
        set: function (value) {
            this._success = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "dangerClass", {
        get: function () {
            return this._danger;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrDanger", {
        set: function (value) {
            this._danger = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "flashClass", {
        get: function () {
            return this._flash;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrFlash", {
        set: function (value) {
            this._flash = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "flashDangerClass", {
        get: function () {
            return this._flashDanger;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrFlashDanger", {
        set: function (value) {
            this._flashDanger = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "displayValue", {
        /**
         * Make sure that we always will have something that is readable
         * for the screen reader
         */
        get: function () {
            if (this.displayval) {
                return this.displayval;
            }
            return this.value + "%";
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Display aria-live only when there is value and it's not 0 or equal to the max value
     */
    ClrProgressBar.prototype.displayAriaLive = function () {
        return (this.value !== undefined || this.value !== 0) && this.value !== this.max;
    };
    Object.defineProperty(ClrProgressBar.prototype, "ariaLive", {
        get: function () {
            if (isBooleanAttributeSet(this.assertive)) {
                return AriaLivePoliteness.assertive;
            }
            if (isBooleanAttributeSet(this.off)) {
                return AriaLivePoliteness.off;
            }
            return AriaLivePoliteness.polite;
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        HostBinding('attr.id'),
        tslib_1.__metadata("design:type", String)
    ], ClrProgressBar.prototype, "externalId", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], ClrProgressBar.prototype, "id", null);
    tslib_1.__decorate([
        Input('clrMax'),
        tslib_1.__metadata("design:type", Number)
    ], ClrProgressBar.prototype, "max", void 0);
    tslib_1.__decorate([
        Input('clrDisplayval'),
        tslib_1.__metadata("design:type", String)
    ], ClrProgressBar.prototype, "displayval", void 0);
    tslib_1.__decorate([
        Input('clrValue'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], ClrProgressBar.prototype, "value", null);
    tslib_1.__decorate([
        HostBinding('class.progress'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [])
    ], ClrProgressBar.prototype, "progressClass", null);
    tslib_1.__decorate([
        HostBinding('class.labeled'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [])
    ], ClrProgressBar.prototype, "labeledClass", null);
    tslib_1.__decorate([
        Input('clrLabeled'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], ClrProgressBar.prototype, "clrLabeled", null);
    tslib_1.__decorate([
        HostBinding('class.progress-fade'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [])
    ], ClrProgressBar.prototype, "fadeClass", null);
    tslib_1.__decorate([
        Input('clrFade'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], ClrProgressBar.prototype, "clrFade", null);
    tslib_1.__decorate([
        HostBinding('class.loop'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [])
    ], ClrProgressBar.prototype, "loopClass", null);
    tslib_1.__decorate([
        Input('clrLoop'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], ClrProgressBar.prototype, "clrLoop", null);
    tslib_1.__decorate([
        HostBinding('class.success'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [])
    ], ClrProgressBar.prototype, "successClass", null);
    tslib_1.__decorate([
        Input('clrSuccess'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], ClrProgressBar.prototype, "clrSuccess", null);
    tslib_1.__decorate([
        HostBinding('class.danger'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [])
    ], ClrProgressBar.prototype, "dangerClass", null);
    tslib_1.__decorate([
        Input('clrDanger'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], ClrProgressBar.prototype, "clrDanger", null);
    tslib_1.__decorate([
        HostBinding('class.flash'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [])
    ], ClrProgressBar.prototype, "flashClass", null);
    tslib_1.__decorate([
        Input('clrFlash'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], ClrProgressBar.prototype, "clrFlash", null);
    tslib_1.__decorate([
        HostBinding('class.flash-danger'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [])
    ], ClrProgressBar.prototype, "flashDangerClass", null);
    tslib_1.__decorate([
        Input('clrFlashDanger'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], ClrProgressBar.prototype, "clrFlashDanger", null);
    tslib_1.__decorate([
        Input('clrAssertive'),
        tslib_1.__metadata("design:type", Boolean)
    ], ClrProgressBar.prototype, "assertive", void 0);
    tslib_1.__decorate([
        Input('clrOff'),
        tslib_1.__metadata("design:type", Boolean)
    ], ClrProgressBar.prototype, "off", void 0);
    ClrProgressBar = tslib_1.__decorate([
        Component({
            providers: [AriaLiveService],
            selector: 'clr-progress-bar',
            template: "\n    <progress [id]=\"id\" [attr.max]=\"max\" [attr.value]=\"value\" [attr.data-displayval]=\"displayValue\"></progress>\n    <span *ngIf=\"displayAriaLive()\">{{ displayValue }}</span>\n  "
        }),
        tslib_1.__metadata("design:paramtypes", [AriaLiveService])
    ], ClrProgressBar);
    return ClrProgressBar;
}());
export { ClrProgressBar };
//# sourceMappingURL=data:application/json;base64,
{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@clr/angular/popover/common/popover.ts","ng://@clr/angular/icon/icon.ts","ng://@clr/angular/icon/icon.module.ts","ng://@clr/angular/utils/loading/loading.ts","ng://@clr/angular/popover/common/popover-old.directive.ts","ng://@clr/angular/popover/common/index.ts","ng://@clr/angular/popover/common/popover.module.ts","ng://@clr/angular/utils/loading/loading-listener.ts","ng://@clr/angular/button/providers/button-in-group.service.ts","ng://@clr/angular/button/button-group/button.ts","ng://@clr/angular/popover/dropdown/menu-positions.ts","ng://@clr/angular/utils/i18n/common-strings.default.ts","ng://@clr/angular/utils/i18n/common-strings.service.ts","ng://@clr/angular/button/button-group/button-group.ts","ng://@clr/angular/button/button-group/button-group.module.ts","ng://@clr/angular/button/button-loading/loading-button.ts","ng://@clr/angular/button/button-loading/loading-button.module.ts","ng://@clr/angular/button/button.module.ts","ng://@clr/angular/utils/host-wrapping/empty-anchor.ts","ng://@clr/angular/utils/host-wrapping/host-wrapping.module.ts","ng://@clr/angular/forms/common/providers/control-id.service.ts","ng://@clr/angular/utils/id-generator/id-generator.service.ts","ng://@clr/angular/utils/a11y/aria-live.service.ts","ng://@clr/angular/forms/common/providers/layout.service.ts","ng://@clr/angular/forms/common/error.ts","ng://@clr/angular/forms/common/helper.ts","ng://@clr/angular/forms/common/providers/ng-control.service.ts","ng://@clr/angular/forms/common/if-error/if-error.service.ts","ng://@clr/angular/forms/common/if-error/if-error.ts","ng://@clr/angular/forms/common/label.ts","ng://@clr/angular/forms/common/providers/mark-control.service.ts","ng://@clr/angular/forms/common/form.ts","ng://@clr/angular/forms/common/layout.ts","ng://@clr/angular/forms/common/common.module.ts","ng://@clr/angular/forms/checkbox/checkbox-wrapper.ts","ng://@clr/angular/utils/host-wrapping/host-wrapper.ts","ng://@clr/angular/forms/common/providers/control-class.service.ts","ng://@clr/angular/forms/common/wrapped-control.ts","ng://@clr/angular/forms/checkbox/checkbox.ts","ng://@clr/angular/forms/checkbox/checkbox-container.ts","ng://@clr/angular/forms/checkbox/checkbox.module.ts","ng://@clr/angular/utils/conditional/if-active.service.ts","ng://@clr/angular/utils/conditional/if-active.directive.ts","ng://@clr/angular/utils/conditional/if-open.service.ts","ng://@clr/angular/utils/conditional/if-open.directive.ts","ng://@clr/angular/utils/conditional/if-expanded.service.ts","ng://@clr/angular/utils/conditional/if-expanded.directive.ts","ng://@clr/angular/utils/conditional/index.ts","ng://@clr/angular/utils/conditional/conditional.module.ts","ng://@clr/angular/utils/focus-trap/focus-trap-tracker.service.ts","ng://@clr/angular/utils/focus-trap/focus-trap.directive.ts","ng://@clr/angular/utils/focus-trap/index.ts","ng://@clr/angular/utils/focus-trap/focus-trap.module.ts","ng://@clr/angular/forms/datepicker/utils/constants.ts","ng://@clr/angular/forms/datepicker/utils/date-utils.ts","ng://@clr/angular/forms/datepicker/model/day-view.model.ts","ng://@clr/angular/forms/datepicker/model/day.model.ts","ng://@clr/angular/forms/datepicker/model/calendar-view.model.ts","ng://@clr/angular/forms/datepicker/model/calendar.model.ts","ng://@clr/angular/forms/datepicker/providers/date-navigation.service.ts","ng://@clr/angular/forms/datepicker/providers/datepicker-focus.service.ts","ng://@clr/angular/forms/datepicker/providers/locale-helper.service.ts","ng://@clr/angular/forms/datepicker/calendar.ts","ng://@clr/angular/utils/key-codes/key-codes.ts","ng://@clr/angular/forms/common/providers/focus.service.ts","ng://@clr/angular/forms/datepicker/providers/date-form-control.service.ts","ng://@clr/angular/forms/datepicker/providers/date-io.service.ts","ng://@clr/angular/forms/datepicker/providers/datepicker-enabled.service.ts","ng://@clr/angular/utils/breakpoints/breakpoints.ts","ng://@clr/angular/forms/datepicker/date-container.ts","ng://@clr/angular/utils/component/is-boolean-attribute-set.ts","ng://@clr/angular/forms/datepicker/date-input.ts","ng://@clr/angular/popover/common/abstract-popover.ts","ng://@clr/angular/forms/datepicker/providers/view-manager.service.ts","ng://@clr/angular/forms/datepicker/datepicker-view-manager.ts","ng://@clr/angular/forms/datepicker/day.ts","ng://@clr/angular/forms/datepicker/daypicker.ts","ng://@clr/angular/forms/datepicker/monthpicker.ts","ng://@clr/angular/forms/datepicker/model/year-range.model.ts","ng://@clr/angular/forms/datepicker/yearpicker.ts","ng://@clr/angular/forms/datepicker/datepicker.module.ts","ng://@clr/angular/forms/input/input-container.ts","ng://@clr/angular/forms/input/input.ts","ng://@clr/angular/forms/input/input.module.ts","ng://@clr/angular/forms/password/password-container.ts","ng://@clr/angular/utils/drag-and-drop/interfaces/drag-event.interface.ts","ng://@clr/angular/forms/password/password.ts","ng://@clr/angular/forms/password/password.module.ts","ng://@clr/angular/forms/radio/radio-wrapper.ts","ng://@clr/angular/forms/radio/radio.ts","ng://@clr/angular/forms/radio/radio-container.ts","ng://@clr/angular/forms/radio/radio.module.ts","ng://@clr/angular/forms/select/select-container.ts","ng://@clr/angular/forms/select/select.ts","ng://@clr/angular/forms/select/select.module.ts","ng://@clr/angular/forms/textarea/textarea-container.ts","ng://@clr/angular/forms/textarea/textarea.ts","ng://@clr/angular/forms/textarea/textarea.module.ts","ng://@clr/angular/forms/forms.module.ts","ng://@clr/angular/utils/loading/loading.module.ts","ng://@clr/angular/utils/outside-click/outside-click.ts","ng://@clr/angular/utils/outside-click/index.ts","ng://@clr/angular/utils/outside-click/outside-click.module.ts","ng://@clr/angular/utils/dom-adapter/dom-adapter.ts","ng://@clr/angular/utils/drag-and-drop/drag-event.ts","ng://@clr/angular/utils/popover/enums/axis.enum.ts","ng://@clr/angular/utils/popover/enums/side.enum.ts","ng://@clr/angular/utils/popover/enums/alignment.enum.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-and-drop-event-bus.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-event-listener.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/draggable-snapshot.service.ts","ng://@clr/angular/utils/drag-and-drop/draggable-ghost.ts","ng://@clr/angular/utils/drag-and-drop/if-dragged.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-handle-registrar.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/global-drag-mode.service.ts","ng://@clr/angular/utils/drag-and-drop/draggable/draggable.ts","ng://@clr/angular/utils/drag-and-drop/droppable/droppable.ts","ng://@clr/angular/utils/drag-and-drop/drag-handle.ts","ng://@clr/angular/utils/drag-and-drop/drag-and-drop.module.ts","ng://@clr/angular/utils/animations/expandable-animation/expandable-animation.ts","ng://@clr/angular/utils/animations/expandable-animation/index.ts","ng://@clr/angular/utils/animations/expandable-animation/expandable-animation.module.ts","ng://@clr/angular/progress/spinner/spinner.ts","ng://@clr/angular/progress/spinner/spinner.module.ts","ng://@clr/angular/data/datagrid/providers/custom-filter.ts","ng://@clr/angular/data/datagrid/providers/state-debouncer.provider.ts","ng://@clr/angular/data/datagrid/providers/page.ts","ng://@clr/angular/data/datagrid/providers/filters.ts","ng://@clr/angular/data/datagrid/utils/datagrid-filter-registrar.ts","ng://@clr/angular/data/datagrid/enums/sort-order.enum.ts","ng://@clr/angular/utils/popover/providers/popover-toggle.service.ts","ng://@clr/angular/data/datagrid/datagrid-filter.ts","ng://@clr/angular/data/datagrid/built-in/nested-property.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-property-string-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-string-filter-impl.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-string-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-property-numeric-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-numeric-filter-impl.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-numeric-filter.ts","ng://@clr/angular/utils/chocolate/oompa-loompa.ts","ng://@clr/angular/data/datagrid/providers/row-action-service.ts","ng://@clr/angular/utils/chocolate/willy-wonka.ts","ng://@clr/angular/data/datagrid/chocolate/datagrid-willy-wonka.ts","ng://@clr/angular/data/datagrid/chocolate/actionable-oompa-loompa.ts","ng://@clr/angular/data/datagrid/providers/global-expandable-rows.ts","ng://@clr/angular/data/datagrid/chocolate/expandable-oompa-loompa.ts","ng://@clr/angular/data/datagrid/built-in/comparators/datagrid-property-comparator.ts","ng://@clr/angular/utils/popover/enums/viewport-violation.enum.ts","ng://@clr/angular/data/datagrid/providers/sort.ts","ng://@clr/angular/data/datagrid/wrapped-column.ts","ng://@clr/angular/utils/popover/providers/popover-events.service.ts","ng://@clr/angular/utils/popover/position-operators.ts","ng://@clr/angular/data/datagrid/enums/display-mode.enum.ts","ng://@clr/angular/data/datagrid/enums/render-step.enum.ts","ng://@clr/angular/utils/popover/providers/popover-position.service.ts","ng://@clr/angular/data/datagrid/datagrid-column.ts","ng://@clr/angular/data/datagrid/providers/items.ts","ng://@clr/angular/data/datagrid/datagrid-items.ts","ng://@clr/angular/data/datagrid/datagrid-placeholder.ts","ng://@clr/angular/popover/common/popover-host-anchor.token.ts","ng://@clr/angular/popover/signpost/providers/signpost-focus-manager.service.ts","ng://@clr/angular/popover/signpost/providers/signpost-id.service.ts","ng://@clr/angular/popover/signpost/signpost-trigger.ts","ng://@clr/angular/popover/signpost/signpost.ts","ng://@clr/angular/data/datagrid/wrapped-cell.ts","ng://@clr/angular/data/datagrid/datagrid-cell.ts","ng://@clr/angular/data/datagrid/enums/selection-type.ts","ng://@clr/angular/data/datagrid/render/render-organizer.ts","ng://@clr/angular/data/datagrid/providers/display-mode.service.ts","ng://@clr/angular/data/datagrid/providers/selection.ts","ng://@clr/angular/data/datagrid/enums/column-changes.enum.ts","ng://@clr/angular/data/datagrid/wrapped-row.ts","ng://@clr/angular/data/datagrid/datagrid-if-expanded.service.ts","ng://@clr/angular/data/datagrid/datagrid-row.ts","ng://@clr/angular/data/datagrid/providers/state.provider.ts","ng://@clr/angular/data/datagrid/providers/table-size.service.ts","ng://@clr/angular/data/datagrid/providers/columns.service.ts","ng://@clr/angular/data/datagrid/datagrid.ts","ng://@clr/angular/data/datagrid/datagrid-action-bar.ts","ng://@clr/angular/data/datagrid/datagrid-action-overflow.ts","ng://@clr/angular/data/datagrid/providers/column-resizer.service.ts","ng://@clr/angular/data/datagrid/datagrid-column-separator.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle-title.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle-button.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle.ts","ng://@clr/angular/data/datagrid/datagrid-detail-registerer.ts","ng://@clr/angular/data/datagrid/datagrid-footer.ts","ng://@clr/angular/data/datagrid/providers/column-state.provider.ts","ng://@clr/angular/data/tree-view/models/selected-state.enum.ts","ng://@clr/angular/data/datagrid/datagrid-hideable-column.ts","ng://@clr/angular/data/datagrid/datagrid-items-trackby.ts","ng://@clr/angular/data/datagrid/datagrid-page-size.ts","ng://@clr/angular/data/datagrid/datagrid-pagination.ts","ng://@clr/angular/data/datagrid/datagrid-row-detail.ts","ng://@clr/angular/data/datagrid/render/cell-renderer.ts","ng://@clr/angular/data/datagrid/render/constants.ts","ng://@clr/angular/data/datagrid/render/header-renderer.ts","ng://@clr/angular/data/datagrid/render/noop-dom-adapter.ts","ng://@clr/angular/data/datagrid/render/row-renderer.ts","ng://@clr/angular/data/datagrid/render/main-renderer.ts","ng://@clr/angular/utils/popover/popover-content.ts","ng://@clr/angular/utils/popover/popover-open-close-button.ts","ng://@clr/angular/utils/popover/popover-close-button.ts","ng://@clr/angular/utils/popover/popover-anchor.ts","ng://@clr/angular/utils/popover/popover.module.ts","ng://@clr/angular/data/datagrid/datagrid.module.ts","ng://@clr/angular/data/stack-view/stack-block.ts","ng://@clr/angular/data/stack-view/stack-view.ts","ng://@clr/angular/data/stack-view/stack-header.ts","ng://@clr/angular/data/stack-view/stack-control.ts","ng://@clr/angular/data/stack-view/stack-input.ts","ng://@clr/angular/data/stack-view/stack-select.ts","ng://@clr/angular/data/stack-view/stack-view-custom-tags.ts","ng://@clr/angular/data/stack-view/stack-content-input.ts","ng://@clr/angular/data/stack-view/stack-view.module.ts","ng://@clr/angular/data/tree-view/models/tree-node.model.ts","ng://@clr/angular/data/tree-view/models/declarative-tree-node.model.ts","ng://@clr/angular/data/tree-view/tree-features.service.ts","ng://@clr/angular/data/tree-view/tree-node.ts","ng://@clr/angular/data/tree-view/tree.ts","ng://@clr/angular/data/tree-view/models/recursive-tree-node.model.ts","ng://@clr/angular/utils/focus/arrow-key-direction.enum.ts","ng://@clr/angular/data/tree-view/models/async-array.ts","ng://@clr/angular/data/tree-view/recursive-for-of.ts","ng://@clr/angular/data/tree-view/recursive-children.ts","ng://@clr/angular/data/tree-view/tree-view.module.ts","ng://@clr/angular/data/data.module.ts","ng://@clr/angular/utils/focus/focusable-item/focusable-item.ts","ng://@clr/angular/utils/focus/focusable-item/custom-focusable-item-provider.ts","ng://@clr/angular/utils/focus/focus.service.ts","ng://@clr/angular/utils/focus/wrap-observable.ts","ng://@clr/angular/popover/dropdown/providers/dropdown-focus-handler.service.ts","ng://@clr/angular/utils/focus/focusable-item/linkers.ts","ng://@clr/angular/popover/dropdown/providers/dropdown.service.ts","ng://@clr/angular/layout/tabs/enums/tabs-layout.enum.ts","ng://@clr/angular/popover/dropdown/dropdown.ts","ng://@clr/angular/utils/focus/focusable-item/basic-focusable-item.service.ts","ng://@clr/angular/popover/dropdown/dropdown-item.ts","ng://@clr/angular/popover/dropdown/dropdown-menu.ts","ng://@clr/angular/popover/dropdown/dropdown-trigger.ts","ng://@clr/angular/popover/dropdown/dropdown.module.ts","ng://@clr/angular/emphasis/alert/utils/alert-types.ts","ng://@clr/angular/emphasis/alert/providers/icon-and-types.service.ts","ng://@clr/angular/emphasis/alert/providers/multi-alert.service.ts","ng://@clr/angular/emphasis/alert/alert-text.ts","ng://@clr/angular/emphasis/alert/alert.ts","ng://@clr/angular/emphasis/alert/alert-item.ts","ng://@clr/angular/emphasis/alert/alerts.ts","ng://@clr/angular/emphasis/alert/alerts-pager.ts","ng://@clr/angular/emphasis/alert/alert.module.ts","ng://@clr/angular/emphasis/emphasis.module.ts","ng://@clr/angular/layout/nav/responsive-nav-codes.ts","ng://@clr/angular/layout/nav/responsive-nav-control-message.ts","ng://@clr/angular/layout/nav/providers/responsive-navigation.service.ts","ng://@clr/angular/layout/main-container/main-container.ts","ng://@clr/angular/layout/main-container/main-container.module.ts","ng://@clr/angular/layout/nav/chocolate/main-container-willy-wonka.ts","ng://@clr/angular/layout/nav/chocolate/nav-detection-oompa-loompa.ts","ng://@clr/angular/layout/nav/header.ts","ng://@clr/angular/layout/nav/nav-level.ts","ng://@clr/angular/layout/nav/navigation.module.ts","ng://@clr/angular/utils/template-ref/template-ref-container.ts","ng://@clr/angular/utils/template-ref/index.ts","ng://@clr/angular/utils/template-ref/template-ref.module.ts","ng://@clr/angular/layout/tabs/chocolate/tabs-willy-wonka.ts","ng://@clr/angular/layout/tabs/chocolate/active-oompa-loompa.ts","ng://@clr/angular/layout/tabs/providers/aria.service.ts","ng://@clr/angular/layout/tabs/providers/tabs.service.ts","ng://@clr/angular/layout/tabs/tab-content.ts","ng://@clr/angular/layout/tabs/tabs-id.provider.ts","ng://@clr/angular/utils/focus/key-focus/enums/focus-direction.enum.ts","ng://@clr/angular/utils/focus/key-codes.enum.ts","ng://@clr/angular/layout/tabs/tab-link.directive.ts","ng://@clr/angular/layout/tabs/tab.ts","ng://@clr/angular/layout/tabs/tab-overflow-content.ts","ng://@clr/angular/utils/focus/key-focus/key-focus-item.ts","ng://@clr/angular/utils/focus/key-focus/util.ts","ng://@clr/angular/accordion/enums/accordion-strategy.enum.ts","ng://@clr/angular/accordion/enums/accordion-status.enum.ts","ng://@clr/angular/utils/focus/key-focus/key-focus.ts","ng://@clr/angular/layout/tabs/tabs.ts","ng://@clr/angular/utils/focus/key-focus/key-focus.module.ts","ng://@clr/angular/layout/tabs/tabs.module.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.provider.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.module.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-group-registration.service.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-icon.service.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav.service.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-group.service.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-group.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-group-children.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-icon.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-link.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav.module.ts","ng://@clr/angular/layout/layout.module.ts","ng://@clr/angular/utils/scrolling/scrolling-service.ts","ng://@clr/angular/modal/modal.ts","ng://@clr/angular/modal/modal-body.ts","ng://@clr/angular/modal/modal.module.ts","ng://@clr/angular/popover/signpost/signpost-positions.ts","ng://@clr/angular/popover/signpost/signpost-content.ts","ng://@clr/angular/popover/signpost/signpost.module.ts","ng://@clr/angular/popover/tooltip/providers/tooltip-id.service.ts","ng://@clr/angular/popover/tooltip/tooltip.ts","ng://@clr/angular/popover/tooltip/tooltip-content.ts","ng://@clr/angular/popover/tooltip/tooltip-trigger.ts","ng://@clr/angular/popover/tooltip/tooltip.module.ts","ng://@clr/angular/popover/popover.module.ts","ng://@clr/angular/wizard/providers/button-hub.service.ts","ng://@clr/angular/wizard/providers/page-collection.service.ts","ng://@clr/angular/wizard/providers/wizard-navigation.service.ts","ng://@clr/angular/wizard/providers/header-actions.service.ts","ng://@clr/angular/wizard/wizard-header-action.ts","ng://@clr/angular/wizard/wizard-page-buttons.ts","ng://@clr/angular/wizard/wizard-page-header-actions.ts","ng://@clr/angular/wizard/wizard-page-navtitle.ts","ng://@clr/angular/wizard/wizard-page-title.ts","ng://@clr/angular/wizard/wizard-page.ts","ng://@clr/angular/wizard/wizard.ts","ng://@clr/angular/wizard/wizard-button.ts","ng://@clr/angular/wizard/wizard-custom-tags.ts","ng://@clr/angular/wizard/wizard-stepnav.ts","ng://@clr/angular/wizard/wizard-stepnav-item.ts","ng://@clr/angular/wizard/wizard.module.ts","ng://@clr/angular/accordion/models/accordion.model.ts","ng://@clr/angular/accordion/providers/accordion.service.ts","ng://@clr/angular/utils/animations/constants.ts","ng://@clr/angular/accordion/utils/animation.ts","ng://@clr/angular/accordion/accordion-description.ts","ng://@clr/angular/accordion/accordion-panel.ts","ng://@clr/angular/accordion/accordion-title.ts","ng://@clr/angular/accordion/accordion.ts","ng://@clr/angular/accordion/accordion-content.ts","ng://@clr/angular/accordion/chocolate/accordion-willy-wonka.ts","ng://@clr/angular/accordion/chocolate/accordion-oompa-loompa.ts","ng://@clr/angular/accordion/accordion.module.ts","ng://@clr/angular/accordion/stepper/models/stepper.model.ts","ng://@clr/angular/accordion/stepper/providers/stepper.service.ts","ng://@clr/angular/accordion/stepper/step-button.ts","ng://@clr/angular/accordion/stepper/stepper-panel.ts","ng://@clr/angular/utils/forms/validation.ts","ng://@clr/angular/accordion/stepper/stepper.ts","ng://@clr/angular/accordion/stepper/chocolate/stepper-willy-wonka.ts","ng://@clr/angular/accordion/stepper/chocolate/stepper-oompa-loompa.ts","ng://@clr/angular/accordion/stepper/stepper.module.ts","ng://@clr/angular/progress/progress-bars/progress-bar.ts","ng://@clr/angular/progress/progress-bars/progress-bar.module.ts","ng://@clr/angular/clr-angular.module.ts","ng://@clr/angular/utils/animations/collapse/collapse.ts","ng://@clr/angular/utils/animations/fade/fade.ts","ng://@clr/angular/utils/animations/fade-slide/fade-slide.ts","ng://@clr/angular/utils/animations/slide/slide.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","Point","ClrIconCustomTag","Directive","selector","CLR_ICON_DIRECTIVES","ClrIconModule","NgModule","imports","CommonModule","declarations","exports","ClrLoadingState","POSITION_ABSOLUTE","Popover","element","scrollableElements","boundOnScrollListener","emitScrollEvent","bind","style","position","top","bottom","left","right","anchor","anchorAlign","popoverAlign","_a","_b","_c","offsetX","_d","offsetY","_e","useAnchorParent","addScrollEventListeners","parentNode","anchorRect","getBoundingClientRect","popoverRect","leftDiff","topDiff","LEFT_TOP","TOP_LEFT","TOP_CENTER","width","TOP_RIGHT","RIGHT_TOP","LEFT_BOTTOM","BOTTOM_LEFT","height","BOTTOM_CENTER","BOTTOM_RIGHT","RIGHT_BOTTOM","LEFT_CENTER","RIGHT_CENTER","popoverComputedStyle","getComputedStyle","marginLeft","parseInt","marginRight","marginTop","marginBottom","transform","Math","round","_scroll","asObservable","release","removeScrollEventListeners","isPositioned","container","Subject","current","document","scrolls","addEventListener","tslib_1.__values","removeEventListener","complete","computedStyles","overflowX","overflowY","openCount","waiting","PopoverDirectiveOld","templateRef","viewContainer","popoverOptions","clrPopoverOldChange","EventEmitter","open","_this","allowMultipleOpen","createPopover","clear","destroyPopover","shift","createPopoverFn","embeddedViewRef","createEmbeddedView","detectChanges","elementNodes","rootNodes","filter","node","nodeType","_popoverInstance","_subscription","anchorElem","anchorPoint","popoverPoint","subscribe","emit","unsubscribe","ngOnDestroy","tslib_1.__decorate","Input","Output","TemplateRef","ViewContainerRef","POPOVER_DIRECTIVES","ClrCommonPopoverModule","LoadingListener","ClrLoading","listener","_loadingState","DEFAULT","LOADING","loadingStateChange","loadingState","tslib_1.__param","Optional","ButtonInGroupService","_changes","updateButtonGroup","button","Injectable","ClrButton","buttonInGroupService","_enableService","_inMenu","_classNames","_name","_type","_id","_disabled","_click","classNames","split","indexOf","join","state","loading","emitClick","ngAfterViewInit","ViewChild","static","ClrButton_1","Component","template","providers","provide","useExisting","SkipSelf","CLR_MENU_POSITIONS","commonStringsDefault","close","show","hide","expand","collapse","more","select","selectAll","previous","info","success","warning","danger","rowActions","pickColumns","showColumns","sortColumn","firstPage","lastPage","nextPage","previousPage","currentPage","totalPages","minValue","maxValue","modalContentStart","modalContentEnd","showColumnsMenuDescription","allColumnsSelected","signpostToggle","signpostClose","singleSelectionAriaLabel","singleActionableAriaLabel","detailExpandableAriaLabel","datagridFilterAriaLabel","alertCloseButtonAriaLabel","datepickerToggle","datepickerPreviousMonth","datepickerCurrentMonth","datepickerNextMonth","datepickerPreviousDecade","datepickerNextDecade","datepickerCurrentDecade","datepickerSelectMonthText","datepickerSelectYearText","daypickerSRCurrentMonthPhrase","daypickerSRCurrentYearPhrase","daypickerSRCurrentDecadePhrase","stackViewChanged","verticalNavToggle","ClrCommonStringsService","_strings","localize","overrides","parse","source","tokens","names","keys","output","forEach","name","replace","providedIn","ClrButtonGroup","buttonGroupNewService","elementRef","commonStrings","inlineButtons","menuButtons","_openMenu","_overflowMenuToggleClicked","ngAfterContentInit","initializeButtons","changes","rearrangeButton","buttons","fromView","toView","inMenu","index","splice","moveIndex","getMoveIndex","buttonToMove","tempInlineButtons","tempInMenuButtons","_menuPosition","pos","toggleMenu","openMenu","onMouseClick","host","nativeElement","classList","contains","ContentChildren","QueryList","HostListener","[class.btn-group]","ElementRef","CLR_BUTTON_GROUP_DIRECTIVES","ClrButtonGroupModule","ClrLoadingButton","el","renderer","buttonState","clrLoadingChange","removeStyle","disabled","removeAttribute","setExplicitButtonWidth","setStyle","setAttribute","SUCCESS","ERROR","boundingClientRect","ClrLoadingButton_1","animations","trigger","transition","opacity","animate","keyframes","offset","[attr.disabled]","Renderer2","CLR_LOADING_BUTTON_DIRECTIVES","ClrLoadingButtonModule","ClrButtonModule","EmptyAnchor","ClrHostWrappingModule","entryComponents","counter","ControlIdService","_idChange","BehaviorSubject","NB_INSTANCES","UNIQUE_ID","InjectionToken","uniqueIdFactory","AriaLivePoliteness","UNIQUE_ID_PROVIDER","useFactory","Layouts","AriaLiveService","ngZone","_document","platformId","announce","message","politeness","polite","off","ariaLiveElement","isPlatformBrowser","createContainer","textContent","runOutsideAngular","clearTimeout","previousTimeout","setTimeout","body","removeChild","createElement","id","add","appendChild","Inject","DOCUMENT","PLATFORM_ID","NgZone","ClrControlError","controlIdService","ariaLiveService","[class.clr-subtext]","[id]","ClrControlHelper","NgControlService","_controlChanges","setControl","control","IfErrorService","ngControlService","_statusChanges","subscriptions","controlChanges","listenForChanges","statusChanges","sendValidity","touched","invalid","triggerStatusChange","sub","ClrIfError","ifErrorService","displayed","Error","displayError","hasError","LayoutService","layout","HORIZONTAL","layoutValues","map","isVertical","VERTICAL","isHorizontal","isCompact","COMPACT","isValid","ClrLabel","layoutService","enableGrid","ngOnInit","addClass","className","forAttr","idChange","disableGrid","HostBinding","MarkControlService","_touched","markAsTouched","ClrForm","markControlService","markAsDirty","[class.clr-form]","[class.clr-form-horizontal]","[class.clr-form-compact]","ClrLayout","ClrCommonFormsModule","IS_TOGGLE","isToggleFactory","IS_TOGGLE_PROVIDER","ClrCheckboxWrapper","toggleService","_dynamic","toggle","label","ContentChild","[class.clr-checkbox-wrapper]","[class.clr-toggle-wrapper]","HostWrapper","containerType","vcr","injector","get","cfr","ComponentFactoryResolver","createComponent","resolveComponentFactory","factory","containerRef","undefined","remove","instance","token","notFoundValue","ControlClassService","controlClass","grid","additional","controlClasses","trim","initControlClass","klass","startsWith","removeClass","WrappedFormControl","wrapperType","ngControl","controlClassService","touchedChange","updateValueAndValidity","triggerValidation","getProviderFromContainer","_containerInjector","listenForErrorStateChanges","pipe","startWith","distinctUntilChanged","setAriaDescribedBy","getAriaDescribedById","ClrCheckbox","_super","tslib_1.__extends","Self","Attribute","Injector","NgControl","String","ClrCheckboxContainer","inline","addGrid","[class.clr-form-control]","[class.clr-form-control-disabled]","[class.clr-row]","ClrCheckboxModule","activeCounter","IF_ACTIVE_ID","tokenFactory","IF_ACTIVE_ID_PROVIDER","IfActiveService","_currentChange","_current","ClrIfActive","ifActiveService","wasActive","activeChange","checkAndUpdateView","subscription","currentChange","newCurrentId","currentId","isNowActive","updateView","Number","IfOpenService","_openChange","_ignoredElementChange","_open","toggleWithEvent","event","originalEvent","registerIgnoredElement","ClrIfOpen","ifOpenService","openChange","change","IfExpandService","expandable","_loading","_expanded","_expandChange","expanded","ClrIfExpanded","expandedChange","_subscriptions","expandChange","CONDITIONAL_DIRECTIVES","ClrConditionalModule","FocusTrapTracker","_previousFocusTraps","activatePreviousTrapper","pop","FocusTrapDirective","focusTrapsTracker","onFocusIn","focus","createFocusableOffScreenEl","offScreenSpan","addReboundEls","nbFocusTrappers","topReboundEl","bottomReboundEl","insertBefore","firstChild","removeReboundEls","setPreviousFocus","previousActiveElement","activeElement","FOCUS_TRAP_DIRECTIVES","ClrFocusTrapModule","DEFAULT_LOCALE_FORMAT","LITTLE_ENDIAN_REGEX","MIDDLE_ENDIAN_REGEX","DELIMITER_REGEX","USER_INPUT_REGEX","MOBILE_USERAGENT_REGEX","RTL_REGEX","LITTLE_ENDIAN","format","MIDDLE_ENDIAN","BIG_ENDIAN","getNumberOfDaysInTheMonth","year","month","Date","getDate","DayViewModel","dayModel","isTodaysDate","isDisabled","isSelected","isFocusable","DayModel","date","isEqual","day","toDate","incrementBy","getFullYear","getMonth","clone","toDateString","toLocaleDateString","CalendarViewModel","calendar","selectedDay","focusableDay","today","firstDayOfWeek","currMonthDayViews","initializeCalendarView","_calendarView","prevMonthCalendar","previousMonth","nextMonthCalendar","nextMonth","daysFromPrevMonthInCalView","numDaysFromPrevMonthInCalView","daysFromNextMonthInCalView","NO_OF_DAYS_IN_A_WEEK","days","prevMonthDayViews","nextMonthDayViews","generateDayViewModels","slice","generateCalendarView","initializeSelectedDay","initializeFocusableDay","isCurrentCalendar","dayViews","isDayInCalendar","currentYear","currentMonth","firstDayOfCurrMonth","getDay","isDayInCalendarView","prev","curr","combinationArr","calendarView","setFocusableFlag","flag","updateFocusableDay","CalendarModel","initializeDaysInCalendar","noOfDaysInCalendar","fill","DateNavigationService","_todaysFullDate","_selectedDayChange","_displayedCalendarChange","_focusOnCalendarChange","_focusedDayChange","_displayedCalendar","setDisplayedCalendar","initializeTodaysDate","_today","notifySelectedDayChanged","initializeCalendar","focusedDay","changeMonth","changeYear","moveToNextMonth","moveToPreviousMonth","moveToCurrentMonth","displayedCalendar","incrementFocusDay","DatepickerFocusService","_ngZone","focusCell","elRef","ngZoneIsStableInBrowser","focusEl","querySelector","focusInput","elementIsFocused","onStable","first","LocaleHelperService","locale","_firstDayOfWeek","initializeLocaleData","_localeDays","narrow","_localeMonthsAbbreviated","_localeMonthsWide","_localeDateFormat","initializeFirstDayOfWeek","initializeLocaleDateFormat","initializeLocaleMonthsAbbreviated","initializeLocaleMonthsWide","initializeLocaleDays","tempArr","tempWideArr","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Wide","tempNarrowArr","Narrow","prevDays","getLocaleMonthNames","Abbreviated","getLocaleFirstDayOfWeek","getLocaleDateFormat","FormatWidth","Short","LOCALE_ID","ClrCalendar","_localeHelperService","_dateNavigationService","_datepickerFocusService","_elRef","_subs","initializeSubscriptions","localeDays","displayedCalendarChange","focusedDayChange","calendarViewModel","focusOnCalendarChange","onKeyDown","keyCode","preventDefault","KeyboardEvent","FocusService","_focused","DateFormControlService","_touchedChange","_dirtyChange","setDisabled","DateIOService","cldrLocaleDateFormat","localeDisplayFormat","delimiters","localeDateFormat","initializeLocaleDisplayFormat","toLocaleLowerCase","test","extractDelimiters","console","toLocaleDisplayFormatString","isNaN","getTime","dateNo","monthNo","dateStr","toString","monthStr","isValidMonth","isValidDate","validateAndGetDate","y","result","currYear","floor","parseToFourDigitYear","getDateValueFromDateString","dateParts","match","firstPart","secondPart","thirdPart","DatepickerEnabledService","_isUserAgentMobile","defaultView","navigator","userAgent","_innerWidth","innerWidth","ClrDateContainer","_ifOpenService","_datepickerEnabledService","dateFormControlService","focusService","focusChange","toggleButton","isEnabled","toggleDatepicker","isBooleanAttributeSet","ClrDateInput","viewContainerRef","dateIOService","dateNavigationService","datepickerEnabledService","datepickerFocusService","dateChange","previousDateChange","updateDate","getValidDateValueFromDate","initialClrDateInputValue","populateServicesFromContainerComponent","listenForUserSelectedDayChanges","listenForControlValueChanges","listenForTouchChanges","listenForDirtyChanges","listenForInputRefocus","processInitialInputs","setFocusStates","setFocus","placeholder","placeholderText","usingNativeDatepicker","onValueChange","validDateValue","usingClarityDatepicker","emitDateOutput","focused","datepickerHasFormControl","setByUserInteraction","updateInput","dateString","setMinutes","getMinutes","getTimezoneOffset","setProperty","setValue","date1","date2","of","hasControl","switchMap","valueChanges","selectedDayChange","dirtyChange","v","HTMLInputElement","[class.clr-input]","AbstractPopover","parentHost","updateAnchor","closeOnOutsideClick","popoverInstance","attachESCListener","detachESCListener","ignore","detachOutsideClickListener","ngAfterViewChecked","attachOutsideClickListener","ignoreGlobalESCListener","documentESCListener","listen","hostClickListener","ignoredElement","ignoredElementClickListener","documentClickListener","ViewManagerService","_currentView","changeToMonthView","changeToYearView","changeToDayView","ClrDatepickerViewManager","parent","_injector","_viewManagerService","configurePopover","isMonthView","isYearView","isDayView","[class.datepicker]","[attr.aria-modal]","ClrDay","_dayView","dayString","onDayViewFocus","dayView","selectDay","[class.day]","ClrDaypicker","ariaLiveMonth","updateAriaLiveYear","CALENDAR_MONTH","calendarMonth","CALENDAR_YEAR","calendarYear","CURRENT_MONTH","CURRENT_YEAR","localeMonthsAbbreviated","[class.daypicker]","ClrMonthpicker","_focusedMonthIndex","calendarMonthIndex","localeMonthsWide","monthIndex","getTabIndex","[class.monthpicker]","YearRangeModel","yearRange","generateYearRange","remainder","ceil","generateRange","from","k","nextDecade","previousDecade","currentDecade","inRange","ClrYearpicker","yearRangeModel","_focusedYear","updateRange","DECADE_RANGE","decadeRange","incrementFocusYearBy","middleYear","yrm","ariaLiveDecadeText","[class.yearpicker]","CLR_DATEPICKER_DIRECTIVES","ClrDatepickerModule","ClrInputContainer","ClrInput","ClrInputModule","FormsModule","TOGGLE_SERVICE","ToggleServiceFactory","DragEventType","TOGGLE_SERVICE_PROVIDER","ClrPasswordContainer","_toggle","ClrPassword","triggerFocus","ClrPasswordModule","ClrRadioWrapper","[class.clr-radio-wrapper]","ClrRadio","ClrRadioContainer","ClrRadioModule","ClrSelectContainer","multi","valueAccessor","SelectMultipleControlValueAccessor","wrapperClass","ClrSelect","[class.clr-select]","ClrSelectModule","ClrTextareaContainer","ClrTextarea","[class.clr-textarea]","ClrTextareaModule","ClrFormsModule","CLR_LOADING_DIRECTIVES","ClrLoadingModule","OutsideClick","strict","outsideClick","documentClick","MouseEvent","OUSTIDE_CLICK_DIRECTIVES","ClrOutsideClickModule","DomAdapter","userDefinedWidth","clientRect","scrollBarWidth","offsetWidth","clientWidth","scrollWidth","computedHeight","getPropertyValue","elementClientRect","minWidth","ClrDragEvent","dragEvent","dragPosition","group","dragDataTransfer","dropPointPosition","ClrAxis","ClrSide","ClrAlignment","DragAndDropEventBusService","dragStart","dragMove","dragEnd","drop","broadcast","type","DRAG_START","DRAG_MOVE","DRAG_END","DROP","DragEventListenerService","eventBus","hasDragStarted","attachDragListeners","draggableEl","listeners","customDragEvent","detachDragListeners","nestedListeners","getNativeEventObject","changedTouches","startOnEvent","moveOnEvent","endOnEvent","startEvent","initialPosition","pageX","pageY","selectEvent","stopImmediatePropagation","moveEvent","endEvent","eventType","generateDragEvent","ghostElement","nativeEvent","moveX","moveY","DraggableSnapshotService","domAdapter","capture","draggableElClientRect","snapshotDragEvent","discard","ClrDraggableGhost","dragEventListener","draggableSnapshot","leaveAnimConfig","params","draggableGhostEl","setDefaultGhostSize","hasDraggableState","isAnimationConfigured","dragMoved","animateToOnLeave","topLeftPosition","findTopLeftPosition","setPositionStyle","findDropPointPosition","setSizeStyle","run","ClrIfDragged","dragStarted","dragEnded","DragHandleRegistrarService","_defaultHandleEl","_customHandleEl","makeElementHandle","registerCustomHandle","unregisterCustomHandle","GlobalDragModeService","enter","exit","ClrDraggable","dragHandleRegistrar","globalDragMode","dragOn","dragStartEmitter","dragMoveEmitter","dragEndEmitter","componentFactory","createDefaultGhost","cloneNode","destroyDefaultGhost","defaultHandleEl","customGhost","[class.draggable]","[class.being-dragged]","ClrDroppable","isDraggableMatch","_isDraggableOver","_dropTolerance","dragLeaveEmitter","dragEnterEmitter","dropEmitter","droppableEl","_group","dropToleranceGenerator","toleranceValues","tolerance","unsubscribeFrom","checkGroupMatch","draggableGroup","some","groupKey","isInDropArea","point","onDragStart","dragStartEvent","dragMoveSubscription","dragMoveEvent","onDragMove","dragEndSubscription","dragEndEvent","onDragEnd","isDraggableOver","dragEnterEvent","DRAG_ENTER","dragLeaveEvent","DRAG_LEAVE","dropEvent","dragStartSubscription","[class.droppable]","[class.draggable-match]","ClrDragHandle","[class.drag-handle]","CLR_DRAG_AND_DROP_DIRECTIVES","ClrDragAndDropModule","ClrExpandableAnimation","startHeight","clrExpandTrigger","animationDone","updateStartHeight","overflow","EXPANDABLE_ANIMATION_DIRECTIVES","ClrExpandableAnimationModule","ClrSpinner","ariaLive","_inline","_inverse","_small","_medium","assertive","[attr.aria-busy]","CLR_SPINNER_DIRECTIVES","ClrSpinnerModule","CustomFilter","StateDebouncer","_change","nbChanges","changeStart","changeDone","Page","stateDebouncer","preventEmit","activated","_size","_sizeChange","size","oldSize","_totalItems","total","last","_last","totalItems","page","lastInPage","min","resetPageSize","FiltersProvider","_page","_all","hasActiveFilters","isActive","getActiveFilters","ret","resetPageAndEmitFilterChange","hasUnregistered","registered","RegisteredFilter","matchIndex","findIndex","item","accepts","filters","unregister","DatagridFilterRegistrar","setFilter","deleteFilter","ClrDatagridSortOrder","ClrPopoverToggleService","_openEventChange","_openEvent","getEventChange","openEvent","ClrDatagridFilter","_filters","smartToggleService","popoverId","subs","ariaExpanded","smartPosition","axis","side","AFTER","END","content","read","ClrDatagridFilter_1","NestedProperty","prop","splitProp","getPropValue","nestedProp","DatagridPropertyStringFilter","exact","search","propValue","toLowerCase","DatagridStringFilterImpl","filterFn","_rawValue","_lowerCaseValue","lowerCaseValue","property","equals","other","DatagridStringFilter","filterValueChange","input","DatagridStringFilter_1","DatagridPropertyNumericFilter","low","high","DatagridNumericFilterImpl","_low","_high","vals","DatagridNumericFilter","popoverToggleService","values","isFinite","DatagridNumericFilter_1","OompaLoompa","cdr","willyWonka","chocolate","latestFlavor","flavor","ngAfterContentChecked","RowActionService","actionableCount","register","WillyWonka","_chocolate","DatagridWillyWonka","ActionableOompaLoompa","hasActionableRow","ChangeDetectorRef","ExpandableRowsCount","expandableCount","ExpandableOompaLoompa","hasExpandableRow","DatagridPropertyComparator","compare","a","propA","propB","ClrViewportViolation","Sort","_reverse","_comparator","emitChange","sortBy","forceReverse","comparator","reverse","WrappedColumn","columnView","ClrPopoverEventsService","smartOpenService","outsideClickClose","scrollToClose","addEscapeListener","addClickListener","addScrollListener","removeAllEventListeners","ignoredEvent","documentScroller","fromEvent","scrollSubscription","testForSmartPopoverContentContainer","setAnchorFocus","removeScrollListener","parentElement","localName","removeClickListener","escapeListener","removeEscapeListener","_anchorButtonRef","ref","_closeButtonRef","setCloseFocus","anchorButtonRef","_contentRef","HTMLDocument","flipSides","nudgeContent","forward","nextAlignment","flipSidesAndNudgeContent","flip","nudge","nudgeBack","align","xDiff","yDiff","alignHorizontal","alignVertical","xOffset","yOffset","horizontalOffset","START","CENTER","verticalOffset","DatagridDisplayMode","DatagridRenderStep","ClrPopoverPositionService","eventService","_position","alignContent","currentAnchorCoords","currentContentCoords","contentOffsets","visibilityViolations","violations","mockCoords","TOP","LEFT","window","innerHeight","documentElement","clientHeight","BOTTOM","RIGHT","testVisibility","errorSum","reduce","count","handleVerticalAxisOneViolation","handleHorizontalAxisOneViolation","handleVerticalAxisTwoViolations","handleHorizontalAxisTwoViolations","flipAndNudgeLeft","flipAndNudgeRight","flipAndNudgeDown","flipAndNudgeUp","ClrDatagridColumn","_sort","changeDetectorRef","colType","_sorted","sortedChange","_sortOrder","UNSORTED","sortOrderChange","customFilter","_sortSubscription","sort","markForCheck","sortOrder","_sortBy","sortIcon","sorted","_field","field","ASC","DESC","sortable","custom","newValue","updateFilterValue","wrappedInjector","[class.datagrid-column]","[attr.aria-sort]","role","changeDetection","ChangeDetectionStrategy","OnPush","Items","trackBy","_smart","_displayed","_allChanges","destroy","_filtersSub","_sortSub","_pageSub","smartenUp","_filterItems","_sortItems","_changePage","items","emitAllChanges","smart","refresh","uninitialized","_filtered","firstItem","lastItem","ClrDatagridItems","differs","differ","iterableProxy","NgForOf","newItems","ngForOf","ngDoCheck","_rawItems","ngForTrackBy","find","diff","all","IterableDiffers","ClrDatagridPlaceholder","[class.datagrid-placeholder-container]","POPOVER_HOST_ANCHOR","SignpostFocusManager","_triggerEl","focusTrigger","SignpostIdService","setId","ClrSignpostTrigger","signpostIdService","signpostFocusManager","triggerEl","isOpen","prevIsOpen","focusOnClose","ariaControl","onSignpostTriggerClick","Event","class","[attr.aria-label]","[attr.aria-expanded]","[attr.aria-controls]","[class.active]","ClrSignpost","useCustomTrigger","[class.signpost]","WrappedCell","cellView","ClrDatagridCell","[class.datagrid-cell]","[class.datagrid-signpost-trigger]","SelectionType","DatagridRenderOrganizer","_renderStep","alreadySized","filterRenderSteps","step","renderStep","testStep","resize","CALCULATE_MODE_ON","CLEAR_WIDTHS","COMPUTE_COLUMN_WIDTHS","ALIGN_COLUMNS","CALCULATE_MODE_OFF","DisplayModeService","renderOrganizer","_view","DISPLAY","CALCULATE","DatagridColumnChanges","nbSelection","Selection","_items","preserveSelection","prevSelectionRefs","_selectionType","None","rowSelectionMode","debounce","_selectable","clearSelection","allChanges","updatedItems","selectionType","Single","newSingle_1","trackBy_1","selectionUpdated_1","currentSingle","prevSingleSelectionRef","lookup","maybe","Multi","leftOver_1","trackBy_2","selectionUpdated_2","selectedIndex","selected","_currentSingle","updateCurrent","selectItem","deselectItem","indexOfItem","setSelected","isAllSelected","displayedItems","toggleAll","currentIndex","WrappedRow","rowView","DatagridIfExpandService","_replace","_animate","setReplace","replaceValue","nbRow","ClrDatagridRow","selection","rowActionService","globalExpandable","displayMode","SELECTION_TYPE","expandAnimationTrigger","_selected","selectedChanged","displayCells","radioId","checkboxId","combineLatest","expandReplaceValue","expandChangeValue","replaced","toggleExpand","expandAnimation","dgCells","cell","_scrollableCells","insert","view","viewChange","detach","_calculatedCells","[class.datagrid-row]","[class.datagrid-selected]","[attr.aria-owns]","StateProvider","debouncer","to","by","activeFilters","activeFilters_1","activeFilters_1_1","TableSizeService","_tableRef","table","tableRef","getColumnDragHeight","ColumnsService","columns","column","columnStates","hideable","emitStateChangeAt","columnIndex","emitStateChange","ClrDatagrid","organizer","expandableRows","stateProvider","singleSelectedChanged","clrDgSingleSelectionAriaLabel","clrDgSingleActionableAriaLabel","clrDetailExpandableAriaLabel","dataChanged","rows","row","_displayedRows","datagridTable","_projectedDisplayColumns","_projectedCalculationColumns","_calculationRows","[class.datagrid-host]","ClrDatagridActionBar","[class.datagrid-action-bar]","clrDgActionId","ClrDatagridActionOverflow","zone","openState","focusFirstButton","firstButton","ColumnResizerService","_resizedBy","widthBeforeResize","minColumnWidth","startResize","isWithinMaxResizeRange","endResize","calculateResize","maxResizeRange","ClrDatagridColumnSeparator","columnResizerService","tableSizeService","columnSeparatorId","showTracker","resizeTrackerEl","tableHeight","moveTracker","resizedBy","redFlagTracker","hideTracker","[class.datagrid-column-separator]","ALL_COLUMN_CHANGES","ClrDatagridColumnToggleTitle","ClrDatagridColumnToggleButton","columnsService","allSelected","hideableColumns","hidden","hideableColumn","HIDDEN","Observable","ClrDatagridColumnToggle","columnSwitchId","BEFORE","_allColumnsVisible","hideableColumnStates","columnState","toggleColumnState","columnToToggle","toggleSwitchPanel","menuDescriptionElement","allSelectedElement","trackByFn","[class.column-switch-wrapper]","DatagridDetailRegisterer","expandableRowsCount","ClrDatagridFooter","hasHideableColumns","[class.datagrid-footer]","COLUMN_STATE","columnStateFactory","ClrSelectedState","COLUMN_STATE_PROVIDER","ClrDatagridHideableColumn","titleTemplateRef","hiddenChange","clrDgHidden","_hidden","ClrDatagridItemsTrackBy","ClrDatagridPageSize","pageSizeOptions","ClrDatagridPagination","currentChanged","_pageSubscription","middlePages","updateCurrentPage","parsed","currentPageInputRef","[class.pagination]","ClrDatagridRowDetail","replacedRow","replaceChange","[class.datagrid-row-flex]","[class.datagrid-row-detail]","[class.datagrid-container]","DatagridCellRenderer","clearWidth","stateSubscription","runAllChanges","stateChanges","WIDTH","setWidth","setHidden","strictWidth","DatagridHeaderRenderer","resizeEmitter","widthSet","autoSet","detectStrictWidth","widthAfterResize","computeWidth","getColumnWidthState","setColumnState","NoopDomAdapter","DatagridRowRenderer","cells","domAdapterFactory","DatagridMainRenderer","_heightSet","columnsSizesStable","shouldStabilizeColumns","computeHeadersWidth","sizeChange","resetDatagridHeight","setupColumns","headers","stabilizeColumns","shouldComputeHeight","computeDatagridHeight","header","nbColumns","allStrict","descendants","deps","ClrPopoverContent","smartPositionService","smartEventsService","hasPositionCoords","clickToClose","addContent","removeContent","contentRef","positionCoords","ClrPopoverOpenCloseButton","openCloseChange","handleClick","[class.clr-smart-open-close]","ClrPopoverCloseButton","closeChange","closeButtonRef","[class.clr-smart-close-button]","ClrPopoverAnchor","smartEventService","[class.clr-anchor]","ClrPopoverModuleNext","CLR_DATAGRID_DIRECTIVES","ClrDatagridModule","ClrStackBlock","uniqueId","_changedChildren","_fullyInitialized","_changed","addChild","getStackChildrenId","[class.stack-block]","ClrStackView","editable","save","_editMode","editingChange","ClrStackHeader","stackView","StackControl","modelChange","editing","model","ClrStackInput","inputs","outputs","ClrStackSelect","ClrStackViewCustomTags","ClrStackContentInput","[attr.aria-labelledby]","CLR_STACK_VIEW_DIRECTIVES","ClrStackViewModule","TreeNodeModel","UNSELECTED","propagateUp","propagateDown","INDETERMINATE","children","child","_updateSelectionFromChildren","toggleSelection","propagate","newState","SELECTED","computeSelectionStateFromChildren","oneSelected","oneUnselected","DeclarativeTreeNodeModel","_addChild","_removeChild","TreeFeaturesService","selectable","eager","childrenFetched","treeFeaturesFactory","existing","TREE_FEATURES_PROVIDER","ClrTreeNode","nodeId","featuresService","expandService","STATES","skipEmitChange","selectedChange","recursion","_model","context","clrModel","isExpandable","overflow-y","[class.clr-tree-node]","ClrTree","ArrowKeyDirection","RecursiveTreeNodeModel","getChildren","_children","clearChildren","fetchChildren","asyncChildren","then","raw","wrapChildren","isObservable","rawModels","ClrRecursiveForOf","ngOnChanges","wrapped","isArray","nodes","childrenFetchSubscription","root","RecursiveChildren","shouldRender","getContext","$implicit","CLR_TREE_VIEW_DIRECTIVES","ClrTreeViewModule","ClrDataModule","FocusableItem","customFocusableItemProvider","implementation","_unlistenFuncs","reset","listenToArrowKeys","move","UP","DOWN","registerContainer","activateCurrent","moveTo","blur","direction","moved","activate","detachListeners","unlisten","clrFocusServiceFactory","FOCUS_SERVICE_PROVIDER","wrapObservable","observable","onSubscribe","onUnsubscribe","observer","DropdownFocusHandler","focusBackOnTrigger","resetChildren","moveToFirstItemWhenOpen","handleRootFocus","_trigger","_container","stopPropagation","take","relatedTarget","click","openAndGetChildren","closeAndGetThis","ReplaySubject","down","up","addChildren","loop","linkParent","DROPDOWN_FOCUS_HANDLER_PROVIDER","RootDropdownService","closeMenus","clrRootDropdownFactory","TabsLayout","ROOT_DROPDOWN_PROVIDER","ClrDropdown","dropdownService","isMenuClosable","[class.dropdown]","[class.open]","BasicFocusableItem","BASIC_FOCUSABLE_ITEM_PROVIDER","useClass","ClrDropdownItem","dropdown","_dropdownService","focusableItem","setByDeprecatedDisabled","onDropdownItemClick","[class.disabled]","[class.dropdown-item]","[attr.role]","[attr.aria-disabled]","ClrDropdownMenu","nested","focusHandler","toArray","notifyOnChanges","[class.dropdown-menu]","ClrDropdownTrigger","isRootLevelToggle","onDropdownTriggerClick","[class.dropdown-toggle]","[class.expandable]","[attr.aria-haspopup]","CLR_DROPDOWN_DIRECTIVES","ClrDropdownModule","ALERT_TYPES","AlertIconAndTypesService","defaultIconShape","_alertIconShape","_alertType","val","iconInfoFromType","shape","title","returnObj","cssClass","MultiAlertService","allAlerts","alert","_closed","activeAlerts","manage","alerts","max","ClrAlertText","ClrAlert","iconService","multiAlertService","isSmall","closable","isAppLevel","clrCloseButtonAriaLabel","_closedChanged","previouslyHidden","announceAriaLiveMessage","alertType","alertIconShape","isHidden","alertTexts","alertText","detectChangesIfNeeded","currentAlert","ClrAlertItem","ClrAlerts","currentAlertIndexChange","currentAlertChange","isInteger","[class.alerts]","[class.alert-danger]","[class.alert-info]","[class.alert-success]","[class.alert-warning]","ClrAlertsPager","multiAlertServiceChanges","pageUp","pageDown","[class.alerts-pager]","CLR_ALERT_DIRECTIVES","ClrAlertModule","ClrEmphasisModule","ResponsiveNavCodes","NAV_LEVEL_1","NAV_LEVEL_2","NAV_CLOSE_ALL","NAV_OPEN","NAV_CLOSE","NAV_TOGGLE","NAV_CLASS_HAMBURGER_MENU","NAV_CLASS_OVERFLOW_MENU","NAV_CLASS_TRIGGER_1","NAV_CLASS_TRIGGER_2","NAV_CLASS_LEVEL_1","NAV_CLASS_LEVEL_2","ResponsiveNavControlMessage","_controlCode","_navLevel","ResponsiveNavigationService","responsiveNavList","registerNavSubject","controlNavSubject","closeAllNavs","registerNav","navLevel","isNavRegistered","unregisterNav","sendControlMessage","controlCode","ClrMainContainer","responsiveNavService","_classList","navControl","processMessage","navClass","controlNav","[class.main-container]","CLR_LAYOUT_DIRECTIVES","ClrMainContainerModule","MainContainerWillyWonka","NavDetectionOompaLoompa","sum","ClrHeader","isNavLevel1OnPage","isNavLevel2OnPage","openNavLevel","responsiveNavCodes","registeredNavs","navLevelList","initializeNavTriggers","resetNavTriggers","navList","closeOpenNav","toggleNav","[class.header]","ClrNavLevel","level","addNavClass","navHostClassList","_level","navHost","CLR_NAVIGATION_DIRECTIVES","ClrNavigationModule","TemplateRefContainer","TEMPLATE_REF_DIRECTIVES","ClrTemplateRefModule","TabsWillyWonka","ActiveOompaLoompa","ifActive","AriaService","TabsService","tab","active","tabLink","inOverflow","nbTabContentComponents","ClrTabContent","ariaService","tabsService","tabContentId","viewRef","tabContentViewContainer","ariaLabelledBy","ariaControls","nbTabsComponent","TABS_ID","ClrFocusDirection","KeyCodes","IEKeyCodes","TABS_ID_PROVIDER","nbTabLinkComponents","ClrTabLink","tabsId","tabLinkId","templateRefContainer","_inOverflow","[attr.aria-hidden]","[class.btn]","ClrTab","ClrTabOverflowContent","ClrKeyFocusItem","tabIndex","getKeyCodes","code","AccordionStrategy","AccordionStatus","ClrKeyFocus","focusOnLoad","_focusableItems","clrKeyFocusItems","elements","initializeFocus","listenForItemUpdates","handleKeyboardEvent","prevKeyPressed","currentFocusIsNotFirstItem","keyAction","nextKeyPressed","currentFocusIsNotLastItem","Home","End","focusableItems","keyCodes","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","preventArrowKeyScroll","setClickedItemCurrent","resetTabFocus","currentItem","positionInRange","action","BOTH","ClrTabs","_tabLinkDirectives","tabLinkElements","link","overflowTabs","activeTab","listenForTabLinkChanges","listenForOverflowMenuFocusChanges","tabLinkDirectives","toggleOverflow","checkFocusVisible","keyFocus","overflowPosition","tabs","focusToFirstItemInOverflow","nextFocusedItemIsNotInOverflow","KEY_FOCUS_DIRECTIVES","ClrKeyFocusModule","CLR_TABS_DIRECTIVES","ClrTabsModule","FOCUS_ON_VIEW_INIT","FOCUS_ON_VIEW_INIT_PROVIDER","useValue","ClrFocusOnViewInit","focusOnViewInit","directFocus","_isEnabled","onFocusout","Boolean","FOCUS_ON_VIEW_INIT_DIRECTIVES","ClrFocusOnViewInitModule","VerticalNavGroupRegistrationService","navGroupCount","registerNavGroup","unregisterNavGroup","VerticalNavIconService","_icons","registerIcon","unregisterIcon","VerticalNavService","_animateOnCollapsed","_collapsedChanged","_collapsed","_collapsible","collapsible","updateCollapseBehavior","collapsed","ClrVerticalNav","_navService","_navIconService","_navGroupRegistrationService","_sub","collapsedChanged","hasIcons","toggleByButton","[class.is-collapsed]","[class.has-nav-groups]","[class.has-icons]","VerticalNavGroupService","EXPANDED_STATE","COLLAPSED_STATE","ClrVerticalNavGroup","_itemExpand","_navGroupService","wasExpanded","_expandAnimationState","expandAnimationState","animateOnCollapsed","goingToCollapse","expandGroup","collapseGroup","expandAnimationDone","$event","toState","visibility","ClrVerticalNavGroupChildren","ClrVerticalNavIcon","_verticalNavIconService","ClrVerticalNavLink","expandParentNavGroup","CLR_VERTICAL_NAV_DIRECTIVES","ClrVerticalNavModule","ClrLayoutModule","ScrollingService","stopScrolling","resumeScrolling","ClrModal","_scrollingService","modalId","_openChanged","staticBackdrop","skipAnimation","bypassScrollService","stopClose","altClose","currentValue","focusTrap","fadeDone","viewProviders","ClrModalBody","tabindex","mouseDown","mouseUp","[attr.tabindex]","CLR_MODAL_DIRECTIVES","ClrModalModule","SIGNPOST_POSITIONS","top-left","top-middle","top-right","right-top","right-middle","right-bottom","bottom-right","bottom-middle","bottom-left","left-bottom","left-middle","left-top","default","POSITIONS","ClrSignpostContent","signpostContentId","setPosition","[class.signpost-content]","CLR_SIGNPOST_DIRECTIVES","ClrSignpostModule","TooltipIdService","updateId","ClrTooltip","[class.tooltip]","SIZES","ClrTooltipContent","tooltipIdService","[class.tooltip-content]","[style.opacity]","ClrTooltipTrigger","tooltipId","ariaDescribedBy","showTooltip","hideTooltip","[class.tooltip-trigger]","[attr.aria-describedby]","CLR_TOOLTIP_DIRECTIVES","ClrTooltipModule","ClrPopoverModule","ButtonHubService","buttonsReady","_previousBtnClicked","_nextBtnClicked","_dangerBtnClicked","_cancelBtnClicked","_finishBtnClicked","_customBtnClicked","buttonClicked","buttonType","PageCollectionService","_pagesReset","pages","pageCount","pagesCount","pagesAsArray","getPageById","foundPages","checkResults","getPageByIndex","pagesLastIndex","getPageIndex","results","requestedPageId","foundPagesCount","pageRange","start","end","getPageRangeFromPages","otherPage","startIndex","endIndex","pageIndex","otherPageIndex","getPreviousPage","previousPageIndex","previousPageIsCompleted","completed","getNextPage","nextPageIndex","getStepItemIdForPage","pageIdParts","commitPage","pageHasOverrides","stopNext","onCommit","updateCompletedStates","firstIncompleteIndex","findFirstIncompletePageIndex","returnIndex","findFirstIncompletePage","myIncompleteIndex","WizardNavigationService","pageCollection","buttonService","_currentChanged","navServiceLoaded","forceForwardNavigation","_movedToNextPage","_wizardFinished","_movedToPreviousPage","_cancelWizard","wizardHasAltCancel","wizardHasAltNext","wizardStopNavigation","wizardDisableStepnav","previousButtonSubscription","previousBtnClicked","currentPageIsFirst","previousStepDisabled","previousButtonClicked","nextButtonSubscription","nextBtnClicked","checkAndCommitCurrentPage","dangerButtonSubscription","dangerBtnClicked","finishButtonSubscription","finishBtnClicked","customButtonSubscription","customBtnClicked","customButtonClicked","cancelButtonSubscription","cancelBtnClicked","pageOnCancel","cancel","pagesResetSubscription","pagesReset","setFirstPageCurrent","_currentPage","onLoad","currentPageIsLast","forceNext","iAmTheLastPage","isNext","isDanger","isDangerNext","isFinish","readyToComplete","primaryButtonClicked","finishButtonClicked","dangerButtonClicked","nextButtonClicked","finish","goTo","pageToGoToOrId","lazyComplete","pageToGoTo","myPages","pagesToCheck","goingForward","currentPageIndex","canGoTo","previousPagePasses","okayToMove","setLastEnabledPageCurrent","allPages","lastCompletedPageIndex","updateNavigation","toSetCurrent","HeaderActionService","navService","wizardHdrActions","wizardHeaderActions","hasHeaderActions","currentPageHasHeaderActions","wizardHasHeaderActions","wizardHeaderActionIndex","ClrWizardHeaderAction","headerActionClicked","ClrWizardPageButtons","pageButtonsTemplateRef","ClrWizardPageHeaderActions","pageHeaderActionsTemplateRef","ClrWizardPageNavTitle","pageNavTitleTemplateRef","ClrWizardPageTitle","pageTitleTemplateRef","wizardPageIndex","ClrWizardPage","_nextStepDisabled","nextStepDisabledChange","_previousStepDisabled","previousStepDisabledChange","_stopCancel","stopCancelChange","_stopNext","_complete","valBool","nextStepDisabled","enabled","previousCompleted","pageTitle","pageNavTitle","_headerActions","_buttons","makeCurrent","[class.clr-wizard-page]","ClrWizard","headerActionService","_forceForward","_stopNavigation","_disableStepnav","_stopModalAnimations","onCancel","wizardFinished","onReset","currentPageChanged","onMoveNext","onMovePrevious","listenForNextPageChanges","listenForPreviousPageChanges","listenForCancelChanges","listenForFinishedChanges","listenForPageChanges","headerActions","updateNavOnPageChanges","skipChecksAndEmits","forceFinish","stopNavigation","modalCancel","checkAndCancel","currentPageHasOverrides","stopCancel","pageId","movedToNextPage","wizardTitle","movedToPreviousPage","notifyWizardCancel","emitWizardFinished","forEachAddedItem","forEachRemovedItem","[class.clr-wizard]","[class.wizard-md]","[class.wizard-lg]","[class.wizard-xl]","[class.lastPage]","DEFAULT_BUTTON_TYPES","CUSTOM_BUTTON_TYPES","ClrWizardButton","wasClicked","checkDefaultAndCustomType","valueToCheck","typeToLookUp","nav","isCancel","isPrevious","ClrWizardCustomTags","ClrWizardStepnav","pageService","ClrWizardStepnavItem","pageGuard","isCurrent","[attr.aria-selected]","[class.clr-nav-link]","[class.nav-item]","[class.no-click]","[class.complete]","CLR_WIZARD_DIRECTIVES","ClrWizardModule","accordionCount","AccordionPanelModel","accordionId","status","Inactive","templateId","AccordionModel","strategy","Default","_panels","setStrategy","updatePanelOrder","ids","removeOldPanels","addPanel","togglePanel","panelId","panelIsOpen","closeAllPanels","disablePanel","panels","panel","AccordionService","accordion","_panelsChanges","getPanelChanges","emitUpdatedPanels","defaultAnimationTiming","panelAnimation","display","stepAnimation","ClrAccordionDescription","[class.clr-accordion-description]","ClrAccordionPanel","accordionService","ifExpandService","panelOpen","panelOpenChange","isAccordion","tap","emitPanelChange","previousValue","collapsePanelOnAnimationDone","getPanelStateClasses","getAccordionContentId","getAccordionHeaderId","[class.clr-accordion-panel]","ClrAccordionTitle","[class.clr-accordion-title]","ClrAccordion","multiPanel","setAccordionStrategy","listenForDOMChanges","[class.clr-accordion]","ClrAccordionContent","AccordionWillyWonka","AccordionOompaLoompa","ClrAccordionModule","StepperModel","getNumberOfIncompletePanels","getNumberOfOpenPanels","openFirstPanel","Complete","navigateToNextPanel","currentPanelId","currentPanelValid","completePanel","openNextPanel","setPanelError","overrideInitialPanel","setPanelsWithErrors","resetPanels","resetPanel","getNextPanel","resetAllFuturePanels","firstPanel","getFirstPanel","nextPanel","StepperService","panelsCompleted","getAllCompletedPanelChanges","_activeStepChanges","activeStep","updateNextStep","allPanelsCompleted","ClrStepButtonType","ClrStepperPanel","formGroupName","ngModelGroup","stepperService","_value","triggerAllFormControlValidationIfError","listenToFocusChanges","headerButton","triggerAllFormControlValidation","formGroup","controls","FormControl","FormGroup","FormGroupName","NgModelGroup","ClrStepButton","clrStep","Next","submitButton","Submit","valid","[class.clr-step-button]","[type]","ClrStepper","ngForm","form","listenForPanelsCompleted","listenForFormResetChanges","initialPanel","pristine","ngSubmit","setPanelsWithFormErrors","panelsWithErrors","[class.clr-stepper-forms]","FormGroupDirective","NgForm","StepperWillyWonka","StepperOompaLoompa","ClrStepperModule","ClrProgressBar","externalId","_ID","displayAriaLive","displayValue","_labeled","_fade","_loop","_success","_danger","_flash","_flashDanger","displayval","CLR_PROGRESS_BAR_DIRECTIVES","ClrProgressBarModule","ClarityModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Do NOT Angular this up. It assumes we're in the DOM, plays with native elements, ...\n * It could potentially be used as part of @clr/ui as a vanilla Javascript helper.\n */\n\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { PopoverOptions } from './popover-options.interface';\nexport enum Point {\n  RIGHT_CENTER,\n  RIGHT_TOP,\n  RIGHT_BOTTOM,\n  TOP_CENTER,\n  TOP_RIGHT,\n  TOP_LEFT,\n  BOTTOM_CENTER,\n  BOTTOM_RIGHT,\n  BOTTOM_LEFT,\n  LEFT_CENTER,\n  LEFT_TOP,\n  LEFT_BOTTOM,\n}\n\nconst POSITION_RELATIVE = 'relative';\nconst POSITION_ABSOLUTE = 'absolute';\nconst POSITION_FIXED = 'fixed';\n\nconst OVERFLOW_SCROLL = 'scroll';\nconst OVERFLOW_AUTO = 'auto';\n\nexport class Popover {\n  private _scroll: Subject<void>;\n\n  constructor(private element: any) {\n    // Browsers don't agree with what to do if some of these are not specified, so we set them all to be safe.\n    element.style.position = POSITION_ABSOLUTE;\n    element.style.top = 0;\n    element.style.bottom = 'auto';\n    element.style.left = 0;\n    element.style.right = 'auto';\n  }\n\n  // TODO: need a way to account for parameters that change dynamically (positioning).\n  public anchor(\n    anchor: any,\n    anchorAlign: Point,\n    popoverAlign: Point,\n    { offsetX = 0, offsetY = 0, useAnchorParent = false }: PopoverOptions = {}\n  ): Observable<any> {\n    // TODO: we are assuming here that the popover is inside or next to the anchor.\n    // We'd need to go up the popover tree too otherwise\n\n    this.addScrollEventListeners(anchor);\n    if (useAnchorParent) {\n      anchor = anchor.parentNode;\n    }\n    // explicitly override anchor's style to static\n    anchor.style.position = 'static';\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const popoverRect = this.element.getBoundingClientRect();\n\n    // position of left top corner of anchor + the offset\n    let leftDiff: number = anchorRect.left - popoverRect.left + offsetX;\n    let topDiff: number = anchorRect.top - popoverRect.top + offsetY;\n\n    // first, adjust positioning based on anchor's align point\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += anchorRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += anchorRect.height / 2;\n        leftDiff += anchorRect.width;\n        break;\n      default:\n    }\n\n    // second, adjust positioning based on popover's align point\n    switch (popoverAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        leftDiff -= popoverRect.width;\n        break;\n      default:\n    }\n\n    // Third, adjust with popover's margins based on the two align points.\n    // Here, we make an assumption that popover is primarily positioned outside the\n    // anchor with minor offset. Without this assumption, it's impossible to apply\n    // the popover's margins in a predictable way. For example, assume that a popover\n    // and its anchor are exactly the same size. if a popover is positioned inside the\n    // anchor (which is technically possible), then it becomes impossible to know what to do\n    // if the popover has a non-zero margin value all around (because applying the margin in\n    // all four directions will result in no margin visually, which isn't what we want).\n    // Therefore, our logic makes assumptions about margins of interest given the points,\n    // and only covers the cases where popover is outside the anchor.\n\n    const popoverComputedStyle = getComputedStyle(this.element);\n    const marginLeft = parseInt(popoverComputedStyle.marginLeft, 10);\n    const marginRight = parseInt(popoverComputedStyle.marginRight, 10);\n    const marginTop = parseInt(popoverComputedStyle.marginTop, 10);\n    const marginBottom = parseInt(popoverComputedStyle.marginBottom, 10);\n\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n      case Point.TOP_RIGHT:\n      case Point.RIGHT_TOP:\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.LEFT_BOTTOM:\n      case Point.BOTTOM_LEFT:\n      case Point.BOTTOM_RIGHT:\n      case Point.RIGHT_BOTTOM:\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.TOP_CENTER:\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += marginTop;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff -= marginRight;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        break;\n      default:\n    }\n\n    this.element.style.transform = `translateX(${Math.round(leftDiff)}px) translateY(${Math.round(topDiff)}px)`;\n    return this._scroll.asObservable();\n  }\n\n  public release() {\n    this.element.style.transform = '';\n    this.removeScrollEventListeners();\n  }\n\n  private isPositioned(container: any) {\n    const position = getComputedStyle(container).position;\n    return position === POSITION_RELATIVE || position === POSITION_ABSOLUTE || position === POSITION_FIXED;\n  }\n\n  /*\n   * Containers up to the first positioned one will have an event on scroll\n   */\n\n  private scrollableElements: HTMLElement[] = [];\n\n  private emitScrollEvent() {\n    this._scroll.next();\n  }\n\n  private boundOnScrollListener: any = this.emitScrollEvent.bind(this);\n\n  private addScrollEventListeners(e: any) {\n    this._scroll = new Subject<void>();\n    const anchor: any = e;\n    let current: any = e;\n    while (current && current !== document) {\n      if (this.scrolls(current)) {\n        current.addEventListener('scroll', this.boundOnScrollListener);\n        this.scrollableElements.push(current);\n      }\n      if (current !== anchor && this.isPositioned(current)) {\n        break;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  private removeScrollEventListeners() {\n    for (const elem of this.scrollableElements) {\n      elem.removeEventListener('scroll', this.boundOnScrollListener);\n    }\n    this.scrollableElements.length = 0;\n    if (this._scroll) {\n      this._scroll.complete();\n      delete this._scroll;\n    }\n  }\n\n  private scrolls(container: any): boolean {\n    const computedStyles = getComputedStyle(container);\n    return (\n      computedStyles.overflowX === OVERFLOW_SCROLL ||\n      computedStyles.overflowX === OVERFLOW_AUTO ||\n      computedStyles.overflowY === OVERFLOW_SCROLL ||\n      computedStyles.overflowY === OVERFLOW_AUTO\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-icon' })\nexport class ClrIconCustomTag {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrIconCustomTag } from './icon';\n\nexport const CLR_ICON_DIRECTIVES: Type<any>[] = [ClrIconCustomTag];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_ICON_DIRECTIVES], exports: [CLR_ICON_DIRECTIVES] })\nexport class ClrIconModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, OnDestroy, Optional } from '@angular/core';\n\nimport { LoadingListener } from './loading-listener';\n\nexport enum ClrLoadingState {\n  DEFAULT,\n  LOADING,\n  SUCCESS,\n  ERROR,\n}\n\n@Directive({ selector: '[clrLoading]' })\nexport class ClrLoading implements OnDestroy {\n  // We find the first parent that handles something loading\n  constructor(@Optional() private listener: LoadingListener) {}\n\n  private _loadingState: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  public get loadingState() {\n    return this._loadingState;\n  }\n\n  @Input('clrLoading')\n  public set loadingState(value: boolean | ClrLoadingState) {\n    if (value === true) {\n      value = ClrLoadingState.LOADING;\n    } else if (!value) {\n      value = ClrLoadingState.DEFAULT;\n    }\n\n    if (value === this._loadingState) {\n      return;\n    }\n\n    this._loadingState = value;\n    if (this.listener) {\n      this.listener.loadingStateChange(value);\n    }\n  }\n\n  ngOnDestroy() {\n    this.loadingState = ClrLoadingState.DEFAULT;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, EmbeddedViewRef, EventEmitter, Input, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Point, Popover } from './popover';\nimport { PopoverOptions } from './popover-options.interface';\n\nlet openCount: number = 0;\nconst waiting: Array<() => void> = []; // pending create functions\n\n@Directive({ selector: '[clrPopoverOld]' })\nexport class PopoverDirectiveOld {\n  private _popoverInstance: Popover;\n  private _subscription: Subscription;\n\n  @Input('clrPopoverOldAnchor') anchorElem: any;\n  @Input('clrPopoverOldAnchorPoint') anchorPoint: Point;\n  @Input('clrPopoverOldPopoverPoint') popoverPoint: Point;\n  @Input('clrPopoverOldOptions') popoverOptions: PopoverOptions = {};\n  @Output('clrPopoverOldChange') clrPopoverOldChange = new EventEmitter<boolean>(false);\n\n  constructor(private templateRef: TemplateRef<any>, private viewContainer: ViewContainerRef) {}\n\n  @Input()\n  set clrPopoverOld(open: boolean) {\n    if (open) {\n      if (this.popoverOptions.allowMultipleOpen) {\n        this.createPopover();\n      } else {\n        if (openCount === 0) {\n          this.createPopover();\n        } else {\n          waiting.push(() => {\n            this.createPopover();\n          });\n        }\n      }\n    } else {\n      this.viewContainer.clear();\n      this.destroyPopover();\n\n      if (!this.popoverOptions.allowMultipleOpen) {\n        if (waiting.length > 0) {\n          const createPopoverFn = waiting.shift();\n          createPopoverFn();\n        }\n      }\n    }\n  }\n\n  createPopover() {\n    const embeddedViewRef: EmbeddedViewRef<any> = <EmbeddedViewRef<any>>this.viewContainer.createEmbeddedView(\n      this.templateRef\n    );\n\n    // TODO: Not sure of the risks associated with using this. Find an alternative.\n    // Needed for find the correct height and width of dynamically created views\n    // inside of the popover. For Eg: Button Groups\n    embeddedViewRef.detectChanges();\n\n    // filter out other nodes in the view ref so we are only left with element nodes\n    const elementNodes: HTMLElement[] = embeddedViewRef.rootNodes.filter((node: any) => {\n      return node.nodeType === 1;\n    });\n\n    // we take the first element node in the embedded view; usually there should only be one anyways\n    this._popoverInstance = new Popover(elementNodes[0]);\n    this._subscription = this._popoverInstance\n      .anchor(this.anchorElem, this.anchorPoint, this.popoverPoint, this.popoverOptions)\n      .subscribe(() => {\n        this.clrPopoverOldChange.emit(false);\n      });\n    openCount++;\n  }\n\n  destroyPopover() {\n    if (this._popoverInstance) {\n      this._subscription.unsubscribe();\n      this._popoverInstance.release();\n      delete this._popoverInstance;\n      openCount--;\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyPopover();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { PopoverDirectiveOld } from './popover-old.directive';\n\nexport * from './popover-options.interface';\nexport * from './popover-old.directive';\n\nexport const POPOVER_DIRECTIVES: Type<any>[] = [PopoverDirectiveOld];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { POPOVER_DIRECTIVES } from './index';\n\n@NgModule({ imports: [CommonModule], declarations: [POPOVER_DIRECTIVES], exports: [POPOVER_DIRECTIVES] })\nexport class ClrCommonPopoverModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrLoadingState } from './loading';\n\n/**\n * This is an abstract class because we need it to still be a valid token for dependency injection after transpiling.\n * This does not mean you should extend it, simply implementing it is fine.\n */\nexport abstract class LoadingListener {\n  abstract loadingStateChange(state: ClrLoadingState): void;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrButton } from '../button-group/button';\n\n@Injectable()\nexport class ButtonInGroupService {\n  private _changes: Subject<ClrButton> = new Subject<ClrButton>();\n\n  get changes(): Observable<ClrButton> {\n    return this._changes.asObservable();\n  }\n\n  updateButtonGroup(button: ClrButton): void {\n    this._changes.next(button);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Optional, Output, SkipSelf, TemplateRef, ViewChild } from '@angular/core';\n\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\n\n@Component({\n  selector: 'clr-button',\n  template: `\n        <ng-template #buttonProjectedRef>\n            <button \n                [class]=\"classNames\" \n                (click)=\"emitClick()\"\n                [attr.type]=\"type\"\n                [attr.name]=\"name\"\n                [attr.disabled]=\"disabled\"\n                [id]=\"id\">\n                <span class=\"spinner spinner-inline\" *ngIf=\"loading\"></span>\n                <ng-content></ng-content>\n            </button>\n        </ng-template>\n    `,\n  providers: [{ provide: LoadingListener, useExisting: ClrButton }],\n})\nexport class ClrButton implements LoadingListener {\n  private _enableService: boolean = false;\n\n  @ViewChild('buttonProjectedRef', { static: true })\n  templateRef: TemplateRef<ClrButton>;\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public buttonInGroupService: ButtonInGroupService\n  ) {}\n\n  private _inMenu: boolean = false;\n\n  get inMenu(): boolean {\n    return this._inMenu;\n  }\n\n  @Input('clrInMenu')\n  set inMenu(value: boolean) {\n    value = !!value;\n    if (this._inMenu !== value) {\n      this._inMenu = value;\n      // We check if the service flag is enabled\n      // and if the service exists because the service is optional\n      if (this._enableService && this.buttonInGroupService) {\n        this.buttonInGroupService.updateButtonGroup(this);\n      }\n    }\n  }\n\n  private _classNames: string = 'btn';\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n  @Input('class')\n  set classNames(value: string) {\n    if (typeof value === 'string') {\n      const classNames: string[] = value.split(' ');\n      if (classNames.indexOf('btn') === -1) {\n        classNames.push('btn');\n      }\n      this._classNames = classNames.join(' ');\n    }\n  }\n\n  private _name: string = null;\n\n  get name(): string {\n    return this._name;\n  }\n\n  @Input('name')\n  set name(value: string) {\n    if (typeof value === 'string') {\n      this._name = value;\n    }\n  }\n\n  private _type: string = null;\n\n  get type(): string {\n    return this._type;\n  }\n\n  @Input('type')\n  set type(value: string) {\n    if (typeof value === 'string') {\n      this._type = value;\n    }\n  }\n\n  private _id: string = null;\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input('id')\n  set id(value: string) {\n    if (typeof value === 'string') {\n      this._id = value;\n    }\n  }\n\n  private _disabled: any = null;\n\n  get disabled(): any {\n    return this._disabled;\n  }\n\n  @Input('disabled')\n  set disabled(value: any) {\n    if (value !== null && value !== false) {\n      this._disabled = '';\n    } else {\n      this._disabled = null;\n    }\n  }\n\n  public loading: boolean;\n\n  loadingStateChange(state: ClrLoadingState): void {\n    this.loading = state === ClrLoadingState.LOADING;\n  }\n\n  @Output('click') _click: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  emitClick(): void {\n    this._click.emit(true);\n  }\n\n  ngAfterViewInit() {\n    this._enableService = true;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport const CLR_MENU_POSITIONS: string[] = [\n  'bottom-left',\n  'bottom-right',\n  'top-left',\n  'top-right',\n  'left-bottom',\n  'left-top',\n  'right-bottom',\n  'right-top',\n];\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrCommonStrings } from './common-strings.interface';\n\nexport const commonStringsDefault: ClrCommonStrings = {\n  open: 'Open',\n  close: 'Close',\n  show: 'Show',\n  hide: 'Hide',\n  expand: 'Expand',\n  collapse: 'Collapse',\n  more: 'More',\n  select: 'Select',\n  selectAll: 'Select All',\n  previous: 'Previous',\n  next: 'Next',\n  current: 'Jump to current',\n  info: 'Info',\n  success: 'Success',\n  warning: 'Warning',\n  danger: 'Error',\n  rowActions: 'Available actions',\n  pickColumns: 'Show or hide columns',\n  showColumns: 'Show Columns',\n  sortColumn: 'Sort Column',\n  firstPage: 'First Page',\n  lastPage: 'Last Page',\n  nextPage: 'Next Page',\n  previousPage: 'Previous Page',\n  currentPage: 'Current Page',\n  totalPages: 'Total Pages',\n  minValue: 'Min value',\n  maxValue: 'Max value',\n  modalContentStart: 'Beginning of Modal Content',\n  modalContentEnd: 'End of Modal Content',\n  showColumnsMenuDescription: 'Show or hide columns menu',\n  allColumnsSelected: 'All columns selected',\n  signpostToggle: 'Signpost Toggle',\n  signpostClose: 'Signpost Close',\n  loading: 'Loading',\n  singleSelectionAriaLabel: 'Single selection header',\n  singleActionableAriaLabel: 'Single actionable header',\n  detailExpandableAriaLabel: 'Toggle more row content',\n  datagridFilterAriaLabel: 'Toggle column filter',\n  // Alert\n  alertCloseButtonAriaLabel: 'Close alert',\n  // Date Picker\n  datepickerToggle: 'Toggle datepicker',\n  datepickerPreviousMonth: 'Previous month',\n  datepickerCurrentMonth: 'Current month',\n  datepickerNextMonth: 'Next month',\n  datepickerPreviousDecade: 'Previous decade',\n  datepickerNextDecade: 'Next decade',\n  datepickerCurrentDecade: 'Current decade',\n  datepickerSelectMonthText: 'Select month, the current month is {CALENDAR_MONTH}',\n  datepickerSelectYearText: 'Select year, the current year is {CALENDAR_YEAR}',\n  daypickerSRCurrentMonthPhrase: 'The current month is {CURRENT_MONTH}',\n  daypickerSRCurrentYearPhrase: 'The current year is {CURRENT_YEAR}',\n  daypickerSRCurrentDecadePhrase: 'The current decade is {DECADE_RANGE}',\n  // Stack View\n  stackViewChanged: 'Value changed.',\n  //Vertical Nav\n  verticalNavToggle: 'Toggle navigation group',\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\n\nimport { ClrCommonStrings } from './common-strings.interface';\nimport { commonStringsDefault } from './common-strings.default';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrCommonStringsService {\n  private _strings = commonStringsDefault;\n\n  /**\n   * Allows you to pass in new overrides for localization\n   */\n  localize(overrides: ClrCommonStrings) {\n    this._strings = { ...this._strings, ...overrides };\n  }\n\n  /**\n   * Access to all of the keys as strings\n   */\n  get keys(): Readonly<ClrCommonStrings> {\n    return this._strings;\n  }\n\n  /**\n   * Parse a string with a set of tokens to replace\n   */\n  parse(source: string, tokens: { [key: string]: string } = {}) {\n    const names = Object.keys(tokens);\n    let output = source;\n    if (names.length) {\n      names.forEach(name => {\n        output = output.replace(`{${name}}`, tokens[name]);\n      });\n    }\n    return output;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChildren, ElementRef, HostListener, Input, QueryList } from '@angular/core';\n\nimport { Point } from '../../popover/common/popover';\nimport { CLR_MENU_POSITIONS } from '../../popover/dropdown/menu-positions';\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\nimport { ClrButton } from './button';\n\n@Component({\n  selector: 'clr-button-group',\n  templateUrl: 'button-group.html',\n  providers: [ButtonInGroupService],\n  host: { '[class.btn-group]': 'true' },\n})\nexport class ClrButtonGroup {\n  @ContentChildren(ClrButton) buttons: QueryList<ClrButton>;\n\n  constructor(\n    public buttonGroupNewService: ButtonInGroupService,\n    private elementRef: ElementRef,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  inlineButtons: ClrButton[] = [];\n  menuButtons: ClrButton[] = [];\n\n  /**\n   * 1. Initializes the initial Button Group View\n   * 2. Subscribes to changes on the ContentChildren\n   *    in case the user content projection changes\n   */\n  ngAfterContentInit() {\n    this.initializeButtons();\n    this.buttonGroupNewService.changes.subscribe(button => this.rearrangeButton(button));\n    this.buttons.changes.subscribe(() => {\n      this.initializeButtons();\n    });\n  }\n\n  /**\n   * Moves the button into the other ViewContainer\n   * when an update is received.\n   *\n   * @param button\n   */\n  rearrangeButton(button: ClrButton): void {\n    let fromView: ClrButton[];\n    let toView: ClrButton[];\n    if (button.inMenu) {\n      fromView = this.inlineButtons;\n      toView = this.menuButtons;\n    } else {\n      fromView = this.menuButtons;\n      toView = this.inlineButtons;\n    }\n    const index: number = fromView.indexOf(button);\n    if (index > -1) {\n      fromView.splice(index, 1);\n      const moveIndex = this.getMoveIndex(button);\n      if (moveIndex <= toView.length) {\n        toView.splice(moveIndex, 0, button);\n      }\n    }\n  }\n\n  /**\n   * Author: Eudes\n   *\n   * Finds the order of a button w.r.t other buttons\n   *\n   * @param buttonToMove\n   * @returns\n   */\n  getMoveIndex(buttonToMove: ClrButton): number {\n    const tempArr: ClrButton[] = this.buttons.filter(button => button.inMenu === buttonToMove.inMenu);\n    return tempArr.indexOf(buttonToMove);\n  }\n\n  initializeButtons(): void {\n    const tempInlineButtons: ClrButton[] = [];\n    const tempInMenuButtons: ClrButton[] = [];\n    this.buttons.forEach(button => {\n      if (button.inMenu) {\n        tempInMenuButtons.push(button);\n      } else {\n        tempInlineButtons.push(button);\n      }\n    });\n    this.inlineButtons = tempInlineButtons;\n    this.menuButtons = tempInMenuButtons;\n  }\n\n  /**\n   * Overflow Menu\n   *\n   */\n\n  // Indicates the position of the overflow menu\n  private _menuPosition: string;\n\n  get menuPosition(): string {\n    return this._menuPosition;\n  }\n\n  @Input('clrMenuPosition')\n  set menuPosition(pos: string) {\n    if (pos && CLR_MENU_POSITIONS.indexOf(pos) > -1) {\n      this._menuPosition = pos;\n    } else {\n      this._menuPosition = 'bottom-left';\n    }\n    // set the popover values based on menu position\n    switch (this._menuPosition) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_RIGHT;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_LEFT;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_RIGHT;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-top':\n        this.anchorPoint = Point.RIGHT_TOP;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-bottom':\n        this.anchorPoint = Point.RIGHT_BOTTOM;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'left-top':\n        this.anchorPoint = Point.LEFT_TOP;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'left-bottom':\n        this.anchorPoint = Point.LEFT_BOTTOM;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      default:\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private _openMenu: boolean = false;\n\n  get openMenu(): boolean {\n    return this._openMenu;\n  }\n\n  set openMenu(value: boolean) {\n    this._openMenu = value;\n  }\n\n  public anchorPoint: Point = Point.BOTTOM_LEFT; // default if menuPosition isn't set\n  public popoverPoint: Point = Point.LEFT_TOP; // default if menuPosition isn't set\n\n  /**\n   * Toggle the ClrDropdown Menu when the ClrDropdown Toggle is\n   * clicked. Also set a flag that indicates that the toggle\n   * was clicked so that we don't traverse the DOM to find the\n   * location of the click.\n   */\n  toggleMenu(): void {\n    this.openMenu = !this.openMenu;\n    this._overflowMenuToggleClicked = true;\n  }\n\n  /**\n   * Flag with indicates if the overflow menu toggle was clicked.\n   * If true, this can save us traversing the DOM to find\n   * whether the click was withing the button group toggle\n   * or menu in the onMouseClick method\n   */\n  private _overflowMenuToggleClicked: boolean = false;\n\n  // TODO: Generic Directive to handle this\n  /**\n   * Called on mouse clicks anywhere in the DOM.\n   * Checks to see if the mouseclick happened on the host or outside\n   */\n  @HostListener('document:click', ['$event.target'])\n  onMouseClick(target: any): void {\n    if (this.openMenu && !this._overflowMenuToggleClicked) {\n      // Reset the overflow menu toggle clicked flag\n      this._overflowMenuToggleClicked = false;\n      let current: any = target; // Get the element in the DOM on which the mouse was clicked\n      const host: any = this.elementRef.nativeElement; // Current Button Group\n\n      if (current.classList.contains('dropdown-menu')) {\n        current = current.parentNode;\n        while (current) {\n          if (current === document) {\n            this.openMenu = false;\n            return;\n          }\n\n          // If clicked on dropdown menu and menu is in host\n          // do nothing\n          if (current === host) {\n            return;\n          }\n          current = current.parentNode;\n        }\n      }\n      this.openMenu = false;\n    }\n    this._overflowMenuToggleClicked = false; // Reset the overflow menu toggle clicked flag\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonPopoverModule } from '../../popover/common/popover.module';\n\nimport { ClrButton } from './button';\nimport { ClrButtonGroup } from './button-group';\n\nexport const CLR_BUTTON_GROUP_DIRECTIVES: Type<any>[] = [ClrButton, ClrButtonGroup];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrCommonPopoverModule],\n  declarations: [CLR_BUTTON_GROUP_DIRECTIVES],\n  exports: [CLR_BUTTON_GROUP_DIRECTIVES],\n})\nexport class ClrButtonGroupModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, keyframes, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\n@Component({\n  selector: 'button[clrLoading]',\n  template: `\n        <ng-container [ngSwitch]=\"state\">\n            <span *ngSwitchCase=\"buttonState.LOADING\">\n                <span @spinner class=\"spinner spinner-inline\"></span>\n            </span>\n            <span *ngSwitchCase=\"buttonState.SUCCESS\">\n                <span @validated (@validated.done)=\"this.loadingStateChange(this.buttonState.DEFAULT)\" class=\"spinner spinner-inline spinner-check\"></span>\n            </span>\n            <span *ngSwitchCase=\"buttonState.DEFAULT\" @defaultButton>\n                <ng-content></ng-content>\n            </span>\n        </ng-container>\n    `,\n  providers: [{ provide: LoadingListener, useExisting: ClrLoadingButton }],\n  animations: [\n    trigger('defaultButton', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      // TODO: see if we can get leave animation to work before spinner's enter animation\n      transition(':leave', [style({ opacity: 0 })]),\n    ]),\n    trigger('spinner', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n    trigger('validated', [\n      transition(':enter', [\n        animate(\n          '600ms',\n          keyframes([\n            style({ transform: 'scale(0,0)', offset: 0 }),\n            style({ opacity: 1, offset: 0.2 }),\n            style({ transform: 'scale(1.2,1.2)', offset: 0.4 }),\n            style({ transform: 'scale(.9,.9)', offset: 0.6 }),\n            style({ transform: 'scale(1,1)', offset: 1 }),\n          ])\n        ),\n      ]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  host: { '[attr.disabled]': \"disabled? '' : null\" },\n})\nexport class ClrLoadingButton implements LoadingListener {\n  public buttonState = ClrLoadingState;\n  public state: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  @Input('disabled') public disabled: boolean;\n\n  @Output('clrLoadingChange')\n  public clrLoadingChange: EventEmitter<ClrLoadingState> = new EventEmitter<ClrLoadingState>(false);\n\n  constructor(public el: ElementRef, private renderer: Renderer2) {}\n\n  loadingStateChange(state: ClrLoadingState): void {\n    if (state === this.state) {\n      return;\n    }\n    this.state = state;\n\n    switch (state) {\n      case ClrLoadingState.DEFAULT:\n        this.renderer.removeStyle(this.el.nativeElement, 'width');\n        this.renderer.removeStyle(this.el.nativeElement, 'transform'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        if (!this.disabled) {\n          this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n        }\n        break;\n      case ClrLoadingState.LOADING:\n        this.setExplicitButtonWidth();\n        this.renderer.setStyle(this.el.nativeElement, 'transform', 'translatez(0)'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        this.renderer.setAttribute(this.el.nativeElement, 'disabled', '');\n        break;\n      case ClrLoadingState.SUCCESS:\n        this.setExplicitButtonWidth();\n        break;\n      case ClrLoadingState.ERROR:\n        this.loadingStateChange(ClrLoadingState.DEFAULT);\n        break;\n      default:\n        break;\n    }\n    this.clrLoadingChange.emit(state);\n  }\n\n  private setExplicitButtonWidth() {\n    if (this.el.nativeElement && this.el.nativeElement.getBoundingClientRect) {\n      const boundingClientRect = this.el.nativeElement.getBoundingClientRect();\n      this.renderer.setStyle(this.el.nativeElement, 'width', `${boundingClientRect.width}px`);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoadingButton } from './loading-button';\n\nexport const CLR_LOADING_BUTTON_DIRECTIVES: Type<any>[] = [ClrLoadingButton];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_LOADING_BUTTON_DIRECTIVES],\n  exports: [CLR_LOADING_BUTTON_DIRECTIVES],\n})\nexport class ClrLoadingButtonModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonGroupModule } from './button-group/button-group.module';\nimport { ClrLoadingButtonModule } from './button-loading/loading-button.module';\n\n@NgModule({\n  exports: [ClrLoadingButtonModule, ClrButtonGroupModule],\n})\nexport class ClrButtonModule {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  template: '',\n})\nexport class EmptyAnchor {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * Internal module, please do not export!\n */\n@NgModule({ declarations: [EmptyAnchor], exports: [EmptyAnchor], entryComponents: [EmptyAnchor] })\nexport class ClrHostWrappingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class ControlIdService {\n  private _id = 'clr-form-control-' + ++counter;\n  get id(): string {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nlet NB_INSTANCES = 0;\n\nexport const UNIQUE_ID = new InjectionToken<string>('UNIQUE_ID');\n\nexport function uniqueIdFactory() {\n  return 'clr-id-' + NB_INSTANCES++;\n}\n\nexport const UNIQUE_ID_PROVIDER = {\n  provide: UNIQUE_ID,\n  useFactory: uniqueIdFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { uniqueIdFactory } from '../id-generator/id-generator.service';\n\nexport enum AriaLivePoliteness {\n  off = 'off',\n  polite = 'polite',\n  assertive = 'assertive',\n}\n\n/**\n * Time in milliseconds before inserting the content into the container\n */\nexport const ARIA_LIVE_TICK: number = 100;\n\n/**\n * This service handle `aria-live` accessibility attribute. The issue is that you need\n * to have the DOM Element with attribute `aria-live` before you could insert content\n * and SR (Screen Reader) pick the change and announce it.\n *\n * @remark\n * This is a private service, nothing here is part of Clarity's public API. It could change at any point in time.\n *\n * ```typescript\n * import { AriaLiveService } from 'src/clr-angular/utils/a11y/aria-live.service';\n *\n * @Component({\n * selector: 'clr-demo-component',\n * providers: [AriaLiveService],\n * template: `\n *   <ng-content></ng-content>\n * `,\n * })\n * export class DemoComponent {\n *  constructor(ariaLiveService: AriaLiveService) {}\n *\n *  public actionThatWillTriggerChange() {\n *    this.ariaLiveService.announce('message that I want to announce to SR');\n *  }\n * }\n * ```\n *\n */\n@Injectable()\nexport class AriaLiveService implements OnDestroy {\n  private ariaLiveElement: HTMLElement;\n  private document: Document;\n  private previousTimeout: ReturnType<typeof setTimeout>;\n\n  constructor(\n    private ngZone: NgZone,\n    @Inject(DOCUMENT) _document: any,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = _document;\n  }\n\n  private _id: string = `clr-aria-live-element-${uniqueIdFactory()}`;\n  /**\n   * get access to the internal HTML `id` that gonna be used for the AriaLive container.\n   * @return ID of the DOM Element as string.\n   */\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Append text content inside the AriaLive Container. This method will check if the\n   * DOM Element is existing if not it will create one for us and the will apply the text.\n   *\n   * ```typescript\n   * this.ariaLiveService.announce(this.el.nativeElement);\n   * // or\n   * this.ariaLiveService.announce('Message to announce to SR');\n   * ```\n   *\n   * @remark\n   * When second argument is `AriaLivePoliteness.off` we won't create aria container or update it.\n   * The reason for that is that we don't want to do additional work if the SR will ignore it.\n   *\n   * @param message - This could be simple string or HTMLElement\n   * @param politeness - 'polite', 'assertive' or 'off'\n   */\n  public announce(message: string | HTMLElement, politeness: AriaLivePoliteness = AriaLivePoliteness.polite): void {\n    if (politeness === AriaLivePoliteness.off) {\n      return;\n    }\n\n    if (!this.ariaLiveElement && isPlatformBrowser(this.platformId)) {\n      this.ariaLiveElement = this.createContainer();\n    }\n\n    message = typeof message !== 'string' && isPlatformBrowser(this.platformId) ? message.textContent : message;\n\n    // when there is no message do NOTHING!\n    if (!message) {\n      return;\n    }\n\n    this.ariaLiveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    this.ngZone.runOutsideAngular(() => {\n      // This clearTimeout will stop all older messages from announcing\n      // in the case where the messages are comming too fast we gonna try to append only\n      // the last one. That's what the SR will try to do anyway.\n      clearTimeout(this.previousTimeout);\n      this.previousTimeout = setTimeout(() => {\n        this.ariaLiveElement.textContent = <string>message;\n      }, ARIA_LIVE_TICK);\n    });\n  }\n\n  /**\n   * onDestroy life cycle - must stop all active setTimeouts and remove the AriaLive\n   * container from the document.\n   */\n  public ngOnDestroy() {\n    clearTimeout(this.previousTimeout);\n\n    if (isPlatformBrowser(this.platformId) && this.ariaLiveElement) {\n      this.document.body.removeChild(this.ariaLiveElement);\n      this.ariaLiveElement = null;\n    }\n  }\n\n  /**\n   * Create AriaLive DOM element as a last child of the document.\n   * After the element is created, we gonna apply Clarity class to hide it from\n   * the screen and set the `aria-live` politness.\n   *\n   * `clr-sr-only` is the CSS class that is used to hide the element from the screen.\n   *\n   * @remark\n   * Calling this method multiple times will create multiple DOM Elements, that\n   * won't be tracked and will be GC after the service is destroyed.\n   *\n   * @return AriaLive container as HTMLElement\n   *\n   */\n  private createContainer(): HTMLElement {\n    const ariaLiveElement = this.document.createElement('div');\n\n    ariaLiveElement.setAttribute('id', this.id);\n    // Use clarity screen reader class to hide the dom element\n    // and fix the scrollbar shake\n    ariaLiveElement.classList.add('clr-sr-only');\n\n    ariaLiveElement.setAttribute('aria-atomic', 'true');\n    ariaLiveElement.setAttribute('aria-live', AriaLivePoliteness.polite);\n\n    this.document.body.appendChild(ariaLiveElement);\n\n    return ariaLiveElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport enum Layouts {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  COMPACT = 'compact',\n}\n\n@Injectable()\nexport class LayoutService {\n  layout: Layouts = Layouts.HORIZONTAL;\n  // This is basically a replacement for Object.values(), which IE11 and Node <9 don't support :(\n  // String enums cannot be reverse-mapped, meaning Layouts['COMPACT'] does not return 'compact' so\n  // this exists to deal with this little caveat to get the list of the values as an array.\n  private layoutValues: string[] = Object.keys(Layouts).map(key => Layouts[key]);\n\n  isVertical(): boolean {\n    return this.layout === Layouts.VERTICAL;\n  }\n\n  isHorizontal(): boolean {\n    return this.layout === Layouts.HORIZONTAL;\n  }\n\n  isCompact(): boolean {\n    return this.layout === Layouts.COMPACT;\n  }\n\n  get layoutClass(): string {\n    return `clr-form-${this.layout}`;\n  }\n\n  isValid(layout: string): boolean {\n    return this.layoutValues.indexOf(layout) > -1;\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional, ElementRef, AfterViewInit } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\nimport { AriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  providers: [AriaLiveService],\n  selector: 'clr-control-error',\n  template: `\n    <ng-content></ng-content>\n    `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-error\"',\n  },\n})\nexport class ClrControlError implements AfterViewInit {\n  constructor(\n    @Optional() public controlIdService: ControlIdService,\n    private ariaLiveService: AriaLiveService,\n    private el: ElementRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.ariaLiveService.announce(this.el.nativeElement);\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\n\n@Component({\n  selector: 'clr-control-helper',\n  template: `\n    <ng-content></ng-content>\n    `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-helper\"',\n  },\n})\nexport class ClrControlHelper {\n  constructor(@Optional() public controlIdService: ControlIdService) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class NgControlService {\n  // Observable to subscribe to the control, since its not available immediately for projected content\n  private _controlChanges: Subject<NgControl> = new Subject<NgControl>();\n  get controlChanges(): Observable<NgControl> {\n    return this._controlChanges.asObservable();\n  }\n\n  setControl(control: NgControl) {\n    this._controlChanges.next(control);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { NgControlService } from '../providers/ng-control.service';\n\n@Injectable()\nexport class IfErrorService implements OnDestroy {\n  // Implement our own status changes observable, since Angular controls don't\n  // fire on events like blur, and we want to return the boolean state instead of a string\n  private _statusChanges: Subject<boolean> = new Subject();\n  get statusChanges(): Observable<boolean> {\n    return this._statusChanges.asObservable();\n  }\n\n  private subscriptions: Subscription[] = [];\n  private control: NgControl;\n\n  constructor(private ngControlService: NgControlService) {\n    // Wait for the control to be available\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.control = control;\n          this.listenForChanges();\n        }\n      })\n    );\n  }\n\n  // Subscribe to the status change events, only after touched and emit the control\n  private listenForChanges() {\n    this.subscriptions.push(\n      this.control.statusChanges.subscribe(() => {\n        this.sendValidity();\n      })\n    );\n  }\n\n  private sendValidity() {\n    if (this.control.touched && this.control.invalid) {\n      this._statusChanges.next(true);\n    } else {\n      this._statusChanges.next(false);\n    }\n  }\n\n  // Allows a control to push a status check upstream, such as on blur\n  triggerStatusChange() {\n    if (this.control) {\n      this.sendValidity();\n    }\n  }\n\n  // Clean up subscriptions\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfErrorService } from './if-error.service';\nimport { NgControlService } from '../providers/ng-control.service';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrIfError]' })\nexport class ClrIfError {\n  constructor(\n    @Optional() private ifErrorService: IfErrorService,\n    @Optional() private ngControlService: NgControlService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    if (!this.ifErrorService) {\n      throw new Error('clrIfError can only be used within a form control container element like clr-input-container');\n    } else {\n      this.displayError(false);\n    }\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        // If there is a specific error to track, check it, otherwise check overall validity\n        if (this.error && this.control) {\n          this.displayError(this.control.hasError(this.error));\n        } else {\n          this.displayError(invalid);\n        }\n      })\n    );\n  }\n\n  @Input('clrIfError') error: string;\n\n  private subscriptions: Subscription[] = [];\n  private displayed: boolean = false;\n  private control: NgControl;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private displayError(invalid: boolean) {\n    if (invalid && !this.displayed) {\n      this.container.createEmbeddedView(this.template);\n      this.displayed = true;\n    } else if (!invalid) {\n      this.container.clear();\n      this.displayed = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostBinding, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { LayoutService } from './providers/layout.service';\nimport { NgControlService } from './providers/ng-control.service';\n\n@Directive({ selector: 'label' })\nexport class ClrLabel implements OnInit, OnDestroy {\n  constructor(\n    @Optional() private controlIdService: ControlIdService,\n    @Optional() private layoutService: LayoutService,\n    @Optional() private ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  @HostBinding('attr.for')\n  @Input('for')\n  forAttr: string;\n\n  private subscriptions: Subscription[] = [];\n  private enableGrid = true;\n\n  ngOnInit() {\n    // Only add the clr-control-label if it is inside a control container\n    if (this.controlIdService || this.ngControlService) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-control-label');\n    }\n    // Only set the grid column classes if we are in the right context and if they aren't already set\n    if (\n      this.enableGrid &&\n      this.layoutService &&\n      !this.layoutService.isVertical() &&\n      this.el.nativeElement &&\n      this.el.nativeElement.className.indexOf('clr-col') < 0\n    ) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-col-12');\n      this.renderer.addClass(this.el.nativeElement, 'clr-col-md-2');\n    }\n    if (this.controlIdService && !this.forAttr) {\n      this.subscriptions.push(this.controlIdService.idChange.subscribe(id => (this.forAttr = id)));\n    }\n  }\n\n  disableGrid() {\n    this.enableGrid = false;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class MarkControlService {\n  private _touched: Subject<void> = new Subject();\n\n  get touchedChange(): Observable<void> {\n    return this._touched.asObservable();\n  }\n\n  markAsTouched() {\n    this._touched.next();\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\nimport { LayoutService } from './providers/layout.service';\nimport { MarkControlService } from './providers/mark-control.service';\n\n@Directive({\n  selector: '[clrForm]',\n  providers: [LayoutService, MarkControlService],\n  host: {\n    '[class.clr-form]': 'true',\n    '[class.clr-form-horizontal]': 'layoutService.isHorizontal()',\n    '[class.clr-form-compact]': 'layoutService.isCompact()',\n  },\n})\nexport class ClrForm {\n  constructor(public layoutService: LayoutService, private markControlService: MarkControlService) {}\n\n  /** @deprecated since 2.0 */\n  markAsDirty() {\n    this.markAsTouched();\n  }\n\n  markAsTouched() {\n    this.markControlService.markAsTouched();\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Input, OnInit } from '@angular/core';\nimport { Layouts, LayoutService } from './providers/layout.service';\n\n@Directive({\n  selector: '[clrForm][clrLayout]',\n})\nexport class ClrLayout implements OnInit {\n  @Input('clrLayout') layout: Layouts;\n\n  constructor(public layoutService: LayoutService) {}\n\n  ngOnInit() {\n    // Only set the layout if it is a valid option\n    if (this.layout && this.layoutService.isValid(this.layout)) {\n      this.layoutService.layout = this.layout;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrControlError } from './error';\nimport { ClrControlHelper } from './helper';\nimport { ClrIfError } from './if-error/if-error';\nimport { ClrLabel } from './label';\nimport { ClrForm } from './form';\nimport { ClrLayout } from './layout';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ClrLabel, ClrControlError, ClrControlHelper, ClrIfError, ClrForm, ClrLayout],\n  exports: [ClrLabel, ClrControlError, ClrControlHelper, ClrIfError, ClrForm, ClrLayout],\n})\nexport class ClrCommonFormsModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, OnInit, ContentChild, Inject, InjectionToken, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\nexport const IS_TOGGLE = new InjectionToken<BehaviorSubject<boolean>>('IS_TOGGLE');\nexport function isToggleFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const IS_TOGGLE_PROVIDER = { provide: IS_TOGGLE, useFactory: isToggleFactory };\n\n@Component({\n  selector: 'clr-checkbox-wrapper,clr-toggle-wrapper',\n  template: `\n    <ng-content select=\"[clrCheckbox],[clrToggle]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-checkbox-wrapper]': '!toggle',\n    '[class.clr-toggle-wrapper]': 'toggle',\n  },\n  providers: [ControlIdService, IS_TOGGLE_PROVIDER],\n})\nexport class ClrCheckboxWrapper implements DynamicWrapper, OnInit, OnDestroy {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n  toggle = false;\n  private subscriptions: Subscription[] = [];\n\n  constructor(@Inject(IS_TOGGLE) toggleService: BehaviorSubject<boolean>) {\n    this.subscriptions.push(\n      toggleService.subscribe(state => {\n        this.toggle = state;\n      })\n    );\n  }\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ElementRef,\n  InjectionToken,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { DynamicWrapper } from './dynamic-wrapper';\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * HostWrapper must be called in OnInit to ensure that the Views are ready. If its called in a constructor the view is\n * still undefined.\n * TODO - make sure these comment annotations do not break ng-packgr.\n */\nexport class HostWrapper<W extends DynamicWrapper> implements Injector {\n  constructor(containerType: Type<W>, vcr: ViewContainerRef, index: number = 0) {\n    this.injector = vcr.injector;\n    // If the host is already wrapped, we don't do anything\n    if (!this.injector.get(containerType, null)) {\n      const cfr = this.injector.get(ComponentFactoryResolver);\n      const el = this.injector.get(ElementRef);\n\n      // We need a new anchor, since we're projecting the current one.\n      vcr.createComponent(cfr.resolveComponentFactory(EmptyAnchor));\n      const factory: ComponentFactory<W> = cfr.resolveComponentFactory(containerType);\n      // Craft the element array based on what slot to use. Angular only uses the index to determine\n      // which ng-content to project into, so if you have more than one ng-content you'll need to set\n      // the index in the constructor appropriately\n      const element = [];\n      element[index] = [el.nativeElement];\n      // We're assuming only one projection slot, but in more complex cases we might want to provide\n      // a different array of projected elements.\n      const containerRef = vcr.createComponent(factory, undefined, undefined, element);\n      // We can now remove the useless anchor\n      vcr.remove(0);\n\n      // We note that the container was dynamically created\n      containerRef.instance._dynamic = true;\n\n      // We keep the wrapper's injector to access the dependencies that weren't available before.\n      this.injector = containerRef.injector;\n    }\n  }\n\n  private injector: Injector;\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    return this.injector.get(token, notFoundValue);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ControlClassService {\n  className = '';\n\n  controlClass(invalid = false, grid = false, additional = '') {\n    const controlClasses = [this.className, additional];\n    if (invalid) {\n      controlClasses.push('clr-error');\n    }\n    if (grid && this.className.indexOf('clr-col') === -1) {\n      controlClasses.push('clr-col-md-10 clr-col-12');\n    }\n    return controlClasses.join(' ').trim();\n  }\n\n  // We want to remove the column classes from the input up to the container\n  initControlClass(renderer, element: HTMLElement) {\n    if (element && element.className) {\n      this.className = element.className;\n      const klasses = element.className.split(' ');\n      klasses.forEach(klass => {\n        if (klass.startsWith('clr-col')) {\n          renderer.removeClass(element, klass);\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  HostBinding,\n  InjectionToken,\n  HostListener,\n  Injector,\n  Input,\n  OnInit,\n  Type,\n  ViewContainerRef,\n  Renderer2,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter, distinctUntilChanged, startWith } from 'rxjs/operators';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControl } from '@angular/forms';\nimport { ControlClassService } from './providers/control-class.service';\nimport { MarkControlService } from './providers/mark-control.service';\n\nexport class WrappedFormControl<W extends DynamicWrapper> implements OnInit, OnDestroy {\n  private ngControlService: NgControlService;\n  private ifErrorService: IfErrorService;\n  private controlClassService: ControlClassService;\n  private markControlService: MarkControlService;\n  protected renderer: Renderer2;\n  protected el: ElementRef<any>;\n\n  protected subscriptions: Subscription[] = [];\n  protected index = 0;\n  protected controlIdService: ControlIdService;\n\n  _id: string;\n\n  // I lost way too much time trying to make this work without injecting the ViewContainerRef and the Injector,\n  // I'm giving up. So we have to inject these two manually for now.\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected wrapperType: Type<W>,\n    injector: Injector,\n    private ngControl: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    this.renderer = renderer;\n    this.el = el;\n    try {\n      this.ngControlService = injector.get(NgControlService);\n      this.ifErrorService = injector.get(IfErrorService);\n      this.controlClassService = injector.get(ControlClassService);\n      this.markControlService = injector.get(MarkControlService);\n    } catch (e) {}\n\n    if (this.controlClassService) {\n      this.controlClassService.initControlClass(renderer, el.nativeElement);\n    }\n    if (this.markControlService) {\n      this.subscriptions.push(\n        this.markControlService.touchedChange.subscribe(() => {\n          this.ngControl.control.markAsTouched();\n          this.ngControl.control.updateValueAndValidity();\n        })\n      );\n    }\n  }\n\n  @HostBinding()\n  @Input()\n  get id() {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    if (this.controlIdService) {\n      this.controlIdService.id = value;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    if (this.ifErrorService) {\n      this.ifErrorService.triggerStatusChange();\n    }\n  }\n\n  private _containerInjector: Injector;\n\n  // @TODO This method has a try/catch due to an unknown issue that came when building the clrToggle feature\n  // We need to figure out why this fails for the ClrToggle scenario but works for Date picker...\n  // To see the error, remove the try/catch here and run the ClrToggle suite to see issues getting the container\n  // injector in time, and this ONLY HAPPENS in tests and not in dev/prod mode.\n  protected getProviderFromContainer<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    try {\n      return this._containerInjector.get(token, notFoundValue);\n    } catch (e) {\n      return notFoundValue;\n    }\n  }\n\n  ngOnInit() {\n    this._containerInjector = new HostWrapper(this.wrapperType, this.vcr, this.index);\n    this.controlIdService = this._containerInjector.get(ControlIdService);\n\n    if (this._id) {\n      this.controlIdService.id = this._id;\n    } else {\n      this._id = this.controlIdService.id;\n    }\n\n    if (this.ngControlService) {\n      this.ngControlService.setControl(this.ngControl);\n    }\n\n    this.listenForErrorStateChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private listenForErrorStateChanges() {\n    if (this.ifErrorService) {\n      this.subscriptions.push(\n        this.ifErrorService.statusChanges\n          .pipe(startWith(false), filter(() => this.renderer && !!this.el), distinctUntilChanged())\n          .subscribe(error => this.setAriaDescribedBy(error))\n      );\n    }\n  }\n\n  private setAriaDescribedBy(error: boolean) {\n    this.renderer.setAttribute(this.el.nativeElement, 'aria-describedby', this.getAriaDescribedById(error));\n  }\n\n  private getAriaDescribedById(error: boolean): string {\n    return this.controlIdService.id.concat(error ? '-error' : '-helper');\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Renderer2, ElementRef, Injector, Self, Optional, ViewContainerRef, Attribute } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ClrCheckboxWrapper, IS_TOGGLE } from './checkbox-wrapper';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n/**\n * This implements both the clrCheckbox and clrToggle functionality, since they are both just checkboxes with different\n * visual styling. The challenge is that the container needs to know which selector was used, which the @Attribute\n * decorator gets for us to determine if the toggle is used, and emits a value to the wrapper container to tell it\n * there is a toggle switch instead.\n */\n@Directive({ selector: '[clrCheckbox],[clrToggle]' })\nexport class ClrCheckbox extends WrappedFormControl<ClrCheckboxWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Attribute('clrToggle') private toggle: string\n  ) {\n    super(vcr, ClrCheckboxWrapper, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const toggleService = this.getProviderFromContainer<BehaviorSubject<boolean>>(IS_TOGGLE, null);\n\n    if (toggleService && this.toggle !== null) {\n      toggleService.next(true);\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, Input, OnDestroy, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ClrLabel } from '../common/label';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\n\n@Component({\n  selector: 'clr-checkbox-container,clr-toggle-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-checkbox-wrapper,clr-toggle-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, ControlClassService, IfErrorService],\n})\nexport class ClrCheckboxContainer implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  invalid = false;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  private inline = false;\n  control: NgControl;\n  // private formGroup: AbstractControl;\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n\n  // @TODO Solve for group validation, which doesn't work now with ngModelGroup\n  // Blocked by https://github.com/angular/angular/issues/20268\n  // @Input()\n  // set clrFormGroup(value: FormGroup) {\n  //   this.formGroup = value;\n  // }\n\n  // @Input()\n  // set clrFormArray(value: FormArray) {\n  //   this.formGroup = value;\n  // }\n\n  constructor(\n    private ifErrorService: IfErrorService,\n    @Optional() private layoutService: LayoutService,\n    private controlClassService: ControlClassService,\n    private ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  ngOnInit() {\n    // @TODO put a solution in for form group validation\n    // if (!this.formGroup) {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n    // } else {\n    //   // Because ngModel does this, we have to delay a tick to get the result\n    //   Promise.resolve().then(() => {\n    //     this.subscriptions.push(\n    //       this.formGroup.statusChanges.subscribe(() => {\n    //         this.invalid = this.formGroup.invalid;\n    //       })\n    //     );\n    //   });\n    // }\n  }\n\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid(), this.inline ? 'clr-control-inline' : '');\n  }\n\n  addGrid() {\n    if (this.layoutService && !this.layoutService.isVertical()) {\n      return true;\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrCheckbox } from './checkbox';\nimport { ClrCheckboxContainer } from './checkbox-container';\nimport { ClrCheckboxWrapper } from './checkbox-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrCommonFormsModule, ClrHostWrappingModule],\n  declarations: [ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  exports: [ClrCommonFormsModule, ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  entryComponents: [ClrCheckboxWrapper],\n})\nexport class ClrCheckboxModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nlet activeCounter = 0;\n\nexport const IF_ACTIVE_ID = new InjectionToken<number>('IF_ACTIVE_ID');\n\nexport function tokenFactory() {\n  return ++activeCounter;\n}\n\nexport const IF_ACTIVE_ID_PROVIDER = {\n  provide: IF_ACTIVE_ID,\n  useFactory: tokenFactory,\n};\n\n@Injectable()\n\n/*********\n * @class IfActiveService\n *\n * @description\n * An injectable service used by IfActive structural directives and the components that implement IfActive in their\n * templates. It holds the value of the current state and provides an Observable that both the directive and the\n * implementing component can subscribe to in order to take action on current value changes.\n *\n */\nexport class IfActiveService {\n  /********\n   * @property _currentChange\n   *\n   * @description\n   * A RXJS Subject that updates and provides subscriptions to for the current current state of a component template\n   * implemting the IfActive structural directive.\n   *\n   */\n  private _currentChange: Subject<number> = new Subject<number>();\n\n  /*********\n   * @property _current\n   *\n   * @description\n   * A property holding the current value for current/closed state of an IfActive structural directive.\n   */\n  private _current: number;\n\n  /*********\n   *\n   * @description\n   * A getter function that provides an observable for the _current Subject.\n   *\n   */\n  public get currentChange(): Observable<number> {\n    return this._currentChange.asObservable();\n  }\n\n  /*********\n   *\n   * @description\n   * A setter function that updates the current state of _current for this instance of IfActive structural directive.\n   * And, broadcasts the new value to all subscribers.\n   *\n   * @param value\n   */\n  public set current(value: number) {\n    if (this._current !== value) {\n      this._current = value;\n      this._currentChange.next(value);\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A getter that returns the current value of this IfActive instance.\n   * @returns\n   */\n  public get current(): number {\n    return this._current;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IF_ACTIVE_ID, IfActiveService } from './if-active.service';\n\n@Directive({ selector: '[clrIfActive]' })\n\n/**********\n *\n * @class ClrIfActive\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: IfActiveService to maintain state between itself and\n * the component using it in the component template.\n *\n */\nexport class ClrIfActive implements OnDestroy {\n  private subscription: Subscription;\n  private wasActive: boolean = false;\n\n  constructor(\n    private ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.checkAndUpdateView(ifActiveService.current);\n\n    this.subscription = this.ifActiveService.currentChange.subscribe(newCurrentId => {\n      this.checkAndUpdateView(newCurrentId);\n    });\n  }\n\n  private checkAndUpdateView(currentId: number) {\n    const isNowActive = currentId === this.id;\n    // only emit if the new active state is changed since last time.\n    if (isNowActive !== this.wasActive) {\n      this.updateView(isNowActive);\n      this.activeChange.emit(isNowActive);\n      this.wasActive = isNowActive;\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A setter that updates IfActiveService.active with value.\n   *\n   * @param value\n   */\n  @Input('clrIfActive')\n  public set active(value: boolean) {\n    if (value) {\n      this.ifActiveService.current = this.id;\n    }\n  }\n\n  /**********\n   * @property activeChange\n   *\n   * @description\n   * An event emitter that emits when the active property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   *\n   */\n  @Output('clrIfActiveChange') activeChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /********\n   *\n   * @description\n   * A getter that returns the current IfActiveService.active value.\n   */\n  public get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a any value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ElementRef, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\n\n/*********\n * @class IfOpenService\n *\n * @description\n * An injectable service used by IfOpen structural directives and the components that implemnt IfOpen in their\n * templates. It holds the value of the open state and provides an Observable that both the directive and the\n * implementing component can subscribe to in order to take action on open value changes.\n *\n */\nexport class IfOpenService {\n  /********\n   * @property _openChange\n   *\n   * @description\n   * A RXJS Subject that updates and provides subscriptions to for the current open state of a component template\n   * implemting the IfOpen structural directive.\n   */\n  private _openChange: Subject<boolean> = new Subject<boolean>();\n\n  /*********\n   * @property _open\n   *\n   * @description\n   * A property holding the current value for open/closed state of an IfOpen structural directive.\n   *\n   */\n  private _open: boolean;\n\n  /*********\n   *\n   * @description\n   * A getter function that provides an observable for the _opened Subject.\n   *\n   */\n  public get openChange(): Observable<boolean> {\n    return this._openChange.asObservable();\n  }\n\n  /*********\n   *\n   * @description\n   * A setter function that updates the current state of _open for this instance of IfOpen structural directive. And,\n   * broadcasts the new value to all subscribers.\n   *\n   * @param value\n   */\n  public set open(value: boolean) {\n    value = !!value;\n    if (this._open !== value) {\n      this._open = value;\n      this._openChange.next(value);\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A getter that returns the current value of this IfOpen instance.\n   *\n   */\n  public get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * Sometimes, we need to remember the event that triggered the toggling to avoid loops.\n   * This is for instance the case of components that open on a click, but close on a click outside.\n   */\n  public originalEvent: any;\n  public toggleWithEvent(event: any) {\n    this.originalEvent = event;\n    this.open = !this.open;\n    delete this.originalEvent;\n  }\n\n  /**\n   *  Popovers might need to ignore click events on an element\n   *  (eg: popover opens on focus on an input field. Clicks should be ignored in this case)\n   */\n  private _ignoredElementChange: Subject<ElementRef> = new Subject<ElementRef>();\n\n  get ignoredElementChange(): Observable<ElementRef> {\n    return this._ignoredElementChange.asObservable();\n  }\n\n  registerIgnoredElement(element: ElementRef) {\n    this._ignoredElementChange.next(element);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfOpenService } from './if-open.service';\n\n@Directive({ selector: '[clrIfOpen]' })\n\n/**********\n *\n * @class ClrIfOpen\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: IfOpenService to maintain state between itself and the component\n * using it in the component template.\n *\n */\nexport class ClrIfOpen implements OnDestroy {\n  private subscription: Subscription;\n\n  /*********\n   *\n   * @description\n   * A setter that updates IfOpenService.open with value.\n   *\n   * @param value\n   */\n  @Input('clrIfOpen')\n  public set open(value: boolean) {\n    this.ifOpenService.open = value;\n  }\n\n  /**********\n   * @property openChange\n   *\n   * @description\n   * An event emitter that emits when the open property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   */\n  @Output('clrIfOpenChange') openChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /********\n   *\n   * @description\n   * A getter that returns the current IfOpenService.open value.\n   *\n   */\n  public get open() {\n    return this.ifOpenService.open;\n  }\n\n  constructor(\n    private ifOpenService: IfOpenService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.subscription = this.ifOpenService.openChange.subscribe(change => {\n      this.updateView(change);\n      this.openChange.emit(change);\n    });\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a boolean value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { LoadingListener } from '../loading/loading-listener';\nimport { ClrLoadingState } from '../loading/loading';\n\n@Injectable()\nexport class IfExpandService implements LoadingListener {\n  public expandable: number = 0;\n\n  protected _loading: boolean = false;\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  set loading(value: boolean) {\n    value = !!value;\n    if (value !== this._loading) {\n      this._loading = value;\n    }\n  }\n\n  protected _expanded: boolean = false;\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._expandChange.next(value);\n    }\n  }\n\n  public toggle() {\n    this.expanded = !this._expanded;\n  }\n\n  protected _expandChange: Subject<boolean> = new Subject<boolean>();\n  public get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  loadingStateChange(state: ClrLoadingState): void {\n    switch (state) {\n      case ClrLoadingState.LOADING:\n        this.loading = true;\n        break;\n      default:\n        this.loading = false;\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from './if-expanded.service';\n\n@Directive({ selector: '[clrIfExpanded]' })\nexport class ClrIfExpanded implements OnInit, OnDestroy {\n  private _expanded: boolean = false;\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input('clrIfExpanded')\n  set expanded(value: boolean) {\n    if (typeof value === 'boolean') {\n      this.expand.expanded = value;\n      this._expanded = value;\n    }\n  }\n\n  @Output('clrIfExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  constructor(\n    @Optional() private template: TemplateRef<any>,\n    private container: ViewContainerRef,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private expand: IfExpandService\n  ) {\n    expand.expandable++;\n    this._subscriptions.push(\n      expand.expandChange.subscribe(() => {\n        this.updateView();\n        this.expandedChange.emit(this.expand.expanded);\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  private updateView() {\n    if (this.expand.expanded && this.container.length !== 0) {\n      return;\n    }\n    if (this.template) {\n      if (this.expand.expanded) {\n        // Should we pass a context? I don't see anything useful to pass right now,\n        // but we can come back to it in the future as a solution for additional features.\n        this.container.createEmbeddedView(this.template);\n      } else {\n        // TODO: Move when we move the animation logic to Datagrid Row Expand\n        // We clear before the animation is over. Not ideal, but doing better would involve a much heavier\n        // process for very little gain. Once Angular animations are dynamic enough, we should be able to\n        // get the optimal behavior.\n        this.container.clear();\n      }\n    } else {\n      try {\n        // If we don't have a template ref, we fallback to a crude display: none for now.\n        if (this.expand.expanded) {\n          this.renderer.setStyle(this.el.nativeElement, 'display', null);\n        } else {\n          this.renderer.setStyle(this.el.nativeElement, 'display', 'none');\n        }\n      } catch (e) {\n        // We catch the case where clrIfExpanded was put on a non-DOM element, and we just do nothing\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.updateView();\n  }\n\n  ngOnDestroy() {\n    this.expand.expandable--;\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { ClrIfActive } from './if-active.directive';\nimport { ClrIfOpen } from './if-open.directive';\nimport { ClrIfExpanded } from './if-expanded.directive';\n\nexport * from './if-active.directive';\nexport * from './if-open.directive';\nexport * from './if-expanded.directive';\n\nexport const CONDITIONAL_DIRECTIVES: Type<any>[] = [ClrIfActive, ClrIfOpen, ClrIfExpanded];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CONDITIONAL_DIRECTIVES } from './index';\n\n@NgModule({ imports: [CommonModule], declarations: [CONDITIONAL_DIRECTIVES], exports: [CONDITIONAL_DIRECTIVES] })\nexport class ClrConditionalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\n@Injectable({ providedIn: 'root' })\nexport class FocusTrapTracker {\n  private _previousFocusTraps: FocusTrapDirective[] = [];\n  private _current: FocusTrapDirective;\n\n  get current(): FocusTrapDirective {\n    return this._current;\n  }\n\n  set current(value: FocusTrapDirective) {\n    this._previousFocusTraps.push(this._current);\n    this._current = value;\n  }\n\n  get nbFocusTrappers(): number {\n    return this._previousFocusTraps.length;\n  }\n\n  activatePreviousTrapper() {\n    this._current = this._previousFocusTraps.pop();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  OnDestroy,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\n\nimport { FocusTrapTracker } from './focus-trap-tracker.service';\n\n@Directive({ selector: '[clrFocusTrap]' })\nexport class FocusTrapDirective implements AfterViewInit, OnDestroy {\n  private previousActiveElement: any;\n  private document: Document;\n\n  private topReboundEl: any;\n  private bottomReboundEl: any;\n\n  constructor(\n    private el: ElementRef,\n    private injector: Injector,\n    private focusTrapsTracker: FocusTrapTracker,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = this.injector.get(DOCUMENT);\n    this.focusTrapsTracker.current = this;\n\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n  }\n\n  @HostListener('document:focusin', ['$event'])\n  onFocusIn(event: any) {\n    const nativeElement: HTMLElement = this.el.nativeElement;\n\n    if (this.focusTrapsTracker.current === this && event.target && !nativeElement.contains(event.target)) {\n      nativeElement.focus();\n    }\n  }\n\n  private createFocusableOffScreenEl(): any {\n    // Not using Renderer2's createElement method because that leads to DOM leakage.\n    // https://github.com/angular/angular/issues/26954\n    const offScreenSpan = this.document.createElement('span');\n    this.renderer.setAttribute(offScreenSpan, 'tabindex', '0');\n    this.renderer.addClass(offScreenSpan, 'offscreen-focus-rebounder');\n\n    return offScreenSpan;\n  }\n\n  private addReboundEls() {\n    // We will add these focus rebounding elements only in the following conditions:\n    // 1. It should be running inside browser platform as it accesses document.body element\n    // 2. We should NOT add them more than once. Hence, we are counting a number of focus trappers\n    //    and only add on the first focus trapper.\n\n    if (isPlatformBrowser(this.platformId) && this.focusTrapsTracker.nbFocusTrappers === 1) {\n      this.topReboundEl = this.createFocusableOffScreenEl();\n      this.bottomReboundEl = this.createFocusableOffScreenEl();\n      // Add reboundBeforeTrapEl to the document body as the first child\n      this.renderer.insertBefore(this.document.body, this.topReboundEl, this.document.body.firstChild);\n      // Add reboundAfterTrapEl to the document body as the last child\n      this.renderer.appendChild(this.document.body, this.bottomReboundEl);\n    }\n  }\n\n  private removeReboundEls() {\n    if (\n      isPlatformBrowser(this.platformId) &&\n      this.focusTrapsTracker.nbFocusTrappers === 1 &&\n      this.topReboundEl &&\n      this.bottomReboundEl\n    ) {\n      // The renderer does not immediately remove the child nodes,\n      // which may lead to synchronicity issues.\n      this.document.body.removeChild(this.topReboundEl);\n      this.document.body.removeChild(this.bottomReboundEl);\n\n      // These are here to to make sure that\n      // we completely delete all traces of the removed DOM objects.\n      delete this.topReboundEl;\n      delete this.bottomReboundEl;\n    }\n  }\n\n  public setPreviousFocus(): void {\n    if (this.previousActiveElement && this.previousActiveElement.focus) {\n      this.previousActiveElement.focus();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.previousActiveElement = <HTMLElement>this.document.activeElement;\n    }\n\n    this.addReboundEls();\n  }\n\n  ngOnDestroy() {\n    this.removeReboundEls();\n    this.setPreviousFocus();\n    this.focusTrapsTracker.activatePreviousTrapper();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\nexport const FOCUS_TRAP_DIRECTIVES: Type<any>[] = [FocusTrapDirective];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FOCUS_TRAP_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_TRAP_DIRECTIVES],\n  exports: [FOCUS_TRAP_DIRECTIVES],\n})\nexport class ClrFocusTrapModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * This is the en-001 short locale date format. Setting as default.\n */\nexport const DEFAULT_LOCALE_FORMAT: string = 'dd/MM/y';\n\n// https://en.wikipedia.org/wiki/Date_format_by_country\nexport const LITTLE_ENDIAN_REGEX: RegExp = /d+.+m+.+y+/i;\nexport const MIDDLE_ENDIAN_REGEX: RegExp = /m+.+d+.+y+/i;\n// No need for BIG_ENDIAN_REGEX because anything that doesn't satisfy the above 2\n// is automatically BIG_ENDIAN\n\nexport const DELIMITER_REGEX: RegExp = /d+|m+|y+/i;\n\nexport const USER_INPUT_REGEX: RegExp = /\\d+/g;\n\nexport const MOBILE_USERAGENT_REGEX: RegExp = /Mobi/i;\n\nexport const RTL_REGEX: RegExp = /\\u200f/g;\n\nexport const YEAR: string = 'YYYY';\nexport const MONTH: string = 'MM';\nexport const DATE: string = 'DD';\n\nexport type FormatType = 'LITTLE_ENDIAN' | 'MIDDLE_ENDIAN' | 'BIG_ENDIAN';\n\nexport type InputDateDisplayFormat = {\n  readonly name: FormatType;\n  readonly format: [string, string, string];\n};\n\nexport const LITTLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'LITTLE_ENDIAN',\n  format: [DATE, MONTH, YEAR],\n};\n\nexport const MIDDLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'MIDDLE_ENDIAN',\n  format: [MONTH, DATE, YEAR],\n};\n\nexport const BIG_ENDIAN: InputDateDisplayFormat = {\n  name: 'BIG_ENDIAN',\n  format: [YEAR, MONTH, DATE],\n};\n\nexport const NO_OF_DAYS_IN_A_WEEK: number = 7;\nexport const NO_OF_ROWS_IN_CALENDAR_VIEW: number = 6;\nexport const TOTAL_DAYS_IN_DAYS_VIEW: number = NO_OF_DAYS_IN_A_WEEK * NO_OF_ROWS_IN_CALENDAR_VIEW;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { WeekDay } from '@angular/common';\n\n/**\n * Returns the number of days in a month.\n */\nexport function getNumberOfDaysInTheMonth(year: number, month: number): number {\n  // If we go to the next month, but use a day of 0, it returns the last day from the previous month\n  return new Date(year, month + 1, 0).getDate();\n}\n\n/**\n * Returns the day for the corresponding date where 0 represents Sunday.\n */\nexport function getDay(year: number, month: number, date: number): WeekDay {\n  return new Date(year, month, date).getDay();\n}\n\n/**\n * Takes in a year and if it is a 2 digit year, returns the corresponding 4 digit year.\n * Window of 80 years before and 20 years after the present year.\n * Credit: https://github.com/globalizejs/globalize/blob/e1b31cd6a4f1cff75b185b68b7a32220aac5196f/src/date/parse.js\n */\nexport function parseToFourDigitYear(year: number): number {\n  if (year > 9999 || (year > 100 && year < 999) || year < 10) {\n    return -1;\n  }\n  if (year > 999) {\n    return year;\n  }\n  const currYear: number = new Date().getFullYear();\n  const century: number = Math.floor(currYear / 100) * 100;\n  let result: number = year + century;\n  if (result > currYear + 20) {\n    result = result - 100;\n  }\n  return result;\n}\n\nexport function datesAreEqual(date1: Date, date2: Date) {\n  if (date1 instanceof Date && date2 instanceof Date) {\n    return (\n      date1.getFullYear() === date2.getFullYear() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getDate() === date2.getDate()\n    );\n  } else {\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DayModel } from './day.model';\n\nexport class DayViewModel {\n  constructor(\n    public dayModel: DayModel,\n    public isTodaysDate: boolean = false,\n    public isDisabled: boolean = false,\n    public isSelected: boolean = false,\n    public isFocusable: boolean = false\n  ) {}\n\n  /**\n   * Gets the tab index based on the isFocusable flag.\n   */\n  get tabIndex(): number {\n    return this.isFocusable ? 0 : -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class DayModel {\n  constructor(public readonly year: number, public readonly month: number, public readonly date: number) {}\n\n  /**\n   * Checks if the passed CalendarDate is equal to itself.\n   */\n  isEqual(day: DayModel) {\n    if (day) {\n      return this.year === day.year && this.month === day.month && this.date === day.date;\n    }\n    return false;\n  }\n\n  toDate(): Date {\n    return new Date(this.year, this.month, this.date);\n  }\n\n  /**\n   * Returns a new DayModel which is incremented based on the value passed.\n   */\n  incrementBy(value: number): DayModel {\n    // Creating new Javascript Date object to increment because\n    // it will automatically take care of switching to next or previous\n    // months & years without we having to worry about it.\n    const date: Date = new Date(this.year, this.month, this.date + value);\n    return new DayModel(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  /**\n   * Clones the current day model.\n   */\n  clone(): DayModel {\n    return new DayModel(this.year, this.month, this.date);\n  }\n\n  public toDateString(): string {\n    return this.toDate().toLocaleDateString();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NO_OF_DAYS_IN_A_WEEK, NO_OF_ROWS_IN_CALENDAR_VIEW, TOTAL_DAYS_IN_DAYS_VIEW } from '../utils/constants';\nimport { getDay } from '../utils/date-utils';\n\nimport { CalendarModel } from './calendar.model';\nimport { DayViewModel } from './day-view.model';\nimport { DayModel } from './day.model';\n\nexport class CalendarViewModel {\n  constructor(\n    public calendar: CalendarModel,\n    private selectedDay: DayModel,\n    private focusableDay: DayModel,\n    private today: DayModel,\n    public firstDayOfWeek: number\n  ) {\n    this.initializeCalendarView();\n  }\n\n  private currMonthDayViews: DayViewModel[] = [];\n\n  private _calendarView: DayViewModel[][];\n\n  /**\n   * DayViewModel matrix. Size 6x7\n   */\n  get calendarView(): DayViewModel[][] {\n    return this._calendarView;\n  }\n\n  /**\n   * Generates a 6x7 matrix of DayViewModel based on the Calendar.\n   * The 6x7 matrix is structured according to the first day of the week.\n   * 6 rows to accommodate months which might have dates spanning over 6 weeks.\n   * 7 columns because there are 7 days in a week :P :D\n   */\n  private initializeCalendarView(): void {\n    // Generate prev and next month calendar models.\n    const prevMonthCalendar: CalendarModel = this.calendar.previousMonth();\n    const nextMonthCalendar: CalendarModel = this.calendar.nextMonth();\n\n    // Get no of days from prev and next months.\n    const daysFromPrevMonthInCalView: number = this.numDaysFromPrevMonthInCalView(\n      this.calendar.year,\n      this.calendar.month\n    );\n    const daysFromNextMonthInCalView: number =\n      TOTAL_DAYS_IN_DAYS_VIEW - (this.calendar.days.length + daysFromPrevMonthInCalView);\n\n    // Generate prev, curr and next day view models\n    let prevMonthDayViews: DayViewModel[] = [];\n    let nextMonthDayViews: DayViewModel[] = [];\n\n    if (daysFromPrevMonthInCalView > 0) {\n      prevMonthDayViews = this.generateDayViewModels(\n        prevMonthCalendar.days.slice(-1 * daysFromPrevMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    this.currMonthDayViews = this.generateDayViewModels(this.calendar.days, false, true);\n\n    if (daysFromNextMonthInCalView > 0) {\n      nextMonthDayViews = this.generateDayViewModels(\n        nextMonthCalendar.days.slice(0, daysFromNextMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    // Generate calendar view and initialize flags\n    this._calendarView = this.generateCalendarView(prevMonthDayViews, this.currMonthDayViews, nextMonthDayViews);\n    this.initializeSelectedDay();\n    this.initializeFocusableDay();\n  }\n\n  /**\n   * Generates a DayViewModel array based on the DayModel passed\n   */\n  private generateDayViewModels(days: DayModel[], isDisabled: boolean, isCurrentCalendar: boolean): DayViewModel[] {\n    const dayViews: DayViewModel[] = days.map(day => {\n      return new DayViewModel(day, false, isDisabled, false, false);\n    });\n    if (isCurrentCalendar && this.calendar.isDayInCalendar(this.today)) {\n      dayViews[this.today.date - 1].isTodaysDate = true;\n    }\n    return dayViews;\n  }\n\n  /**\n   * Gets the first day of the current month to figure out how many dates of previous month\n   * are needed to complete the Calendar View based on the first day of the week.\n   * eg: Assuming locale en-US, the first day of the week is Sunday,\n   * if first day of the current month lands on Wednesday, then\n   * (this.getDay function would return 3 since\n   * first day of the week is 0), we need the 3 days from the previous month.\n   */\n  private numDaysFromPrevMonthInCalView(currentYear: number, currentMonth: number): number {\n    const firstDayOfCurrMonth: number = getDay(currentYear, currentMonth, 1);\n\n    if (firstDayOfCurrMonth >= this.firstDayOfWeek) {\n      return firstDayOfCurrMonth - this.firstDayOfWeek;\n    } else {\n      return NO_OF_DAYS_IN_A_WEEK + firstDayOfCurrMonth - this.firstDayOfWeek;\n    }\n  }\n\n  /**\n   * Checks if the Day passed is in the CalendarView.\n   */\n  private isDayInCalendarView(day: DayModel): boolean {\n    if (!this.calendar.isDayInCalendar(day)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Using the DayViewModels from the previous, current and next month, this function\n   * generates the CalendarView.\n   */\n  private generateCalendarView(prev: DayViewModel[], curr: DayViewModel[], next: DayViewModel[]): DayViewModel[][] {\n    const combinationArr: DayViewModel[] = [...prev, ...curr, ...next];\n\n    const calendarView: DayViewModel[][] = [];\n    for (let i = 0; i < NO_OF_ROWS_IN_CALENDAR_VIEW; i++) {\n      calendarView[i] = combinationArr.slice(i * NO_OF_DAYS_IN_A_WEEK, (i + 1) * NO_OF_DAYS_IN_A_WEEK);\n    }\n    return calendarView;\n  }\n\n  /**\n   * Initialize the selected day if the day is in the calendar.\n   */\n  private initializeSelectedDay(): void {\n    if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.currMonthDayViews[this.selectedDay.date - 1].isSelected = true;\n    }\n  }\n\n  /**\n   * Initializes the focusable day if the day is in the calendar. If focusable day is not set, then\n   * we check for the selected day. If selected day is not set then check if today is in the current\n   * calendar. If not then just set the 15th of the current calendar month.\n   */\n  private initializeFocusableDay(): void {\n    if (this.focusableDay && this.isDayInCalendarView(this.focusableDay)) {\n      this.setFocusableFlag(this.focusableDay, true);\n    } else if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.setFocusableFlag(this.selectedDay, true);\n      this.focusableDay = this.selectedDay.clone();\n    } else if (this.isDayInCalendarView(this.today)) {\n      this.setFocusableFlag(this.today, true);\n      this.focusableDay = this.today.clone();\n    } else {\n      this.focusableDay = new DayModel(this.calendar.year, this.calendar.month, 15);\n      this.setFocusableFlag(this.focusableDay, true);\n    }\n  }\n\n  private setFocusableFlag(day: DayModel, flag: boolean): void {\n    if (day) {\n      this.currMonthDayViews[day.date - 1].isFocusable = flag;\n    }\n  }\n\n  /**\n   * Updates the focusable day in the calendar.\n   */\n  updateFocusableDay(day: DayModel): void {\n    this.setFocusableFlag(this.focusableDay, false);\n    this.setFocusableFlag(day, true);\n    this.focusableDay = day;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { getNumberOfDaysInTheMonth } from '../utils/date-utils';\n\nimport { DayModel } from './day.model';\n\nexport class CalendarModel {\n  constructor(public readonly year: number, public readonly month: number) {\n    this.initializeDaysInCalendar();\n  }\n\n  days: DayModel[];\n\n  /**\n   * Populates the days array with the DayModels in the current Calendar.\n   */\n  private initializeDaysInCalendar(): void {\n    const noOfDaysInCalendar: number = getNumberOfDaysInTheMonth(this.year, this.month);\n    this.days = Array(noOfDaysInCalendar)\n      .fill(null)\n      .map((date, index) => {\n        return new DayModel(this.year, this.month, index + 1);\n      });\n  }\n\n  /**\n   * Checks if the calendar passed is equal to the current calendar.\n   */\n  isEqual(calendar: CalendarModel) {\n    if (calendar) {\n      return this.year === calendar.year && this.month === calendar.month;\n    }\n    return false;\n  }\n\n  /**\n   * Checks if a DayModel is in the Calendar\n   */\n  isDayInCalendar(day: DayModel): boolean {\n    if (day) {\n      return this.year === day.year && this.month === day.month;\n    }\n    return false;\n  }\n\n  /**\n   * Returns CalendarModel of the previous month.\n   */\n  previousMonth(): CalendarModel {\n    if (this.month === 0) {\n      return new CalendarModel(this.year - 1, 11);\n    } else {\n      return new CalendarModel(this.year, this.month - 1);\n    }\n  }\n\n  /**\n   * Returns CalendarModel of the next month.\n   */\n  nextMonth(): CalendarModel {\n    if (this.month === 11) {\n      return new CalendarModel(this.year + 1, 0);\n    } else {\n      return new CalendarModel(this.year, this.month + 1);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { CalendarModel } from '../model/calendar.model';\nimport { DayModel } from '../model/day.model';\n\n/**\n * This service is responsible for:\n * 1. Initializing the displayed calendar.\n * 2. Moving the calendar to the next, previous or current months\n * 3. Managing the focused and selected day models.\n */\n@Injectable()\nexport class DateNavigationService {\n  private _displayedCalendar: CalendarModel;\n\n  get displayedCalendar(): CalendarModel {\n    return this._displayedCalendar;\n  }\n\n  // not a setter because i want this to remain private\n  private setDisplayedCalendar(value: CalendarModel) {\n    if (!this._displayedCalendar.isEqual(value)) {\n      this._displayedCalendar = value;\n      this._displayedCalendarChange.next();\n    }\n  }\n\n  /**\n   * Variable to store today's date.\n   */\n  private _todaysFullDate: Date = new Date();\n  private _today: DayModel;\n\n  private initializeTodaysDate(): void {\n    this._todaysFullDate = new Date();\n    this._today = new DayModel(\n      this._todaysFullDate.getFullYear(),\n      this._todaysFullDate.getMonth(),\n      this._todaysFullDate.getDate()\n    );\n  }\n\n  get today(): DayModel {\n    return this._today;\n  }\n\n  public selectedDay: DayModel;\n\n  private _selectedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  get selectedDayChange(): Observable<DayModel> {\n    return this._selectedDayChange.asObservable();\n  }\n\n  /**\n   * Notifies that the selected day has changed so that the date can be emitted to the user.\n   * Note: Only to be called from day.ts\n   */\n  notifySelectedDayChanged(dayModel: DayModel) {\n    this.selectedDay = dayModel;\n    this._selectedDayChange.next(dayModel);\n  }\n\n  public focusedDay: DayModel;\n\n  /**\n   * Initializes the calendar based on the selected day.\n   */\n  initializeCalendar(): void {\n    this.focusedDay = null; // Can be removed later on the store focus\n    this.initializeTodaysDate();\n    if (this.selectedDay) {\n      this._displayedCalendar = new CalendarModel(this.selectedDay.year, this.selectedDay.month);\n    } else {\n      this._displayedCalendar = new CalendarModel(this.today.year, this.today.month);\n    }\n  }\n\n  changeMonth(month: number): void {\n    this.setDisplayedCalendar(new CalendarModel(this._displayedCalendar.year, month));\n  }\n\n  changeYear(year: number): void {\n    this.setDisplayedCalendar(new CalendarModel(year, this._displayedCalendar.month));\n  }\n\n  /**\n   * Moves the displayed calendar to the next month.\n   */\n  moveToNextMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.nextMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the previous month.\n   */\n  moveToPreviousMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.previousMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the current month and year.\n   */\n  moveToCurrentMonth(): void {\n    if (!this.displayedCalendar.isDayInCalendar(this.today)) {\n      this.setDisplayedCalendar(new CalendarModel(this.today.year, this.today.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  incrementFocusDay(value: number): void {\n    this.focusedDay = this.focusedDay.incrementBy(value);\n    if (this._displayedCalendar.isDayInCalendar(this.focusedDay)) {\n      this._focusedDayChange.next(this.focusedDay);\n    } else {\n      this.setDisplayedCalendar(new CalendarModel(this.focusedDay.year, this.focusedDay.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  private _displayedCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the displayed calendar has changed.\n   */\n  get displayedCalendarChange(): Observable<void> {\n    return this._displayedCalendarChange.asObservable();\n  }\n\n  private _focusOnCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the focus should be applied on the calendar.\n   */\n  get focusOnCalendarChange(): Observable<void> {\n    return this._focusOnCalendarChange.asObservable();\n  }\n\n  private _focusedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  /**\n   * This observable lets the subscriber know that the focused day in the displayed calendar has changed.\n   */\n  get focusedDayChange(): Observable<DayModel> {\n    return this._focusedDayChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { first, filter } from 'rxjs/operators';\n\n/**\n * This service focuses the day that is focusable in the calendar.\n */\n@Injectable()\nexport class DatepickerFocusService {\n  constructor(private _ngZone: NgZone, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  focusCell(elRef: ElementRef): void {\n    this._ngZone.runOutsideAngular(() => {\n      this.ngZoneIsStableInBrowser().subscribe(() => {\n        const focusEl = elRef.nativeElement.querySelector('[tabindex=\"0\"]');\n        if (focusEl) {\n          focusEl.focus();\n        }\n      });\n    });\n  }\n\n  focusInput(element: HTMLInputElement): void {\n    this._ngZone.runOutsideAngular(() => this.ngZoneIsStableInBrowser().subscribe(() => element.focus()));\n  }\n\n  elementIsFocused(element: HTMLInputElement) {\n    return isPlatformBrowser(this.platformId) && document.activeElement === element;\n  }\n\n  private ngZoneIsStableInBrowser() {\n    // Credit: Material: https://github.com/angular/material2/blob/master/src/lib/datepicker/calendar.ts\n    return this._ngZone.onStable.asObservable().pipe(first(), filter(() => isPlatformBrowser(this.platformId)));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  FormatWidth,\n  FormStyle,\n  getLocaleDateFormat,\n  getLocaleDayNames,\n  getLocaleFirstDayOfWeek,\n  getLocaleMonthNames,\n  TranslationWidth,\n} from '@angular/common';\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { ClrDayOfWeek } from '../interfaces/day-of-week.interface';\n\n/**\n * This service extracts the Angular CLDR data needed by the datepicker.\n */\n@Injectable()\nexport class LocaleHelperService {\n  constructor(@Inject(LOCALE_ID) public locale: string) {\n    this.initializeLocaleData();\n  }\n\n  private _firstDayOfWeek: number = 0;\n  private _localeDays: ReadonlyArray<ClrDayOfWeek>;\n  private _localeMonthsAbbreviated: ReadonlyArray<string>;\n  private _localeMonthsWide: ReadonlyArray<string>;\n  private _localeDateFormat: string;\n\n  get firstDayOfWeek(): number {\n    return this._firstDayOfWeek;\n  }\n\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeDays;\n  }\n\n  // leave for backward compatibility\n  get localeDaysNarrow(): ReadonlyArray<string> {\n    return this._localeDays.map(day => day.narrow);\n  }\n\n  get localeMonthsAbbreviated(): ReadonlyArray<string> {\n    return this._localeMonthsAbbreviated;\n  }\n\n  get localeMonthsWide(): ReadonlyArray<string> {\n    return this._localeMonthsWide;\n  }\n\n  get localeDateFormat(): string {\n    return this._localeDateFormat;\n  }\n\n  /**\n   * Initializes the locale data.\n   */\n  private initializeLocaleData(): void {\n    // Order in which these functions is called is very important.\n    this.initializeFirstDayOfWeek();\n    this.initializeLocaleDateFormat();\n    this.initializeLocaleMonthsAbbreviated();\n    this.initializeLocaleMonthsWide();\n    this.initializeLocaleDays();\n  }\n\n  /**\n   * Initialize day names based on the locale.\n   * eg: [{day: Sunday, narrow: S}, {day: Monday, narrow: M}...] for en-US.\n   */\n  private initializeLocaleDays(): void {\n    // Get locale day names starting with Sunday\n    const tempArr = [];\n    const tempWideArr: string[] = getLocaleDayNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n    const tempNarrowArr: string[] = getLocaleDayNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Narrow\n    ).slice();\n    // Get first day of the week based on the locale\n    const firstDayOfWeek: number = this.firstDayOfWeek;\n    for (let i = 0; i < 7; i++) {\n      tempArr.push({ day: tempWideArr[i], narrow: tempNarrowArr[i] });\n    }\n    // Rearrange the tempArr to start with the first day of the week based on the locale.\n    if (firstDayOfWeek > 0) {\n      const prevDays: string[] = tempArr.splice(0, firstDayOfWeek);\n      tempArr.push(...prevDays);\n    }\n    this._localeDays = tempArr;\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Abbreviated format.\n   * e.g. `[Jan, Feb, ...]` for en-US\n   */\n  private initializeLocaleMonthsAbbreviated(): void {\n    this._localeMonthsAbbreviated = getLocaleMonthNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Abbreviated\n    ).slice();\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Wide format.\n   * e.g. `[January, February, ...]` for en-US\n   */\n  private initializeLocaleMonthsWide(): void {\n    this._localeMonthsWide = getLocaleMonthNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n  }\n\n  /**\n   * Initializes the first day of the week based on the locale.\n   */\n  private initializeFirstDayOfWeek(): void {\n    this._firstDayOfWeek = getLocaleFirstDayOfWeek(this.locale);\n  }\n\n  private initializeLocaleDateFormat(): void {\n    this._localeDateFormat = getLocaleDateFormat(this.locale, FormatWidth.Short);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, HostListener, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { CalendarViewModel } from './model/calendar-view.model';\nimport { CalendarModel } from './model/calendar.model';\nimport { DayModel } from './model/day.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { NO_OF_DAYS_IN_A_WEEK } from './utils/constants';\nimport { ClrDayOfWeek } from './interfaces/day-of-week.interface';\n\n@Component({ selector: 'clr-calendar', templateUrl: './calendar.html' })\nexport class ClrCalendar implements OnDestroy {\n  private _subs: Subscription[] = [];\n\n  constructor(\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef\n  ) {\n    this.generateCalendarView();\n    this.initializeSubscriptions();\n  }\n\n  /**\n   * Calendar View Model to generate the Calendar.\n   */\n  calendarViewModel: CalendarViewModel;\n\n  /**\n   * Gets the locale days according to the TranslationWidth.Narrow format.\n   */\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeHelperService.localeDays;\n  }\n\n  get calendar(): CalendarModel {\n    return this._dateNavigationService.displayedCalendar;\n  }\n\n  get selectedDay(): DayModel {\n    return this._dateNavigationService.selectedDay;\n  }\n\n  get focusedDay(): DayModel {\n    return this._dateNavigationService.focusedDay;\n  }\n\n  get today(): DayModel {\n    return this._dateNavigationService.today;\n  }\n\n  /**\n   * Initialize subscriptions to:\n   * 1. update the calendar view model.\n   * 2. update the focusable day in the calendar view model.\n   * 3. focus on the focusable day in the calendar.\n   */\n  private initializeSubscriptions(): void {\n    this._subs.push(\n      this._dateNavigationService.displayedCalendarChange.subscribe(() => {\n        this.generateCalendarView();\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusedDayChange.subscribe((focusedDay: DayModel) => {\n        this.calendarViewModel.updateFocusableDay(focusedDay);\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusOnCalendarChange.subscribe(() => {\n        this._datepickerFocusService.focusCell(this._elRef);\n      })\n    );\n  }\n\n  /**\n   * Generates the Calendar View based on the calendar retrieved from the DateNavigationService.\n   */\n  private generateCalendarView(): void {\n    this.calendarViewModel = new CalendarViewModel(\n      this.calendar,\n      this.selectedDay,\n      this.focusedDay,\n      this.today,\n      this._localeHelperService.firstDayOfWeek\n    );\n  }\n\n  /**\n   * Delegates Keyboard arrow navigation to the DateNavigationService.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (event && this.focusedDay) {\n      switch (event.keyCode) {\n        case UP_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1 * NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case DOWN_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case LEFT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1);\n          break;\n        case RIGHT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(1);\n          break;\n        default:\n          break; // No default case. TSLint x-(\n      }\n    }\n  }\n\n  /**\n   * Focuses on the focusable day when the Calendar View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy(): void {\n    this._subs.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const UP_ARROW: number = 38;\nexport const DOWN_ARROW: number = 40;\nexport const RIGHT_ARROW: number = 39;\nexport const LEFT_ARROW: number = 37;\nexport const ENTER: number = 13;\nexport const SPACE: number = 32;\nexport const TAB: number = 9;\nexport const ESC: number = 27;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class FocusService {\n  private _focused: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  get focusChange(): Observable<boolean> {\n    return this._focused.asObservable();\n  }\n  set focused(state: boolean) {\n    this._focused.next(state);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class DateFormControlService {\n  private _touchedChange: Subject<void> = new Subject<void>();\n  public disabled;\n\n  get touchedChange(): Observable<void> {\n    return this._touchedChange.asObservable();\n  }\n\n  private _dirtyChange: Subject<void> = new Subject<void>();\n\n  get dirtyChange(): Observable<void> {\n    return this._dirtyChange.asObservable();\n  }\n\n  markAsTouched(): void {\n    this._touchedChange.next();\n  }\n\n  markAsDirty(): void {\n    this._dirtyChange.next();\n  }\n\n  // friendly wrapper\n  setDisabled(state: boolean) {\n    this.disabled = state;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport {\n  BIG_ENDIAN,\n  DEFAULT_LOCALE_FORMAT,\n  DELIMITER_REGEX,\n  InputDateDisplayFormat,\n  LITTLE_ENDIAN,\n  LITTLE_ENDIAN_REGEX,\n  MIDDLE_ENDIAN,\n  MIDDLE_ENDIAN_REGEX,\n  RTL_REGEX,\n  USER_INPUT_REGEX,\n} from '../utils/constants';\nimport { getNumberOfDaysInTheMonth, parseToFourDigitYear } from '../utils/date-utils';\n\nimport { LocaleHelperService } from './locale-helper.service';\n\n@Injectable()\nexport class DateIOService {\n  public cldrLocaleDateFormat: string = DEFAULT_LOCALE_FORMAT;\n  private localeDisplayFormat: InputDateDisplayFormat = LITTLE_ENDIAN;\n  private delimiters: [string, string] = ['/', '/'];\n\n  constructor(private _localeHelperService: LocaleHelperService) {\n    this.cldrLocaleDateFormat = this._localeHelperService.localeDateFormat;\n    this.initializeLocaleDisplayFormat();\n  }\n\n  private initializeLocaleDisplayFormat(): void {\n    const format: string = this.cldrLocaleDateFormat.toLocaleLowerCase();\n    if (LITTLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = LITTLE_ENDIAN;\n    } else if (MIDDLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = MIDDLE_ENDIAN;\n    } else {\n      // everything else is set to BIG-ENDIAN FORMAT\n      this.localeDisplayFormat = BIG_ENDIAN;\n    }\n    this.extractDelimiters();\n  }\n\n  private extractDelimiters(): void {\n    if (this.cldrLocaleDateFormat) {\n      // Sanitize Date Format. Remove RTL characters.\n      // FIXME: When we support RTL, remove this and handle it correctly.\n      const localeFormat: string = this.cldrLocaleDateFormat.replace(RTL_REGEX, '');\n      const delimiters: string[] = localeFormat.split(DELIMITER_REGEX);\n\n      // NOTE: The split from the CLDR date format should always result\n      // in an arary with 4 elements. The 1st and the 2nd values are the delimiters\n      // we will use in order.\n      // Eg: \"dd/MM/y\".split(/d+|m+|y+/i) results in [\"\", \"/\", \"/\", \"\"]\n      if (delimiters && delimiters.length === 4) {\n        this.delimiters = [delimiters[1], delimiters[2]];\n      } else {\n        console.error('Unexpected date format received. Delimiters extracted: ', delimiters);\n      }\n    }\n  }\n\n  toLocaleDisplayFormatString(date: Date): string {\n    if (date) {\n      if (isNaN(date.getTime())) {\n        return '';\n      }\n      const dateNo: number = date.getDate();\n      const monthNo: number = date.getMonth() + 1;\n      const dateStr: string = dateNo > 9 ? dateNo.toString() : '0' + dateNo;\n      const monthStr: string = monthNo > 9 ? monthNo.toString() : '0' + monthNo;\n      if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n        return dateStr + this.delimiters[0] + monthStr + this.delimiters[1] + date.getFullYear();\n      } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n        return monthStr + this.delimiters[0] + dateStr + this.delimiters[1] + date.getFullYear();\n      } else {\n        return date.getFullYear() + this.delimiters[0] + monthStr + this.delimiters[1] + dateStr;\n      }\n    }\n    return '';\n  }\n\n  get placeholderText(): string {\n    const format: [string, string, string] = this.localeDisplayFormat.format;\n    return format[0] + this.delimiters[0] + format[1] + this.delimiters[1] + format[2];\n  }\n\n  /**\n   * Checks if the month entered by the user is valid or not.\n   * Note: Month is 0 based.\n   */\n  private isValidMonth(month: number): boolean {\n    return month > -1 && month < 12;\n  }\n\n  /**\n   * Checks if the date is valid depending on the year and month provided.\n   */\n  private isValidDate(year: number, month: number, date: number): boolean {\n    return date > 0 && date <= getNumberOfDaysInTheMonth(year, month);\n  }\n\n  /**\n   * Validates the parameters provided and returns the date.\n   * If the parameters are not\n   * valid then return null.\n   * NOTE: (Month here is 1 based since the user has provided that as an input)\n   */\n  private validateAndGetDate(year: string, month: string, date: string): Date {\n    // I don't know whats wrong with the TS compiler. It throws an error if I write\n    // the below if statement. The error is:\n    // Operator '!==' cannot be applied to types '2' and '4'\n    // More info here: https://github.com/Microsoft/TypeScript/issues/12794#issuecomment-270342936\n    /*\n        if (year.length !== 2 || year.length !== 4) {\n            return null;\n        }\n        */\n\n    // Instead I have to write the logic like this x-(\n    const y: number = +year;\n    const m: number = +month - 1; // month is 0 based\n    const d: number = +date;\n    if (!this.isValidMonth(m) || !this.isValidDate(y, m, d)) {\n      return null;\n    }\n    const result: number = parseToFourDigitYear(y);\n    return result !== -1 ? new Date(result, m, d) : null;\n  }\n\n  getDateValueFromDateString(date: string): Date {\n    if (!date) {\n      return null;\n    }\n    const dateParts: string[] = date.match(USER_INPUT_REGEX);\n    if (!dateParts || dateParts.length !== 3) {\n      return null;\n    }\n    const [firstPart, secondPart, thirdPart] = dateParts;\n    if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n      // secondPart is month && firstPart is date\n      return this.validateAndGetDate(thirdPart, secondPart, firstPart);\n    } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n      // firstPart is month && secondPart is date\n      return this.validateAndGetDate(thirdPart, firstPart, secondPart);\n    } else {\n      // secondPart is month && thirdPart is date\n      return this.validateAndGetDate(firstPart, secondPart, thirdPart);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nimport { DATEPICKER_ENABLE_BREAKPOINT } from '../../../utils/breakpoints/breakpoints';\nimport { MOBILE_USERAGENT_REGEX } from '../utils/constants';\n\n@Injectable()\nexport class DatepickerEnabledService {\n  constructor(@Inject(DOCUMENT) private _document: any) {\n    if (this._document) {\n      this._isUserAgentMobile = MOBILE_USERAGENT_REGEX.test(_document.defaultView.navigator.userAgent);\n      this._innerWidth = _document.defaultView.innerWidth;\n    }\n  }\n\n  private _isUserAgentMobile: boolean = false;\n  private _innerWidth: number;\n\n  /**\n   * Returns if the calendar should be active or not.\n   * If the user agent is mobile and the screen width is less than DATEPICKER_ACTIVE_BREAKPOINT\n   * then the calendar is inactive.\n   */\n  get isEnabled(): boolean {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\n    // What they recommend is:\n    //\"In summary, we recommend looking for the string 'Mobi'\n    // anywhere in the User Agent to detect a mobile device.\"\n    if (this._document) {\n      if (this._innerWidth < DATEPICKER_ENABLE_BREAKPOINT && this._isUserAgentMobile) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// iPad mini screen width\n// http://stephen.io/mediaqueries/#iPadMini\nexport const DATEPICKER_ENABLE_BREAKPOINT: number = 768;\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { IfOpenService } from '../../utils/conditional/if-open.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrLabel } from '../common/label';\n\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { PopoverPosition } from '../../popover/common/popover-positions';\n\n@Component({\n  selector: 'clr-date-container',\n  template: `\n      <ng-content select=\"label\"></ng-content>\n      <label *ngIf=\"!label && addGrid()\"></label>\n      <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n        <div class=\"clr-input-wrapper\">\n          <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n            <ng-content select=\"[clrDate]\"></ng-content>\n            <button #actionButton\n                    type=\"button\"\n                    class=\"clr-input-group-icon-action\"\n                    [attr.title]=\"commonStrings.keys.datepickerToggle\"\n                    [attr.aria-label]=\"commonStrings.keys.datepickerToggle\"\n                    [disabled]=\"isInputDateDisabled\"\n                    (click)=\"toggleDatepicker($event)\"\n                    *ngIf=\"isEnabled\">\n              <clr-icon shape=\"calendar\"></clr-icon>\n            </button>\n            <clr-datepicker-view-manager *clrIfOpen clrFocusTrap [clrPosition]=\"position\"></clr-datepicker-view-manager>\n          </div>\n          <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n        </div>\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    `,\n  providers: [\n    ControlIdService,\n    IfOpenService,\n    LocaleHelperService,\n    IfErrorService,\n    ControlClassService,\n    FocusService,\n    NgControlService,\n    DateIOService,\n    DateNavigationService,\n    DatepickerEnabledService,\n    DateFormControlService,\n  ],\n  host: {\n    '[class.clr-form-control-disabled]': 'isInputDateDisabled',\n    '[class.clr-form-control]': 'true',\n    '[class.clr-row]': 'addGrid()',\n  },\n})\nexport class ClrDateContainer implements DynamicWrapper, OnDestroy, AfterViewInit {\n  _dynamic: boolean = false;\n  invalid = false;\n  focus = false;\n  control: NgControl;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  @Input('clrPosition') position: PopoverPosition;\n\n  private toggleButton: ElementRef;\n  @ViewChild('actionButton', { static: false })\n  set actionButton(button: ElementRef) {\n    this.toggleButton = button;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private _ifOpenService: IfOpenService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerEnabledService: DatepickerEnabledService,\n    private dateFormControlService: DateFormControlService,\n    public commonStrings: ClrCommonStringsService,\n    private ifErrorService: IfErrorService,\n    private focusService: FocusService,\n    private controlClassService: ControlClassService,\n    @Optional() private layoutService: LayoutService,\n    private ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      })\n    );\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.subscriptions.push(\n      this._ifOpenService.openChange.subscribe(open => {\n        if (open) {\n          this.initializeCalendar();\n        } else {\n          this.toggleButton.nativeElement.focus();\n        }\n      })\n    );\n  }\n\n  /**\n   * Returns the classes to apply to the control\n   */\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  /**\n   * Determines if the control needs to add grid classes\n   */\n  addGrid() {\n    if (this.layoutService && !this.layoutService.isVertical()) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Returns if the Datepicker is enabled or not. If disabled, hides the datepicker trigger.\n   */\n  get isEnabled(): boolean {\n    return this._datepickerEnabledService.isEnabled;\n  }\n\n  /**\n   * Return if Datepicker is diabled or not as Form Control\n   */\n  get isInputDateDisabled(): boolean {\n    /* clrForm wrapper or without clrForm */\n    return (\n      (this.control && this.control.disabled) || (this.dateFormControlService && this.dateFormControlService.disabled)\n    );\n  }\n\n  /**\n   * Processes the user input and Initializes the Calendar everytime the datepicker popover is open.\n   */\n  private initializeCalendar(): void {\n    this._dateNavigationService.initializeCalendar();\n  }\n\n  /**\n   * Toggles the Datepicker Popover.\n   */\n  toggleDatepicker(event: MouseEvent) {\n    this._ifOpenService.toggleWithEvent(event);\n    this.dateFormControlService.markAsTouched();\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport function isBooleanAttributeSet(value: string | boolean): boolean {\n  // for null just return false no need to check anything\n  if (value === null) {\n    return false;\n  }\n  if (typeof value === 'string') {\n    // Empty string is valid, 'true' as string is also valid\n    return value.length >= 0;\n  }\n  // Boolean value will be read as it is, everything else is false\n  return typeof value === 'boolean' ? value : false;\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { FocusService } from '../common/providers/focus.service';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDateContainer } from './date-container';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { datesAreEqual } from './utils/date-utils';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\n\n// There are four ways the datepicker value is set\n// 1. Value set by user typing into text input as a string ex: '01/28/2015'\n// 2. Value set explicitly by Angular Forms APIs as a string ex: '01/28/2015'\n// 3. Value set by user via datepicker UI as a Date Object\n// 4. Value set via `clrDate` input as a Date Object\n\n@Directive({\n  selector: '[clrDate]',\n  host: {\n    '[class.clr-input]': 'true',\n  },\n  providers: [DatepickerFocusService],\n})\nexport class ClrDateInput extends WrappedFormControl<ClrDateContainer> implements OnInit, AfterViewInit, OnDestroy {\n  @Input() placeholder: string;\n  @Output('clrDateChange') dateChange: EventEmitter<Date> = new EventEmitter<Date>(false);\n  @Input('clrDate')\n  set date(date: Date) {\n    if (this.previousDateChange !== date) {\n      this.updateDate(this.getValidDateValueFromDate(date));\n    }\n\n    if (!this.initialClrDateInputValue) {\n      this.initialClrDateInputValue = date;\n    }\n  }\n\n  protected index = 1;\n  private initialClrDateInputValue: Date;\n  private previousDateChange: Date;\n\n  constructor(\n    viewContainerRef: ViewContainerRef,\n    injector: Injector,\n    protected el: ElementRef,\n    protected renderer: Renderer2,\n    @Self()\n    @Optional()\n    protected control: NgControl,\n    @Optional() private container: ClrDateContainer,\n    @Optional() private dateIOService: DateIOService,\n    @Optional() private dateNavigationService: DateNavigationService,\n    @Optional() private datepickerEnabledService: DatepickerEnabledService,\n    @Optional() private dateFormControlService: DateFormControlService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private focusService: FocusService,\n    private datepickerFocusService: DatepickerFocusService\n  ) {\n    super(viewContainerRef, ClrDateContainer, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.populateServicesFromContainerComponent();\n\n    this.subscriptions.push(\n      this.listenForUserSelectedDayChanges(),\n      this.listenForControlValueChanges(),\n      this.listenForTouchChanges(),\n      this.listenForDirtyChanges(),\n      this.listenForInputRefocus()\n    );\n  }\n\n  ngAfterViewInit() {\n    // I don't know why I have to do this but after using the new HostWrapping Module I have to delay the processing\n    // of the initial Input set by the user to here. If I do not 2 issues occur:\n    // 1. The Input setter is called before ngOnInit. ngOnInit initializes the services without which the setter fails.\n    // 2. The Renderer doesn't work before ngAfterViewInit (It used to before the new HostWrapping Module for some reason).\n    // I need the renderer to set the value property on the input to make sure that if the user has supplied a Date\n    // input object, we reflect it with the right date on the input field using the IO service. I am not sure if\n    // these are major issues or not but just noting them down here.\n    this.processInitialInputs();\n  }\n\n  @HostListener('focus')\n  setFocusStates() {\n    this.setFocus(true);\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    this.setFocus(false);\n  }\n\n  @HostBinding('attr.placeholder')\n  get placeholderText(): string {\n    return this.placeholder ? this.placeholder : this.dateIOService.placeholderText;\n  }\n\n  @HostBinding('attr.type')\n  get inputType(): string {\n    return isPlatformBrowser(this.platformId) && this.usingNativeDatepicker() ? 'date' : 'text';\n  }\n\n  @HostListener('change', ['$event.target'])\n  onValueChange(target: HTMLInputElement) {\n    const validDateValue = this.dateIOService.getDateValueFromDateString(target.value);\n    if (this.usingClarityDatepicker() && validDateValue) {\n      this.updateDate(validDateValue, true);\n    } else if (this.usingNativeDatepicker()) {\n      const [year, month, day] = target.value.split('-');\n      this.updateDate(new Date(+year, +month - 1, +day), true);\n    } else {\n      this.emitDateOutput(null);\n    }\n  }\n\n  @Input('disabled')\n  set disabled(value: boolean | string) {\n    if (this.dateFormControlService) {\n      this.dateFormControlService.setDisabled(isBooleanAttributeSet(value));\n    }\n  }\n\n  private usingClarityDatepicker() {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  private usingNativeDatepicker() {\n    return !this.datepickerEnabledService.isEnabled;\n  }\n\n  private setFocus(focus: boolean) {\n    if (this.focusService) {\n      this.focusService.focused = focus;\n    }\n  }\n\n  private populateServicesFromContainerComponent() {\n    if (!this.container) {\n      this.dateIOService = this.getProviderFromContainer(DateIOService);\n      this.dateNavigationService = this.getProviderFromContainer(DateNavigationService);\n      this.datepickerEnabledService = this.getProviderFromContainer(DatepickerEnabledService);\n      this.dateFormControlService = this.getProviderFromContainer(DateFormControlService);\n    }\n  }\n\n  private processInitialInputs() {\n    if (this.datepickerHasFormControl()) {\n      this.updateDate(this.dateIOService.getDateValueFromDateString(this.control.value));\n    } else {\n      this.updateDate(this.initialClrDateInputValue);\n    }\n  }\n\n  private updateDate(value: Date, setByUserInteraction = false) {\n    const date = this.getValidDateValueFromDate(value);\n\n    if (setByUserInteraction) {\n      this.emitDateOutput(date);\n    } else {\n      this.previousDateChange = date;\n    }\n\n    if (this.dateNavigationService) {\n      this.dateNavigationService.selectedDay = date\n        ? new DayModel(date.getFullYear(), date.getMonth(), date.getDate())\n        : null;\n    }\n\n    this.updateInput(date);\n  }\n\n  private updateInput(date: Date) {\n    if (date) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      if (this.usingNativeDatepicker()) {\n        // valueAsDate expects UTC, date from input is time-zoned\n        date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n        this.renderer.setProperty(this.el.nativeElement, 'valueAsDate', date);\n      } else if (this.datepickerHasFormControl() && dateString !== this.control.value) {\n        this.control.control.setValue(dateString);\n      } else {\n        this.renderer.setProperty(this.el.nativeElement, 'value', dateString);\n      }\n    } else {\n      this.renderer.setProperty(this.el.nativeElement, 'value', '');\n    }\n  }\n\n  private getValidDateValueFromDate(date: Date) {\n    if (this.dateIOService) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      return this.dateIOService.getDateValueFromDateString(dateString);\n    } else {\n      return null;\n    }\n  }\n\n  private emitDateOutput(date: Date) {\n    if (!datesAreEqual(date, this.previousDateChange)) {\n      this.dateChange.emit(date);\n      this.previousDateChange = date;\n    } else if (!date && this.previousDateChange) {\n      this.dateChange.emit(null);\n      this.previousDateChange = null;\n    }\n  }\n\n  private datepickerHasFormControl() {\n    return !!this.control;\n  }\n\n  private listenForControlValueChanges() {\n    return of(this.datepickerHasFormControl())\n      .pipe(\n        filter(hasControl => hasControl),\n        switchMap(() => this.control.valueChanges),\n        // only update date value if not being set by user\n        filter(() => !this.datepickerFocusService.elementIsFocused(this.el.nativeElement))\n      )\n      .subscribe((value: string) => this.updateDate(this.dateIOService.getDateValueFromDateString(value)));\n  }\n\n  private listenForUserSelectedDayChanges() {\n    return this.dateNavigationService.selectedDayChange.subscribe(dayModel => this.updateDate(dayModel.toDate(), true));\n  }\n\n  private listenForTouchChanges() {\n    return this.dateFormControlService.touchedChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsTouched());\n  }\n\n  private listenForDirtyChanges() {\n    return this.dateFormControlService.dirtyChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsDirty());\n  }\n\n  private listenForInputRefocus() {\n    return this.dateNavigationService.selectedDayChange\n      .pipe(filter(date => !!date))\n      .subscribe(v => this.datepickerFocusService.focusInput(this.el.nativeElement));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterViewChecked,\n  ElementRef,\n  HostBinding,\n  Injectable,\n  Injector,\n  OnDestroy,\n  Renderer2,\n  SkipSelf,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfOpenService } from '../../utils/conditional/if-open.service';\n\nimport { Point, Popover } from './popover';\nimport { PopoverOptions } from './popover-options.interface';\n\n// Literally any annotation would work here, but writing our own @HoneyBadger annotation feels overkill.\n@Injectable()\nexport abstract class AbstractPopover implements AfterViewChecked, OnDestroy {\n  constructor(injector: Injector, @SkipSelf() protected parentHost: ElementRef) {\n    this.el = injector.get(ElementRef);\n    this.ifOpenService = injector.get(IfOpenService);\n    this.renderer = injector.get(Renderer2);\n    // Default anchor is the parent host\n    this.anchorElem = parentHost.nativeElement;\n\n    this.popoverInstance = new Popover(this.el.nativeElement);\n    this.subscription = this.ifOpenService.openChange.subscribe(change => {\n      if (change) {\n        this.anchor();\n        this.attachESCListener();\n      } else {\n        this.release();\n        this.detachESCListener();\n      }\n    });\n    if (this.ifOpenService.open) {\n      this.anchor();\n      this.attachESCListener();\n    }\n  }\n\n  protected el: ElementRef;\n  protected ifOpenService: IfOpenService;\n  protected renderer: Renderer2;\n\n  private popoverInstance: Popover;\n  private subscription: Subscription;\n\n  private updateAnchor = false;\n\n  protected anchorElem: any;\n  protected anchorPoint: Point;\n  protected popoverPoint: Point;\n  protected popoverOptions: PopoverOptions = {};\n\n  protected ignoredElement: any;\n\n  protected anchor() {\n    this.updateAnchor = true;\n    // Ugh\n    this.ignore = this.ifOpenService.originalEvent;\n  }\n\n  protected release() {\n    this.detachOutsideClickListener();\n    this.popoverInstance.release();\n  }\n\n  ngAfterViewChecked() {\n    if (this.updateAnchor) {\n      this.updateAnchor = false;\n      this.popoverInstance\n        .anchor(this.anchorElem, this.anchorPoint, this.popoverPoint, this.popoverOptions)\n        .subscribe(() => {\n          // if a scroll event is detected, close the popover\n          this.ifOpenService.open = false;\n        });\n      this.attachOutsideClickListener();\n    }\n  }\n\n  ngOnDestroy() {\n    this.release();\n    this.detachESCListener();\n    this.subscription.unsubscribe();\n  }\n\n  /*\n     * Fallback to hide when *clrIfOpen is not being used\n     */\n\n  @HostBinding('class.is-off-screen')\n  get isOffScreen() {\n    return this.ifOpenService.open ? false : true;\n  }\n\n  /*\n     * Until https://github.com/angular/angular/issues/8785 is supported, we don't have any way to instantiate\n     * a separate directive on the host. So let's do dirty but performant for now.\n     */\n  public closeOnOutsideClick = false;\n  private hostClickListener: () => void;\n  private documentClickListener: () => void;\n  private documentESCListener: () => void;\n  private ignoredElementClickListener: () => void;\n  private ignore: any;\n\n  private attachESCListener(): void {\n    if (!this.popoverOptions.ignoreGlobalESCListener) {\n      this.documentESCListener = this.renderer.listen('document', 'keydown', event => {\n        if (event && event.key) {\n          if (event.key === 'Escape' || event.key === 'Esc') {\n            this.ifOpenService.open = false;\n          }\n        }\n      });\n    }\n  }\n\n  private detachESCListener(): void {\n    if (this.documentESCListener) {\n      this.documentESCListener();\n      delete this.documentESCListener;\n    }\n  }\n\n  private attachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      this.hostClickListener = this.renderer.listen(this.el.nativeElement, 'click', event => (this.ignore = event));\n      if (this.ignoredElement) {\n        this.ignoredElementClickListener = this.renderer.listen(\n          this.ignoredElement,\n          'click',\n          event => (this.ignore = event)\n        );\n      }\n      this.documentClickListener = this.renderer.listen('document', 'click', event => {\n        if (event === this.ignore) {\n          delete this.ignore;\n        } else {\n          this.ifOpenService.open = false;\n        }\n      });\n    }\n  }\n\n  private detachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      if (this.hostClickListener) {\n        this.hostClickListener();\n        delete this.hostClickListener;\n      }\n      if (this.ignoredElementClickListener) {\n        this.ignoredElementClickListener();\n        delete this.ignoredElementClickListener;\n      }\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nconst enum DatepickerViewEnum {\n  MONTHVIEW = 'MONTHVIEW',\n  YEARVIEW = 'YEARVIEW',\n  DAYVIEW = 'DAYVIEW',\n}\n\n/**\n * This service manages which view is visible in the datepicker popover.\n */\n@Injectable()\nexport class ViewManagerService {\n  private _currentView: DatepickerViewEnum = DatepickerViewEnum.DAYVIEW;\n\n  get isDayView(): boolean {\n    return this._currentView === DatepickerViewEnum.DAYVIEW;\n  }\n\n  get isYearView(): boolean {\n    return this._currentView === DatepickerViewEnum.YEARVIEW;\n  }\n\n  get isMonthView(): boolean {\n    return this._currentView === DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToMonthView(): void {\n    this._currentView = DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToYearView(): void {\n    this._currentView = DatepickerViewEnum.YEARVIEW;\n  }\n\n  changeToDayView(): void {\n    this._currentView = DatepickerViewEnum.DAYVIEW;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ElementRef, Injector, SkipSelf, Input } from '@angular/core';\n\nimport { AbstractPopover } from '../../popover/common/abstract-popover';\nimport { Point } from '../../popover/common/popover';\nimport { PopoverPosition } from '../../popover/common/popover-positions';\n\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-datepicker-view-manager',\n  templateUrl: './datepicker-view-manager.html',\n  providers: [ViewManagerService, DatepickerFocusService],\n  host: {\n    '[class.datepicker]': 'true',\n    '[attr.aria-modal]': 'true',\n  },\n})\nexport class ClrDatepickerViewManager extends AbstractPopover {\n  constructor(@SkipSelf() parent: ElementRef, _injector: Injector, private _viewManagerService: ViewManagerService) {\n    super(_injector, parent);\n    this.configurePopover();\n  }\n\n  /**\n   * Configure Popover Direction and Close indicators\n   */\n  private configurePopover(): void {\n    this.position = 'bottom-left';\n    this.closeOnOutsideClick = true;\n  }\n\n  @Input('clrPosition')\n  set position(position: PopoverPosition) {\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_RIGHT;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_LEFT;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_RIGHT;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-top':\n        this.anchorPoint = Point.RIGHT_TOP;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-bottom':\n        this.anchorPoint = Point.RIGHT_BOTTOM;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'left-top':\n        this.anchorPoint = Point.LEFT_TOP;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'left-bottom':\n        this.anchorPoint = Point.LEFT_BOTTOM;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      default:\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  /**\n   * Returns if the current view is the monthpicker.\n   */\n  get isMonthView(): boolean {\n    return this._viewManagerService.isMonthView;\n  }\n\n  /**\n   * Returns if the current view is the yearpicker.\n   */\n  get isYearView(): boolean {\n    return this._viewManagerService.isYearView;\n  }\n\n  /**\n   * Returns if the current view is the daypicker.\n   */\n  get isDayView(): boolean {\n    return this._viewManagerService.isDayView;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { IfOpenService } from '../../utils/conditional/if-open.service';\n\nimport { DayViewModel } from './model/day-view.model';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\n\n@Component({\n  selector: 'clr-day',\n  template: `\n        <button\n            class=\"day-btn\"\n            type=\"button\"\n            [class.is-today]=\"dayView.isTodaysDate\"\n            [class.is-disabled]=\"dayView.isDisabled\"\n            [class.is-selected]=\"dayView.isSelected\"\n            [attr.tabindex]=\"dayView.tabIndex\"\n            (click)=\"selectDay()\"\n            (focus)=\"onDayViewFocus()\"\n            [attr.aria-label]=\"dayString\">\n            {{dayView.dayModel.date}}\n        </button>\n    `,\n  host: { '[class.day]': 'true' },\n})\nexport class ClrDay {\n  private _dayView: DayViewModel;\n  public dayString: string;\n\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _ifOpenService: IfOpenService,\n    private dateFormControlService: DateFormControlService\n  ) {}\n\n  /**\n   * DayViewModel input which is used to build the Day View.\n   */\n\n  @Input('clrDayView')\n  public set dayView(day: DayViewModel) {\n    this._dayView = day;\n    this.dayString = this._dayView.dayModel.toDateString();\n  }\n\n  public get dayView(): DayViewModel {\n    return this._dayView;\n  }\n\n  /**\n   * Updates the focusedDay in the DateNavigationService when the ClrDay is focused.\n   */\n  onDayViewFocus() {\n    this._dateNavigationService.focusedDay = this.dayView.dayModel;\n  }\n\n  /**\n   * Updates the selectedDay when the ClrDay is selected and closes the datepicker popover.\n   */\n  selectDay(): void {\n    const day: DayModel = this.dayView.dayModel;\n    this._dateNavigationService.notifySelectedDayChanged(day);\n    this.dateFormControlService.markAsDirty();\n    this._ifOpenService.open = false;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, AfterViewInit } from '@angular/core';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { AriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-daypicker',\n  providers: [AriaLiveService],\n  templateUrl: './daypicker.html',\n  host: { '[class.daypicker]': 'true' },\n})\nexport class ClrDaypicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _dateNavigationService: DateNavigationService,\n    private _localeHelperService: LocaleHelperService,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: AriaLiveService\n  ) {}\n\n  ngAfterViewInit() {\n    this.ariaLiveService.announce(`${this.ariaLiveMonth} ${this.updateAriaLiveYear}`);\n  }\n\n  get monthAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectMonthText, {\n      CALENDAR_MONTH: this.calendarMonth,\n    });\n  }\n\n  get yearAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectYearText, {\n      CALENDAR_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  get ariaLiveMonth(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentMonthPhrase, {\n      CURRENT_MONTH: this.calendarMonth,\n    });\n  }\n\n  get updateAriaLiveYear(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentYearPhrase, {\n      CURRENT_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the monthpicker view.\n   */\n  changeToMonthView(): void {\n    this._viewManagerService.changeToMonthView();\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the yearpicker view.\n   */\n  changeToYearView(): void {\n    this._viewManagerService.changeToYearView();\n  }\n\n  /**\n   * Returns the month value of the calendar in the TranslationWidth.Abbreviated format.\n   */\n  get calendarMonth(): string {\n    return this._localeHelperService.localeMonthsAbbreviated[this._dateNavigationService.displayedCalendar.month];\n  }\n\n  /**\n   * Returns the year value of the calendar.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the next month.\n   */\n  nextMonth(): void {\n    this._dateNavigationService.moveToNextMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the previous month.\n   */\n  previousMonth(): void {\n    this._dateNavigationService.moveToPreviousMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the current month.\n   */\n  currentMonth(): void {\n    this._dateNavigationService.moveToCurrentMonth();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-monthpicker',\n  template: `\n        <button\n            type=\"button\"\n            class=\"calendar-btn month\"\n            *ngFor=\"let month of monthNames; let monthIndex = index\"\n            (click)=\"changeMonth(monthIndex)\"\n            [class.is-selected]=\"monthIndex === calendarMonthIndex\"\n            [attr.tabindex]=\"getTabIndex(monthIndex)\">\n            {{month}}\n        </button>\n    `,\n  host: {\n    '[class.monthpicker]': 'true',\n  },\n})\nexport class ClrMonthpicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef\n  ) {\n    this._focusedMonthIndex = this.calendarMonthIndex;\n  }\n\n  /**\n   * Keeps track of the current focused month.\n   */\n  private _focusedMonthIndex: number;\n\n  /**\n   * Gets the months array which is used to rendered the monthpicker view.\n   * Months are in the TranslationWidth.Wide format.\n   */\n  get monthNames(): ReadonlyArray<string> {\n    return this._localeHelperService.localeMonthsWide;\n  }\n\n  /**\n   * Gets the month value of the Calendar.\n   */\n  get calendarMonthIndex(): number {\n    return this._dateNavigationService.displayedCalendar.month;\n  }\n\n  /**\n   * Calls the DateNavigationService to update the month value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeMonth(monthIndex: number) {\n    this._dateNavigationService.changeMonth(monthIndex);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Compares the month passed to the focused month and returns the tab index.\n   */\n  getTabIndex(monthIndex: number): number {\n    return monthIndex === this._focusedMonthIndex ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the monthpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW && this._focusedMonthIndex > 0) {\n        event.preventDefault();\n        this._focusedMonthIndex--;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === DOWN_ARROW && this._focusedMonthIndex < 11) {\n        event.preventDefault();\n        this._focusedMonthIndex++;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === RIGHT_ARROW && this._focusedMonthIndex < 6) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex + 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === LEFT_ARROW && this._focusedMonthIndex > 5) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex - 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      }\n    }\n  }\n\n  /**\n   * Focuses on the current calendar month when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nconst YEARS_TO_DISPLAY: number = 10;\n\nexport class YearRangeModel {\n  constructor(private readonly year: number) {\n    this.generateYearRange();\n  }\n\n  yearRange: number[] = [];\n\n  /**\n   * Gets the number in the middle of the range.\n   */\n  get middleYear(): number {\n    return this.yearRange[Math.floor(this.yearRange.length / 2)];\n  }\n\n  /**\n   * Generates the year range based on the year parameter.\n   * eg: If 2018 is passed the output will be [2010, 2011, ..., 2019]\n   */\n  private generateYearRange() {\n    const remainder: number = this.year % YEARS_TO_DISPLAY;\n    const floor: number = this.year - remainder;\n    const ceil: number = floor + YEARS_TO_DISPLAY;\n    this.yearRange = this.generateRange(floor, ceil);\n  }\n\n  /**\n   * Function which generate a range of numbers from floor to ceil.\n   */\n  private generateRange(floor: number, ceil: number): number[] {\n    return Array.from({ length: ceil - floor }, (v, k) => k + floor);\n  }\n\n  /**\n   * Generates the YearRangeModel for the next decade.\n   */\n  nextDecade(): YearRangeModel {\n    return new YearRangeModel(this.year + 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the previous decade.\n   */\n  previousDecade(): YearRangeModel {\n    return new YearRangeModel(this.year - 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the current decade.\n   */\n  currentDecade(): YearRangeModel {\n    return new YearRangeModel(new Date().getFullYear());\n  }\n\n  /**\n   * Checks if the value is in the YearRangeModel.\n   */\n  inRange(value: number): boolean {\n    return this.yearRange.indexOf(value) > -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { YearRangeModel } from './model/year-range.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { AriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-yearpicker',\n  providers: [AriaLiveService],\n  template: `\n        <div class=\"year-switchers\">\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"previousDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerPreviousDecade\">\n              <clr-icon shape=\"angle\" dir=\"left\" [attr.title]=\"commonStrings.keys.datepickerPreviousDecade\"></clr-icon>\n          </button>\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"currentDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerCurrentDecade\">\n              <clr-icon shape=\"event\" [attr.title]=\"commonStrings.keys.datepickerCurrentDecade\"></clr-icon>\n          </button>\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"nextDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerNextDecade\">\n              <clr-icon shape=\"angle\" dir=\"right\" [attr.title]=\"commonStrings.keys.datepickerNextDecade\"></clr-icon>\n          </button>\n        </div>\n        <div class=\"years\">\n            <button\n                *ngFor=\"let year of yearRangeModel.yearRange\"\n                type=\"button\"\n                class=\"calendar-btn year\"\n                [attr.tabindex]=\"getTabIndex(year)\"\n                [class.is-selected]=\"year === calendarYear\"\n                (click)=\"changeYear(year)\">\n                {{year}}\n            </button>\n        </div>\n    `,\n  host: {\n    '[class.yearpicker]': 'true',\n  },\n})\nexport class ClrYearpicker implements AfterViewInit {\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _viewManagerService: ViewManagerService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: AriaLiveService\n  ) {\n    this.yearRangeModel = new YearRangeModel(this.calendarYear);\n    this._focusedYear = this.calendarYear;\n    this.updateRange(this.yearRangeModel);\n  }\n\n  get ariaLiveDecadeText(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentDecadePhrase, {\n      DECADE_RANGE: this.decadeRange,\n    });\n  }\n\n  private decadeRange;\n\n  /**\n   * YearRangeModel which is used to build the YearPicker view.\n   */\n  yearRangeModel: YearRangeModel;\n\n  /**\n   * Keeps track of the current focused year.\n   */\n  private _focusedYear: number;\n\n  /**\n   * Gets the year which the user is currently on.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Increments the focus year by the value passed. Updates the YearRangeModel if the\n   * new value is not in the current decade.\n   */\n  private incrementFocusYearBy(value: number): void {\n    this._focusedYear = this._focusedYear + value;\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (value > 0) {\n        this.yearRangeModel = this.yearRangeModel.nextDecade();\n      } else {\n        this.yearRangeModel = this.yearRangeModel.previousDecade();\n      }\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Calls the DateNavigationService to update the year value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeYear(year: number): void {\n    this._dateNavigationService.changeYear(year);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Updates the YearRangeModel to the previous decade.\n   */\n  previousDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.previousDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Updates the YearRangeModel to the current decade.\n   */\n  currentDecade(): void {\n    if (!this.yearRangeModel.inRange(this._dateNavigationService.today.year)) {\n      this.yearRangeModel = this.yearRangeModel.currentDecade();\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n    this.updateRange(this.yearRangeModel);\n  }\n\n  /**\n   * Updates the YearRangeModel to the next decade.\n   */\n  nextDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.nextDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Compares the year passed to the focused year and returns the tab index.\n   */\n  getTabIndex(year: number): number {\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (this.yearRangeModel.inRange(this.calendarYear)) {\n        this._focusedYear = this.calendarYear;\n      } else {\n        this._focusedYear = this.yearRangeModel.middleYear;\n      }\n    }\n    return this._focusedYear === year ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the yearpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-1);\n      } else if (keyCode === DOWN_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(1);\n      } else if (keyCode === RIGHT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(5);\n      } else if (keyCode === LEFT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-5);\n      }\n    }\n  }\n\n  private updateRange(yrm: YearRangeModel): void {\n    const floor = yrm.yearRange[0];\n    const ceil = yrm.yearRange[yrm.yearRange.length - 1];\n    this.decadeRange = `${floor} to ${ceil}`;\n    this.ariaLiveService.announce(this.ariaLiveDecadeText);\n  }\n\n  /**\n   * Focuses on the current calendar year when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n    this.ariaLiveService.announce(this.ariaLiveDecadeText);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrCalendar } from './calendar';\nimport { ClrDateContainer } from './date-container';\nimport { ClrDateInput } from './date-input';\nimport { ClrDatepickerViewManager } from './datepicker-view-manager';\nimport { ClrDay } from './day';\nimport { ClrDaypicker } from './daypicker';\nimport { ClrMonthpicker } from './monthpicker';\nimport { ClrYearpicker } from './yearpicker';\n\nexport const CLR_DATEPICKER_DIRECTIVES: Type<any>[] = [\n  ClrDay,\n  ClrDateContainer,\n  ClrDateInput,\n  ClrDatepickerViewManager,\n  ClrMonthpicker,\n  ClrYearpicker,\n  ClrDaypicker,\n  ClrCalendar,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrHostWrappingModule,\n    ClrConditionalModule,\n    ClrIconModule,\n    ClrFocusTrapModule,\n    ClrCommonFormsModule,\n  ],\n  declarations: [CLR_DATEPICKER_DIRECTIVES],\n  exports: [CLR_DATEPICKER_DIRECTIVES],\n  entryComponents: [ClrDateContainer],\n})\nexport class ClrDatepickerModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, OnDestroy, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\nimport { ControlClassService } from '../common/providers/control-class.service';\n\n@Component({\n  selector: 'clr-input-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-input-wrapper\">\n                <ng-content select=\"[clrInput]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrInputContainer implements DynamicWrapper, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  invalid = false;\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  control: NgControl;\n\n  constructor(\n    private ifErrorService: IfErrorService,\n    @Optional() private layoutService: LayoutService,\n    private controlClassService: ControlClassService,\n    private ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  addGrid() {\n    if (this.layoutService && !this.layoutService.isVertical()) {\n      return true;\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.map(sub => sub.unsubscribe());\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrInputContainer } from './input-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n@Directive({ selector: '[clrInput]', host: { '[class.clr-input]': 'true' } })\nexport class ClrInput extends WrappedFormControl<ClrInputContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrInputContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrInput } from './input';\nimport { ClrInputContainer } from './input-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrInput, ClrInputContainer],\n  exports: [ClrCommonFormsModule, ClrInput, ClrInputContainer],\n  entryComponents: [ClrInputContainer],\n})\nexport class ClrInputModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, Inject, InjectionToken, Input, OnDestroy, Optional } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ClrLabel } from '../common/label';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\nexport const TOGGLE_SERVICE = new InjectionToken<BehaviorSubject<boolean>>(undefined);\nexport function ToggleServiceFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const TOGGLE_SERVICE_PROVIDER = { provide: TOGGLE_SERVICE, useFactory: ToggleServiceFactory };\n\n@Component({\n  selector: 'clr-password-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrPassword]\"></ng-content>\n          <button\n            *ngIf=\"clrToggle\"\n            (click)=\"toggle()\"\n            [disabled]=\"control?.disabled\"\n            class=\"clr-input-group-icon-action\"\n            type=\"button\">\n            <clr-icon\n            [attr.shape]=\"show ? 'eye-hide' : 'eye'\"\n            [attr.title]=\"show ? commonStrings.keys.hide : commonStrings.keys.show\"></clr-icon>\n          </button>\n        </div>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    IfErrorService,\n    NgControlService,\n    ControlIdService,\n    ControlClassService,\n    FocusService,\n    TOGGLE_SERVICE_PROVIDER,\n  ],\n})\nexport class ClrPasswordContainer implements DynamicWrapper, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  invalid = false;\n  control: NgControl;\n  _dynamic = false;\n  show = false;\n  focus = false;\n  private _toggle = true;\n\n  @Input('clrToggle')\n  set clrToggle(state: boolean) {\n    this._toggle = state;\n    if (!state) {\n      this.show = false;\n    }\n  }\n  get clrToggle() {\n    return this._toggle;\n  }\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n\n  constructor(\n    private ifErrorService: IfErrorService,\n    @Optional() private layoutService: LayoutService,\n    private controlClassService: ControlClassService,\n    public focusService: FocusService,\n    private ngControlService: NgControlService,\n    @Inject(TOGGLE_SERVICE) private toggleService: BehaviorSubject<boolean>,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      })\n    );\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  toggle() {\n    this.show = !this.show;\n    this.toggleService.next(this.show);\n  }\n\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  addGrid() {\n    if (this.layoutService && !this.layoutService.isVertical()) {\n      return true;\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.map(sub => sub.unsubscribe());\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport enum DragEventType {\n  DRAG_START,\n  DRAG_MOVE,\n  DRAG_END,\n  DRAG_ENTER,\n  DRAG_LEAVE,\n  DROP,\n}\n\nexport interface DragPointPosition {\n  pageX: number;\n  pageY: number;\n  moveX: number;\n  moveY: number;\n}\n\nexport interface DragEventInterface<T> {\n  type: DragEventType;\n  group?: string | string[];\n  ghostElement?: any;\n  dragPosition: DragPointPosition;\n  dragDataTransfer?: T;\n  // For default ghosts, this dropPointPosition denotes the center point of the ghost element.\n  // This center point is used to determine whether the ghost is over droppable elements or not.\n  dropPointPosition?: { pageX: number; pageY: number };\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPasswordContainer, TOGGLE_SERVICE } from './password-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { FocusService } from '../common/providers/focus.service';\n\n@Directive({ selector: '[clrPassword]', host: { '[class.clr-input]': 'true' } })\nexport class ClrPassword extends WrappedFormControl<ClrPasswordContainer> implements OnInit, OnDestroy {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Optional() private focusService: FocusService,\n    @Optional()\n    @Inject(TOGGLE_SERVICE)\n    private toggleService: BehaviorSubject<boolean>\n  ) {\n    super(vcr, ClrPasswordContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrPassword requires being wrapped in <clr-password-container>');\n    }\n\n    this.subscriptions.push(\n      this.toggleService.subscribe(toggle => {\n        renderer.setProperty(el.nativeElement, 'type', toggle ? 'text' : 'password');\n      })\n    );\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrPassword } from './password';\nimport { ClrPasswordContainer } from './password-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrPassword, ClrPasswordContainer],\n  exports: [ClrCommonFormsModule, ClrPassword, ClrPasswordContainer],\n  entryComponents: [ClrPasswordContainer],\n})\nexport class ClrPasswordModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, OnInit } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\n@Component({\n  selector: 'clr-radio-wrapper',\n  template: `\n    <ng-content select=\"[clrRadio]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-radio-wrapper]': 'true',\n  },\n  providers: [ControlIdService],\n})\nexport class ClrRadioWrapper implements DynamicWrapper, OnInit {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRadioWrapper } from '../radio/radio-wrapper';\n\n@Directive({ selector: '[clrRadio]' })\nexport class ClrRadio extends WrappedFormControl<ClrRadioWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRadioWrapper, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, Input, OnDestroy, Optional } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ClrLabel } from '../common/label';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\n\n@Component({\n  selector: 'clr-radio-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-radio-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, ControlClassService, IfErrorService],\n})\nexport class ClrRadioContainer implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  invalid = false;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  private inline = false;\n  control: NgControl;\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n\n  constructor(\n    private ifErrorService: IfErrorService,\n    @Optional() private layoutService: LayoutService,\n    private controlClassService: ControlClassService,\n    private ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid(), this.inline ? 'clr-control-inline' : '');\n  }\n\n  addGrid() {\n    if (this.layoutService && !this.layoutService.isVertical()) {\n      return true;\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrRadio } from './radio';\nimport { ClrRadioContainer } from './radio-container';\nimport { ClrRadioWrapper } from './radio-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  exports: [ClrCommonFormsModule, ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  entryComponents: [ClrRadioWrapper],\n})\nexport class ClrRadioModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, OnDestroy, Optional } from '@angular/core';\nimport { SelectMultipleControlValueAccessor, NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\nimport { ControlClassService } from '../common/providers/control-class.service';\n\n@Component({\n  selector: 'clr-select-container',\n  template: `    \n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div [ngClass]=\"wrapperClass()\">\n                <ng-content select=\"[clrSelect]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrSelectContainer implements DynamicWrapper, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  invalid = false;\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  @ContentChild(SelectMultipleControlValueAccessor, { static: false })\n  multiple: SelectMultipleControlValueAccessor;\n  private multi = false;\n  control: NgControl;\n\n  constructor(\n    private ifErrorService: IfErrorService,\n    @Optional() private layoutService: LayoutService,\n    private controlClassService: ControlClassService,\n    private ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.multi = control.valueAccessor instanceof SelectMultipleControlValueAccessor;\n          this.control = control;\n        }\n      })\n    );\n  }\n\n  wrapperClass() {\n    return this.multi ? 'clr-multiselect-wrapper' : 'clr-select-wrapper';\n  }\n\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  addGrid() {\n    if (this.layoutService && !this.layoutService.isVertical()) {\n      return true;\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.map(sub => sub.unsubscribe());\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrSelectContainer } from './select-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrSelect]', host: { '[class.clr-select]': 'true' } })\nexport class ClrSelect extends WrappedFormControl<ClrSelectContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrSelectContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrSelect } from './select';\nimport { ClrSelectContainer } from './select-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrSelect, ClrSelectContainer],\n  exports: [ClrCommonFormsModule, ClrSelect, ClrSelectContainer],\n  entryComponents: [ClrSelectContainer],\n})\nexport class ClrSelectModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, OnDestroy, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\nimport { ControlClassService } from '../common/providers/control-class.service';\n\n@Component({\n  selector: 'clr-textarea-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-textarea-wrapper\">\n                <ng-content select=\"[clrTextarea]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrTextareaContainer implements DynamicWrapper, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  invalid = false;\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  control: NgControl;\n\n  constructor(\n    private ifErrorService: IfErrorService,\n    @Optional() private layoutService: LayoutService,\n    private controlClassService: ControlClassService,\n    private ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  addGrid() {\n    if (this.layoutService && !this.layoutService.isVertical()) {\n      return true;\n    }\n    return false;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.map(sub => sub.unsubscribe());\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@Directive({ selector: '[clrTextarea]', host: { '[class.clr-textarea]': 'true' } })\nexport class ClrTextarea extends WrappedFormControl<ClrTextareaContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrTextareaContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrTextarea } from './textarea';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrTextarea, ClrTextareaContainer],\n  exports: [ClrCommonFormsModule, ClrTextarea, ClrTextareaContainer],\n  entryComponents: [ClrTextareaContainer],\n})\nexport class ClrTextareaModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrCheckboxModule } from './checkbox/checkbox.module';\nimport { ClrCommonFormsModule } from './common/common.module';\nimport { ClrDatepickerModule } from './datepicker/datepicker.module';\nimport { ClrInputModule } from './input/input.module';\nimport { ClrPasswordModule } from './password/password.module';\nimport { ClrRadioModule } from './radio/radio.module';\nimport { ClrSelectModule } from './select/select.module';\nimport { ClrTextareaModule } from './textarea/textarea.module';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    ClrCommonFormsModule,\n    ClrCheckboxModule,\n    ClrDatepickerModule,\n    ClrInputModule,\n    ClrPasswordModule,\n    ClrRadioModule,\n    ClrSelectModule,\n    ClrTextareaModule,\n  ],\n})\nexport class ClrFormsModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoading } from './loading';\n\nexport const CLR_LOADING_DIRECTIVES: Type<any>[] = [ClrLoading];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_LOADING_DIRECTIVES], exports: [CLR_LOADING_DIRECTIVES] })\nexport class ClrLoadingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Directive({ selector: '[clrOutsideClick]' })\nexport class OutsideClick {\n  constructor(private el: ElementRef) {}\n\n  @Input('clrStrict') strict = false;\n\n  @Output('clrOutsideClick') outsideClick = new EventEmitter<any>(false);\n\n  @HostListener('document:click', ['$event'])\n  documentClick(event: MouseEvent) {\n    const target = event.target; // Get the element in the DOM on which the mouse was clicked\n    const host = this.el.nativeElement; // Get the current actionMenu native HTML element\n\n    if (target === host) {\n      return;\n    }\n    if (!this.strict && host.contains(target)) {\n      return;\n    }\n    this.outsideClick.emit(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { OutsideClick } from './outside-click';\n\nexport * from './outside-click';\n\nexport const OUSTIDE_CLICK_DIRECTIVES: Type<any>[] = [OutsideClick];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OUSTIDE_CLICK_DIRECTIVES } from './index';\n\n@NgModule({ imports: [CommonModule], declarations: [OUSTIDE_CLICK_DIRECTIVES], exports: [OUSTIDE_CLICK_DIRECTIVES] })\nexport class ClrOutsideClickModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * If we someday want to be able to render the datagrid in a webworker,\n * this is where we would test if we're in headless mode. Right now it's not testing anything, but any access\n * to native DOM elements' methods and properties in the Datagrid happens here.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DomAdapter {\n  userDefinedWidth(element: HTMLElement): number {\n    element.classList.add('datagrid-cell-width-zero');\n    const userDefinedWidth = this.clientRect(element).width;\n    element.classList.remove('datagrid-cell-width-zero');\n    return userDefinedWidth;\n  }\n\n  scrollBarWidth(element: any) {\n    return element.offsetWidth - element.clientWidth;\n  }\n\n  scrollWidth(element: any) {\n    return element.scrollWidth || 0;\n  }\n\n  computedHeight(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('height'), 10);\n  }\n\n  clientRect(element: any): ClientRect {\n    const elementClientRect = element.getBoundingClientRect();\n    return {\n      top: parseInt(elementClientRect.top, 10),\n      bottom: parseInt(elementClientRect.bottom, 10),\n      left: parseInt(elementClientRect.left, 10),\n      right: parseInt(elementClientRect.right, 10),\n      width: parseInt(elementClientRect.width, 10),\n      height: parseInt(elementClientRect.height, 10),\n    };\n  }\n\n  minWidth(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('min-width'), 10);\n  }\n\n  focus(element: any): void {\n    element.focus();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DragEventInterface, DragPointPosition } from './interfaces/drag-event.interface';\n\n// This class is used to convert an internal event\n// to an external event to be emitted.\nexport class ClrDragEvent<T> {\n  public dragPosition: DragPointPosition;\n  public group: string | string[];\n  public dragDataTransfer: T;\n  public dropPointPosition: { pageX: number; pageY: number };\n\n  constructor(dragEvent: DragEventInterface<T>) {\n    this.dragPosition = dragEvent.dragPosition;\n    this.group = dragEvent.group;\n    this.dragDataTransfer = dragEvent.dragDataTransfer;\n    this.dropPointPosition = dragEvent.dropPointPosition;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAxis {\n  VERTICAL,\n  HORIZONTAL,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrSide {\n  BEFORE = -1,\n  AFTER = 1,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAlignment {\n  START = 0,\n  CENTER = 0.5,\n  END = 1,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class DragAndDropEventBusService<T> {\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private drop: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  get dropped(): Observable<DragEventInterface<T>> {\n    return this.drop.asObservable();\n  }\n\n  broadcast(event: DragEventInterface<T>): void {\n    switch (event.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(event);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(event);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(event);\n        break;\n      case DragEventType.DROP:\n        this.drop.next(event);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, NgZone, Renderer2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\nimport { DragAndDropEventBusService } from './drag-and-drop-event-bus.service';\n\n@Injectable()\nexport class DragEventListenerService<T> {\n  private draggableEl: any;\n\n  // contains the starting events such as mousedown and touchstart\n  private listeners: (() => void)[];\n  // contains the nested events that happens after/inside the starting events\n  // such as selectstart, mousemove/touchmove, mouseup/touchend\n  private nestedListeners: (() => void)[];\n\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  private hasDragStarted: boolean = false;\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  constructor(private ngZone: NgZone, private renderer: Renderer2, private eventBus: DragAndDropEventBusService<T>) {}\n\n  private initialPosition: { pageX: number; pageY: number };\n\n  // Draggable component sets these properties:\n  public dragDataTransfer?: T;\n  public group?: string | string[];\n\n  // DraggableGhost component sets these properties:\n  public ghostElement?: any;\n  public dropPointPosition?: { pageX: number; pageY: number };\n\n  public attachDragListeners(draggableEl: Node) {\n    this.draggableEl = draggableEl;\n    this.listeners = [\n      this.customDragEvent(this.draggableEl, 'mousedown', 'mousemove', 'mouseup'),\n      this.customDragEvent(this.draggableEl, 'touchstart', 'touchmove', 'touchend'),\n    ];\n  }\n\n  public detachDragListeners() {\n    if (this.listeners) {\n      this.listeners.map(event => event());\n    }\n\n    // In most cases, once users start dragging with mousedown/touchstart events,\n    // they will end dragging at one point with mouseup/touchend.\n    // However, there might be a few cases where mousedown/touchstart events get registered,\n    // but the draggable element gets removed before user ends dragging.\n    // In that case, we need to remove the attached listeners that happened during the mousedown/touchstart events.\n    if (this.nestedListeners) {\n      this.nestedListeners.map(event => event());\n    }\n  }\n\n  private getNativeEventObject(event: MouseEvent | TouchEvent): any {\n    if ((<TouchEvent>event).hasOwnProperty('changedTouches')) {\n      return (<TouchEvent>event).changedTouches[0];\n    } else {\n      return event;\n    }\n  }\n\n  private customDragEvent(element: Node, startOnEvent: string, moveOnEvent: string, endOnEvent: string): () => void {\n    return this.renderer.listen(element, startOnEvent, (startEvent: MouseEvent | TouchEvent) => {\n      // save the initial point to initialPosition\n      // this will be used to calculate how far the draggable has been dragged from its initial position\n      this.initialPosition = {\n        pageX: this.getNativeEventObject(startEvent).pageX,\n        pageY: this.getNativeEventObject(startEvent).pageY,\n      };\n\n      // Initialize nested listeners' property with a new empty array;\n      this.nestedListeners = [];\n\n      // This is needed to disable selection during dragging (especially in EDGE/IE11).\n      this.nestedListeners.push(\n        this.renderer.listen('document', 'selectstart', (selectEvent: Event) => {\n          selectEvent.preventDefault();\n          selectEvent.stopImmediatePropagation();\n        })\n      );\n\n      // Listen to mousemove/touchmove events outside of angular zone.\n      this.nestedListeners.push(\n        this.ngZone.runOutsideAngular(() => {\n          return this.renderer.listen('document', moveOnEvent, (moveEvent: MouseEvent | TouchEvent) => {\n            // Event.stopImmediatePropagation() is needed here to prevent nested draggables from getting dragged\n            // altogether. We shouldn't use Event.stopPropagation() here as we are listening to the events\n            // on the global element level.\n\n            // With Event.stopImmediatePropagation(), it registers the events sent from the inner most draggable\n            // first. Then immediately after that, it stops listening to the same type of events on the same\n            // element. So this will help us to not register the same events that would come from the parent\n            // level draggables eventually.\n\n            moveEvent.stopImmediatePropagation();\n\n            if (!this.hasDragStarted) {\n              this.hasDragStarted = true;\n              // Fire \"dragstart\"\n              this.broadcast(moveEvent, DragEventType.DRAG_START);\n            } else {\n              // Fire \"dragmove\"\n              this.broadcast(moveEvent, DragEventType.DRAG_MOVE);\n            }\n          });\n        })\n      );\n\n      // Listen to mouseup/touchend events.\n      this.nestedListeners.push(\n        this.renderer.listen('document', endOnEvent, (endEvent: MouseEvent | TouchEvent) => {\n          if (this.hasDragStarted) {\n            // Fire \"dragend\" only if dragstart is registered\n            this.hasDragStarted = false;\n            this.broadcast(endEvent, DragEventType.DRAG_END);\n          }\n\n          // We must remove the the nested listeners every time drag completes.\n          if (this.nestedListeners) {\n            this.nestedListeners.map(event => event());\n          }\n        })\n      );\n    });\n  }\n\n  private broadcast(event: MouseEvent | TouchEvent, eventType: DragEventType): void {\n    const dragEvent: DragEventInterface<T> = this.generateDragEvent(event, eventType);\n\n    switch (dragEvent.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(dragEvent);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(dragEvent);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(dragEvent);\n        break;\n      default:\n        break;\n    }\n\n    // The following properties are set after they are broadcasted to the DraggableGhost component.\n    dragEvent.ghostElement = this.ghostElement;\n    dragEvent.dropPointPosition = this.dropPointPosition;\n\n    this.eventBus.broadcast(dragEvent);\n  }\n\n  private generateDragEvent(event: MouseEvent | TouchEvent, eventType: DragEventType): DragEventInterface<T> {\n    const nativeEvent: any = this.getNativeEventObject(event);\n\n    return {\n      type: eventType,\n      dragPosition: {\n        pageX: nativeEvent.pageX,\n        pageY: nativeEvent.pageY,\n        moveX: nativeEvent.pageX - this.initialPosition.pageX,\n        moveY: nativeEvent.pageY - this.initialPosition.pageY,\n      },\n      group: this.group,\n      dragDataTransfer: this.dragDataTransfer,\n      ghostElement: this.ghostElement,\n    };\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\n\n// This service is used to capture the state of clrDraggable element\n// at a certain event and passes it to clrDraggableGhost component.\n@Injectable()\nexport class DraggableSnapshotService<T> {\n  constructor(private domAdapter: DomAdapter) {}\n\n  private draggableElClientRect: ClientRect;\n  private snapshotDragEvent: DragEventInterface<T>;\n\n  public capture(el: Node, event: DragEventInterface<T>): void {\n    this.draggableElClientRect = this.domAdapter.clientRect(el);\n    this.snapshotDragEvent = event;\n  }\n  public discard(): void {\n    delete this.draggableElClientRect;\n    delete this.snapshotDragEvent;\n  }\n  get hasDraggableState(): boolean {\n    return !!this.snapshotDragEvent && !!this.draggableElClientRect;\n  }\n  get clientRect(): ClientRect {\n    return this.draggableElClientRect;\n  }\n  get dragEvent(): DragEventInterface<T> {\n    return this.snapshotDragEvent;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, HostBinding, NgZone, OnDestroy, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\nimport { DraggableSnapshotService } from './providers/draggable-snapshot.service';\n\ntype PagePosition = {\n  pageX: number;\n  pageY: number;\n};\ntype OffsetPosition = {\n  top: number;\n  left: number;\n};\n\n@Component({\n  selector: 'clr-draggable-ghost',\n  template: `<ng-content></ng-content>`,\n  animations: [\n    trigger('leaveAnimation', [\n      transition(':leave', [\n        style({ left: '*', top: '*' }),\n        animate('0.2s ease-in-out', style({ top: '{{top}}', left: '{{left}}' })),\n      ]),\n    ]),\n  ],\n})\nexport class ClrDraggableGhost<T> implements OnDestroy {\n  private draggableGhostEl: any;\n\n  private subscriptions: Subscription[] = [];\n\n  @HostBinding('@leaveAnimation') leaveAnimConfig = { value: 0, params: { top: '0px', left: '0px' } };\n\n  constructor(\n    private el: ElementRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>,\n    @Optional() private draggableSnapshot: DraggableSnapshotService<T>,\n    private renderer: Renderer2,\n    private ngZone: NgZone\n  ) {\n    if (!this.dragEventListener || !this.draggableSnapshot) {\n      throw new Error('The clr-draggable-ghost component can only be used inside of a clrDraggable directive.');\n    }\n\n    this.draggableGhostEl = this.el.nativeElement;\n\n    // Need to use Renderer2 as it runs outside of NgZone\n    this.renderer.addClass(this.draggableGhostEl, 'draggable-ghost');\n\n    // Register the ghost element in DragEventListener to pass in a ClrDragEvent.\n    this.dragEventListener.ghostElement = this.draggableGhostEl;\n\n    // Default ghost size gets the size of ClrDraggable element.\n    this.setDefaultGhostSize(this.draggableGhostEl);\n\n    const offset: OffsetPosition = {\n      top: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageY - this.draggableSnapshot.clientRect.top\n        : 0,\n      left: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageX - this.draggableSnapshot.clientRect.left\n        : 0,\n    };\n\n    let isAnimationConfigured: boolean = false;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        // On the first drag move event, we configure the animation as it's dependent on the first drag event.\n        if (!isAnimationConfigured) {\n          if (this.draggableSnapshot.hasDraggableState) {\n            this.animateToOnLeave(\n              `${this.draggableSnapshot.clientRect.top}px`,\n              `${this.draggableSnapshot.clientRect.left}px`\n            );\n          } else {\n            this.animateToOnLeave(`${event.dragPosition.pageY}px`, `${event.dragPosition.pageX}px`);\n          }\n          isAnimationConfigured = true;\n        }\n\n        // Position the draggable ghost.\n        const topLeftPosition: PagePosition = this.findTopLeftPosition(event.dragPosition, offset);\n        this.setPositionStyle(this.draggableGhostEl, topLeftPosition.pageX, topLeftPosition.pageY);\n        this.dragEventListener.dropPointPosition = this.findDropPointPosition(topLeftPosition);\n      })\n    );\n  }\n\n  private setDefaultGhostSize(el: Node): void {\n    if (this.draggableSnapshot.hasDraggableState) {\n      this.setSizeStyle(el, this.draggableSnapshot.clientRect.width, this.draggableSnapshot.clientRect.height);\n    }\n  }\n\n  private animateToOnLeave(top: string, left: string): void {\n    this.ngZone.run(() => {\n      this.leaveAnimConfig = { value: 0, params: { top: top, left: left } };\n    });\n  }\n\n  private findTopLeftPosition(dragPosition: PagePosition, offset: OffsetPosition): PagePosition {\n    return { pageX: dragPosition.pageX - offset.left, pageY: dragPosition.pageY - offset.top };\n  }\n\n  private findDropPointPosition(topLeftPosition: PagePosition): PagePosition {\n    if (this.draggableSnapshot.hasDraggableState) {\n      return {\n        pageX: topLeftPosition.pageX + this.draggableSnapshot.clientRect.width / 2,\n        pageY: topLeftPosition.pageY + this.draggableSnapshot.clientRect.height / 2,\n      };\n    } else {\n      return topLeftPosition;\n    }\n  }\n\n  private setSizeStyle(el: Node, width: number, height: number): void {\n    this.renderer.setStyle(el, 'width', `${width}px`);\n    this.renderer.setStyle(el, 'height', `${height}px`);\n  }\n\n  private setPositionStyle(el: Node, left: number, top: number): void {\n    this.renderer.setStyle(el, 'left', `${left}px`);\n    this.renderer.setStyle(el, 'top', `${top}px`);\n    this.renderer.setStyle(el, 'visibility', 'visible');\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy, Optional, SkipSelf, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\n\n// This structural directive will be used mainly together with `clr-draggable-ghost` directive inside of clrDraggable\n// directive. The directive is responsible for instantiating `clr-draggable-ghost` directive only during dragging so\n// that Angular Change Detection is prevented from running if a component or directive is placed inside of the\n// `clr-draggable-ghost` directive.\n\n@Directive({ selector: '[clrIfDragged]' })\nexport class ClrIfDragged<T> implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private template: TemplateRef<any>,\n    @Optional()\n    @SkipSelf()\n    private container: ViewContainerRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>\n  ) {\n    if (!this.dragEventListener || !this.container) {\n      throw new Error('The *clrIfDragged directive can only be used inside of a clrDraggable directive.');\n    }\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.container.createEmbeddedView(this.template);\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.container.clear();\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\nimport { DragEventListenerService } from './drag-event-listener.service';\n\n// This provider registers the drag handle element.\n// When it registers a element as a drag handle, it attaches that element to the listeners from ClrDragEventListener.\n// Also, it adds the \"drag-handle\" css class to the registered element through Renderer.\n@Injectable()\nexport class DragHandleRegistrarService<T> {\n  private _customHandleEl: any;\n  private _defaultHandleEl: any;\n\n  get defaultHandleEl() {\n    return this._defaultHandleEl;\n  }\n\n  set defaultHandleEl(el: Node) {\n    this._defaultHandleEl = el; // defaultHandleEl will be usually the clrDraggable element.\n\n    // If the customHandleEl has been registered,\n    // don't make the defaultHandleEl the drag handle yet until the customHandleEl is unregistered.\n    if (!this._customHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n\n  constructor(private dragEventListener: DragEventListenerService<T>, private renderer: Renderer2) {}\n\n  private makeElementHandle(el: Node) {\n    if (this._defaultHandleEl && this._defaultHandleEl !== el) {\n      // Before making an element the custom handle element,\n      // we should remove the existing drag-handle class from the draggable element.\n      this.renderer.removeClass(this._defaultHandleEl, 'drag-handle');\n    }\n    this.dragEventListener.attachDragListeners(el);\n    this.renderer.addClass(el, 'drag-handle');\n  }\n\n  get customHandleEl() {\n    return this._customHandleEl;\n  }\n\n  public registerCustomHandle(el: Node) {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this._customHandleEl = el;\n    this.makeElementHandle(this._customHandleEl);\n  }\n\n  public unregisterCustomHandle() {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this.renderer.removeClass(this._customHandleEl, 'drag-handle');\n    delete this._customHandleEl;\n    // if default handle is set, make that handle\n    if (this._defaultHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\n// This service class adds and removes the \"in-drag\" class to the document body element\n// through its public enter() and exit() methods.\n@Injectable()\nexport class GlobalDragModeService {\n  constructor(private renderer: Renderer2) {}\n\n  enter(): void {\n    this.renderer.addClass(document.body, 'in-drag');\n  }\n\n  exit(): void {\n    this.renderer.removeClass(document.body, 'in-drag');\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  OnDestroy,\n  Output,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { ClrDraggableGhost } from '../draggable-ghost';\nimport { ClrIfDragged } from '../if-dragged';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\nimport { DragEventListenerService } from '../providers/drag-event-listener.service';\nimport { DragHandleRegistrarService } from '../providers/drag-handle-registrar.service';\nimport { DraggableSnapshotService } from '../providers/draggable-snapshot.service';\nimport { GlobalDragModeService } from '../providers/global-drag-mode.service';\n\n@Directive({\n  selector: '[clrDraggable]',\n  providers: [\n    DragEventListenerService,\n    DragHandleRegistrarService,\n    DraggableSnapshotService,\n    GlobalDragModeService,\n    DomAdapter,\n  ],\n  host: { '[class.draggable]': 'true', '[class.being-dragged]': 'dragOn' },\n})\nexport class ClrDraggable<T> implements AfterContentInit, OnDestroy {\n  private draggableEl: any;\n  private subscriptions: Subscription[] = [];\n  private componentFactory: ComponentFactory<ClrDraggableGhost<T>>;\n  public dragOn: boolean = false;\n\n  constructor(\n    private el: ElementRef,\n    private dragEventListener: DragEventListenerService<T>,\n    private dragHandleRegistrar: DragHandleRegistrarService<T>,\n    private viewContainerRef: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n    private injector: Injector,\n    private draggableSnapshot: DraggableSnapshotService<T>,\n    private globalDragMode: GlobalDragModeService\n  ) {\n    this.draggableEl = this.el.nativeElement;\n    this.componentFactory = this.cfr.resolveComponentFactory<ClrDraggableGhost<T>>(ClrDraggableGhost);\n  }\n\n  @ContentChild(ClrIfDragged, { static: false })\n  customGhost: ClrIfDragged<T>;\n\n  @Input('clrDraggable')\n  set dataTransfer(value: T) {\n    this.dragEventListener.dragDataTransfer = value;\n  }\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this.dragEventListener.group = value;\n  }\n\n  private createDefaultGhost(event: DragEventInterface<T>) {\n    this.draggableSnapshot.capture(this.draggableEl, event);\n    // NOTE: The default ghost element will appear\n    // next to the clrDraggable in the DOM as a sibling element.\n    this.viewContainerRef.createComponent(this.componentFactory, 0, this.injector, [\n      [this.draggableEl.cloneNode(true)],\n    ]);\n  }\n\n  private destroyDefaultGhost() {\n    this.viewContainerRef.clear();\n    this.draggableSnapshot.discard();\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this.dragHandleRegistrar.defaultHandleEl = this.draggableEl;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.enter();\n        this.dragOn = true;\n        if (!this.customGhost) {\n          this.createDefaultGhost(event);\n        }\n\n        this.dragStartEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        this.dragMoveEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.exit();\n        this.dragOn = false;\n        if (!this.customGhost) {\n          this.destroyDefaultGhost();\n        }\n        this.dragEndEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this.dragEventListener.detachDragListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\nimport { ClrDropToleranceInterface } from '../interfaces/drop-tolerance.interface';\nimport { DragAndDropEventBusService } from '../providers/drag-and-drop-event-bus.service';\n\n@Directive({\n  selector: '[clrDroppable]',\n  providers: [DomAdapter],\n  host: { '[class.droppable]': 'true', '[class.draggable-match]': 'isDraggableMatch' },\n})\nexport class ClrDroppable<T> implements OnInit, OnDestroy {\n  private dragStartSubscription: Subscription;\n  private dragMoveSubscription: Subscription;\n  private dragEndSubscription: Subscription;\n\n  private droppableEl: any;\n  private clientRect: ClientRect;\n\n  constructor(\n    private el: ElementRef,\n    private eventBus: DragAndDropEventBusService<T>,\n    private domAdapter: DomAdapter,\n    private renderer: Renderer2\n  ) {\n    this.droppableEl = this.el.nativeElement;\n  }\n\n  private isDraggableMatch: boolean = false;\n  private _isDraggableOver: boolean = false;\n\n  set isDraggableOver(value: boolean) {\n    // We need to add/remove this draggable-over class via Renderer2\n    // because isDraggableOver is set outside of NgZone.\n    if (value) {\n      this.renderer.addClass(this.droppableEl, 'draggable-over');\n    } else {\n      this.renderer.removeClass(this.droppableEl, 'draggable-over');\n    }\n    this._isDraggableOver = value;\n  }\n\n  private _group: string | string[];\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this._group = value;\n  }\n\n  private _dropTolerance: ClrDropToleranceInterface = { top: 0, right: 0, bottom: 0, left: 0 };\n\n  private dropToleranceGenerator(top = 0, right = top, bottom = top, left = right): ClrDropToleranceInterface {\n    return { top, right, bottom, left };\n  }\n\n  @Input('clrDropTolerance')\n  set dropTolerance(value: number | string | ClrDropToleranceInterface) {\n    // If user provides an object here and wants to manipulate/update properties individually,\n    // the object must be immutable as we generate new object based user's given object.\n    if (typeof value === 'number') {\n      this._dropTolerance = this.dropToleranceGenerator(value);\n    } else if (typeof value === 'string') {\n      const toleranceValues = value\n        .trim()\n        .split(/\\s+/)\n        .map(tolerance => parseInt(tolerance, 10));\n      this._dropTolerance = this.dropToleranceGenerator(...toleranceValues);\n    } else if (value) {\n      // The value could be passed in as {left: 20, top: 30 }\n      // In this case, the rest of the direction properties should be 0.\n      // That's why we initialize properties with 0 first, then override with user's given value.\n      this._dropTolerance = { ...this.dropToleranceGenerator(0), ...value };\n    }\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragLeave') dragLeaveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnter') dragEnterEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDrop') dropEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  private unsubscribeFrom(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n\n  private checkGroupMatch(draggableGroup: string | string[]): boolean {\n    // Both Draggable and Droppable have clrGroup input.\n    // The clrGroup input can be both a string key or array of string keys in Draggable and Droppable.\n\n    // It's not match if Draggable has no defined value assigned to clrGroup, but Droppable has a defined clrGroup.\n    if (!draggableGroup && this._group) {\n      return false;\n    }\n    // The same is true the other way round.\n    if (!this._group && draggableGroup) {\n      return false;\n    }\n\n    // It's match if both Draggable and Droppable have no assigned value for clrGroup.\n    if (!this._group && !draggableGroup) {\n      return true;\n    }\n\n    // It's match if both Draggable and Droppable have simple string keys that are matching.\n    // It's match if Draggable's simple clrGroup key is matching with one of the clrGroup keys of Droppable. The\n    // same is true the other way round.\n    // it's match if one of the clrGroup keys of Droppable is matching with one of the clrGroup keys of Draggable.\n    if (typeof draggableGroup === 'string') {\n      if (typeof this._group === 'string') {\n        return this._group === draggableGroup;\n      } else {\n        return this._group.indexOf(draggableGroup) > -1;\n      }\n    } else {\n      if (typeof this._group === 'string') {\n        return draggableGroup.indexOf(this._group) > -1;\n      } else {\n        return (this._group as string[]).some(groupKey => draggableGroup.indexOf(groupKey) > -1);\n      }\n    }\n  }\n\n  private isInDropArea(point: { pageX: number; pageY: number }): boolean {\n    if (!point) {\n      return false;\n    }\n\n    if (!this.clientRect) {\n      this.clientRect = this.domAdapter.clientRect(this.droppableEl);\n    }\n\n    if (\n      point.pageX >= this.clientRect.left - this._dropTolerance.left &&\n      point.pageX <= this.clientRect.right + this._dropTolerance.right &&\n      point.pageY >= this.clientRect.top - this._dropTolerance.top &&\n      point.pageY <= this.clientRect.bottom + this._dropTolerance.bottom\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private onDragStart(dragStartEvent: DragEventInterface<T>): void {\n    // Check draggable and droppable have a matching group key.\n    this.isDraggableMatch = this.checkGroupMatch(dragStartEvent.group);\n\n    // Subscribe to dragMoved and dragEnded only if draggable and droppable have a matching group key.\n    if (this.isDraggableMatch) {\n      this.dragStartEmitter.emit(new ClrDragEvent(dragStartEvent));\n      this.dragMoveSubscription = this.eventBus.dragMoved.subscribe((dragMoveEvent: DragEventInterface<T>) => {\n        this.onDragMove(dragMoveEvent);\n      });\n      this.dragEndSubscription = this.eventBus.dragEnded.subscribe((dragEndEvent: DragEventInterface<T>) => {\n        this.onDragEnd(dragEndEvent);\n      });\n    }\n  }\n\n  private onDragMove(dragMoveEvent: DragEventInterface<T>): void {\n    const isInDropArea = this.isInDropArea(dragMoveEvent.dropPointPosition);\n    if (!this._isDraggableOver && isInDropArea) {\n      this.isDraggableOver = true;\n      const dragEnterEvent = { ...dragMoveEvent, type: DragEventType.DRAG_ENTER };\n      this.eventBus.broadcast(dragEnterEvent);\n      this.dragEnterEmitter.emit(new ClrDragEvent(dragEnterEvent));\n    } else if (this._isDraggableOver && !isInDropArea) {\n      this.isDraggableOver = false;\n      const dragLeaveEvent = { ...dragMoveEvent, type: DragEventType.DRAG_LEAVE };\n      this.eventBus.broadcast(dragLeaveEvent);\n      this.dragLeaveEmitter.emit(new ClrDragEvent(dragLeaveEvent));\n    }\n\n    this.dragMoveEmitter.emit(new ClrDragEvent(dragMoveEvent));\n  }\n\n  private onDragEnd(dragEndEvent: DragEventInterface<T>): void {\n    if (this._isDraggableOver) {\n      if (dragEndEvent.ghostElement) {\n        // By this point, the draggable ghost component is destroyed,\n        // but the element would be active until its animation completes.\n        // As such, once the ghost is dropped over, we will give it \"dropped\" class.\n\n        // This process cannot be done in the ghost component\n        // because any subscription to the drop event is ineffective or invalid\n        // as the component had been already destroyed.\n        this.renderer.addClass(dragEndEvent.ghostElement, 'dropped');\n      }\n\n      const dropEvent = { ...dragEndEvent, type: DragEventType.DROP };\n      this.eventBus.broadcast(dropEvent);\n      this.dropEmitter.emit(new ClrDragEvent(dropEvent));\n      this.isDraggableOver = false;\n    }\n    this.dragEndEmitter.emit(new ClrDragEvent(dragEndEvent));\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n    this.isDraggableMatch = false;\n    delete this.clientRect;\n  }\n\n  ngOnInit() {\n    this.dragStartSubscription = this.eventBus.dragStarted.subscribe((dragStartEvent: DragEventInterface<T>) => {\n      this.onDragStart(dragStartEvent);\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeFrom(this.dragStartSubscription);\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, OnDestroy, Optional } from '@angular/core';\nimport { DragHandleRegistrarService } from './providers/drag-handle-registrar.service';\n\n@Directive({ selector: '[clrDragHandle]', host: { '[class.drag-handle]': 'true' } })\nexport class ClrDragHandle<T> implements OnDestroy {\n  constructor(private el: ElementRef, @Optional() private dragHandleRegistrar: DragHandleRegistrarService<T>) {\n    if (!this.dragHandleRegistrar) {\n      // ClrDragHandleRegistrar is provided in ClrDraggable so we expect it to be present here\n      // as clrDragHandle is required to be used only inside of a clrDraggable directive.\n      throw new Error('The clrDragHandle directive can only be used inside of a clrDraggable directive.');\n    }\n    this.dragHandleRegistrar.registerCustomHandle(this.el.nativeElement);\n  }\n\n  ngOnDestroy() {\n    this.dragHandleRegistrar.unregisterCustomHandle();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrDraggable } from './draggable/draggable';\nimport { ClrDroppable } from './droppable/droppable';\nimport { ClrIfDragged } from './if-dragged';\nimport { ClrDragHandle } from './drag-handle';\nimport { ClrDraggableGhost } from './draggable-ghost';\n\nexport const CLR_DRAG_AND_DROP_DIRECTIVES: Type<any>[] = [\n  ClrDraggable,\n  ClrDroppable,\n  ClrIfDragged,\n  ClrDragHandle,\n  ClrDraggableGhost,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DRAG_AND_DROP_DIRECTIVES],\n  entryComponents: [ClrDraggableGhost],\n  exports: [CLR_DRAG_AND_DROP_DIRECTIVES],\n})\nexport class ClrDragAndDropModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\n\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\n\n@Component({\n  selector: 'clr-expandable-animation',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n    :host {\n      display: block;\n    }\n  `,\n  ],\n  animations: [\n    trigger('expandAnimation', [\n      transition('true <=> false', [\n        style({ height: '{{startHeight}}px', overflow: 'hidden' }),\n        animate('0.2s ease-in-out', style({ height: '*' })),\n      ]),\n    ]),\n  ],\n  providers: [DomAdapter],\n})\nexport class ClrExpandableAnimation {\n  @Input() clrExpandTrigger: any;\n\n  startHeight: number = 0;\n\n  constructor(private element: ElementRef, private domAdapter: DomAdapter) {}\n\n  @HostBinding('@expandAnimation')\n  get expandAnimation() {\n    return { value: this.clrExpandTrigger, params: { startHeight: this.startHeight } };\n  }\n\n  @HostListener('@expandAnimation.done')\n  animationDone() {\n    // A \"safe\" auto-update of the height ensuring basic OOTB user experience .\n    // Prone to small jumps in initial animation height if data was changed in the meantime, window was resized, etc.\n    // For optimal behavior call manually updateStartHeight() from the parent component before initiating the update.\n    this.updateStartHeight();\n  }\n\n  updateStartHeight() {\n    this.startHeight = this.domAdapter.computedHeight(this.element.nativeElement) || 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\n\nimport { ClrExpandableAnimation } from './expandable-animation';\n\nexport * from './expandable-animation';\n\nexport const EXPANDABLE_ANIMATION_DIRECTIVES: Type<any>[] = [ClrExpandableAnimation];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EXPANDABLE_ANIMATION_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EXPANDABLE_ANIMATION_DIRECTIVES],\n  exports: [EXPANDABLE_ANIMATION_DIRECTIVES],\n})\nexport class ClrExpandableAnimationModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding, ElementRef, AfterViewInit } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { AriaLiveService, AriaLivePoliteness } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-spinner',\n  providers: [AriaLiveService],\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[attr.aria-busy]': 'true',\n  },\n})\nexport class ClrSpinner implements AfterViewInit {\n  constructor(private el: ElementRef, private ariaLiveService: AriaLiveService) {}\n\n  ngAfterViewInit() {\n    this.ariaLiveService.announce(this.el.nativeElement, this.ariaLive);\n  }\n\n  /**\n   * Default class for all spinners. This class is always true\n   */\n  @HostBinding('class.spinner')\n  get spinnerClass() {\n    return true;\n  }\n\n  // Style\n  private _inline: boolean;\n  @HostBinding('class.spinner-inline')\n  get inlineClass() {\n    return this._inline;\n  }\n\n  @Input('clrInline')\n  set clrInline(value: boolean | string) {\n    this._inline = isBooleanAttributeSet(value);\n  }\n\n  private _inverse: boolean;\n  @HostBinding('class.spinner-inverse')\n  get inverseClass() {\n    return this._inverse;\n  }\n\n  @Input('clrInverse')\n  set clrInverse(value: boolean | string) {\n    this._inverse = isBooleanAttributeSet(value);\n  }\n\n  // Size\n  /**\n   * By default all spinners are Large. (spinner-lg)\n   * To change the size you need to use set clrSmall or clrMedium to TRUE/\n   */\n\n  /**\n   * Small\n   */\n  private _small: boolean;\n  @HostBinding('class.spinner-sm')\n  get smallClass() {\n    return this._small;\n  }\n\n  @Input('clrSmall')\n  set clrSmall(value: boolean | string) {\n    this._small = isBooleanAttributeSet(value);\n  }\n\n  /**\n   * When clrSmall & clrMedium are set both to true.\n   * The CSS with high priority will be small - so medium size will be ignored.\n   *\n   * For this reason if clrSmall is set we won't add clrMedium class.\n   *\n   * NOTE: This is dictated by the CSS rules.\n   * DON'T USE clrSmall & clrMedium to toggle classes. This could change without notice.\n   *\n   * Also there is no logical need to have both of them set to TRUE or FALSE.\n   */\n  private _medium: boolean;\n  @HostBinding('class.spinner-md')\n  get mediumClass() {\n    if (this._small) {\n      return false;\n    }\n    return this._medium;\n  }\n\n  @Input('clrMedium')\n  set clrMedium(value: boolean | string) {\n    this._medium = isBooleanAttributeSet(value);\n  }\n\n  // Aria Live\n\n  /**\n   * By default aria-live will be set to `polite` .\n   * To change is it you need to set clrAssertive or clrOff to TRUE\n   *\n   * There is priority:\n   *   Default: polite\n   *   Asertive\n   *   Off\n   *\n   * In case when for some reason you have clrAssertive=TRUE and clrOff=TRUE,\n   * we gonna set `assertive` as value of aria-live.\n   *\n   */\n  @Input('clrAssertive') assertive: boolean;\n  @Input('clrOff') off: boolean;\n  get ariaLive(): AriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return AriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return AriaLivePoliteness.off;\n    }\n    return AriaLivePoliteness.polite;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrSpinner } from './spinner';\n\nexport const CLR_SPINNER_DIRECTIVES: Type<any>[] = [ClrSpinner];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_SPINNER_DIRECTIVES],\n  exports: [CLR_SPINNER_DIRECTIVES],\n})\nexport class ClrSpinnerModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport abstract class CustomFilter {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * This provider implements some form of synchronous debouncing through a lock pattern\n * to avoid emitting multiple state changes for a single user action.\n */\n@Injectable()\nexport class StateDebouncer {\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  private _change = new Subject<void>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<void> {\n    return this._change.asObservable();\n  }\n\n  /*\n     * This is the lock, to only emit once all the changes have finished processing\n     */\n  private nbChanges = 0;\n\n  public changeStart() {\n    this.nbChanges++;\n  }\n\n  public changeDone() {\n    if (--this.nbChanges === 0) {\n      this._change.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Page {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  private preventEmit = false;\n  public activated = false;\n\n  /**\n   * Page size, a value of 0 means no pagination\n   */\n  private _size = 0;\n  public get size(): number {\n    return this._size;\n  }\n  public set size(size: number) {\n    const oldSize = this._size;\n    if (size !== oldSize) {\n      if (!this.preventEmit) {\n        this.stateDebouncer.changeStart();\n      }\n      this._size = size;\n      if (size === 0) {\n        this._current = 1;\n      } else {\n        // Yeap. That's the formula to keep the first item from the old page still\n        // displayed in the new one.\n        this._current = Math.floor(oldSize / size * (this._current - 1)) + 1;\n      }\n      // We always emit an event even if the current page index didn't change, because\n      // the size changing means the items inside the page are different\n      if (!this.preventEmit) {\n        this._change.next(this._current);\n        this._sizeChange.next(this._size);\n        this.stateDebouncer.changeDone();\n      }\n    }\n    this.preventEmit = false;\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  private _totalItems?: number;\n  public get totalItems(): number {\n    return this._totalItems || 0; // remains 0 if not set to avoid breaking change\n  }\n  public set totalItems(total: number) {\n    this._totalItems = total;\n    // If we have less items than before, we might need to change the current page\n    if (this.current > this.last) {\n      this.current = this.last;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  private _last: number;\n  public get last(): number {\n    if (this._last) {\n      return this._last;\n    }\n    // If the last page isn't known, we compute it from the last item's index\n    if (this.size > 0 && this.totalItems) {\n      return Math.ceil(this.totalItems / this.size);\n    }\n    return 1;\n  }\n  public set last(page: number) {\n    this._last = page;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to page changes\n   */\n  private _change = new Subject<number>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _sizeChange = new Subject<number>();\n\n  public get sizeChange(): Observable<number> {\n    return this._sizeChange.asObservable();\n  }\n\n  /**\n   * Current page\n   */\n  private _current = 1;\n  public get current(): number {\n    return this._current;\n  }\n  public set current(page: number) {\n    if (page !== this._current) {\n      this.stateDebouncer.changeStart();\n      this._current = page;\n      this._change.next(page);\n      this.stateDebouncer.changeDone();\n    }\n  }\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    if (this.current > 1) {\n      this.current--;\n    }\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    if (this.current < this.last) {\n      this.current++;\n    }\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return 0;\n    }\n    return (this.current - 1) * this.size;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return this.totalItems - 1;\n    }\n    let lastInPage = this.current * this.size - 1;\n    if (this.totalItems) {\n      lastInPage = Math.min(lastInPage, this.totalItems - 1);\n    }\n    return lastInPage;\n  }\n\n  /**\n   * Resets the page size to 0\n   */\n  public resetPageSize(preventEmit = false): void {\n    this.preventEmit = preventEmit;\n    this.size = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { Page } from './page';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class FiltersProvider<T = any> {\n  constructor(private _page: Page, private stateDebouncer: StateDebouncer) {}\n  /**\n   * This subject is the list of filters that changed last, not the whole list.\n   * We emit a list rather than just one filter to allow batch changes to several at once.\n   */\n  private _change = new Subject<ClrDatagridFilterInterface<T>[]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<ClrDatagridFilterInterface<T>[]> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * List of all filters, whether they're active or not\n   */\n  private _all: RegisteredFilter<T, ClrDatagridFilterInterface<T>>[] = [];\n\n  /**\n   * Tests if at least one filter is currently active\n   */\n  public hasActiveFilters(): boolean {\n    // We do not use getActiveFilters() because this function will be called much more often\n    // and stopping the loop early might be relevant.\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns a list of all currently active filters\n   */\n  public getActiveFilters(): ClrDatagridFilterInterface<T>[] {\n    const ret: ClrDatagridFilterInterface<T>[] = [];\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        ret.push(filter);\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Registers a filter, and returns a deregistration function\n   */\n  public add<F extends ClrDatagridFilterInterface<T>>(filter: F): RegisteredFilter<T, F> {\n    const subscription = filter.changes.subscribe(() => this.resetPageAndEmitFilterChange([filter]));\n    let hasUnregistered = false;\n    const registered = new RegisteredFilter(filter, () => {\n      if (hasUnregistered) {\n        return;\n      }\n      subscription.unsubscribe();\n      const matchIndex = this._all.findIndex(item => item.filter === filter);\n      if (matchIndex >= 0) {\n        this._all.splice(matchIndex, 1);\n      }\n      if (filter.isActive()) {\n        this.resetPageAndEmitFilterChange([]);\n      }\n      hasUnregistered = true;\n    });\n    this._all.push(registered);\n    if (filter.isActive()) {\n      this.resetPageAndEmitFilterChange([filter]);\n    }\n    return registered;\n  }\n\n  /**\n   * Accepts an item if it is accepted by all currently active filters\n   */\n  public accepts(item: T): boolean {\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive() && !filter.accepts(item)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private resetPageAndEmitFilterChange(filters: ClrDatagridFilterInterface<T>[]) {\n    this.stateDebouncer.changeStart();\n    // filtering may change the page number such that current page number doesn't exist in the filtered dataset.\n    // So here we always set the current page to 1 so that it'll fetch first page's data with the given filter.\n    this._page.current = 1;\n    this._change.next(filters);\n    this.stateDebouncer.changeDone();\n  }\n}\n\nexport class RegisteredFilter<T, F extends ClrDatagridFilterInterface<T>> {\n  constructor(public filter: F, public unregister: () => void) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { OnDestroy } from '@angular/core';\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { FiltersProvider, RegisteredFilter } from '../providers/filters';\n\nexport abstract class DatagridFilterRegistrar<T, F extends ClrDatagridFilterInterface<T>> implements OnDestroy {\n  constructor(private filters: FiltersProvider<T>) {}\n\n  public registered: RegisteredFilter<T, F>;\n\n  public get filter(): F {\n    return this.registered && this.registered.filter;\n  }\n\n  public setFilter(filter: F | RegisteredFilter<T, F>) {\n    // If we previously had another filter, we unregister it\n    this.deleteFilter();\n    if (filter instanceof RegisteredFilter) {\n      this.registered = filter;\n    } else if (filter) {\n      this.registered = this.filters.add(filter);\n    }\n  }\n\n  public deleteFilter() {\n    if (this.registered) {\n      this.registered.unregister();\n      delete this.registered;\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.deleteFilter();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Enumeration representing the sorting order of a datagrid column. It is a constant Enum,\n * i.e. each value needs to be treated as a `number`, starting at index 0.\n *\n * @export\n * @enum {number}\n */\nexport enum ClrDatagridSortOrder {\n  UNSORTED = 0,\n  ASC = 1,\n  DESC = -1,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class ClrPopoverToggleService {\n  /**\n   *  Popovers might need to ignore click events on an element\n   *  (eg: popover opens on focus on an input field. Clicks should be ignored in this case)\n   */\n  private _open: boolean = false;\n  private _openChange: Subject<boolean> = new Subject<boolean>();\n  private _openEvent: Event;\n  private _openEventChange: Subject<Event> = new Subject<Event>();\n\n  public get openChange(): Observable<boolean> {\n    return this._openChange.asObservable();\n  }\n\n  public set openEvent(event: Event) {\n    this._openEvent = event;\n    this._openEventChange.next(event);\n  }\n\n  public get openEvent(): Event {\n    return this._openEvent;\n  }\n\n  public getEventChange(): Observable<Event> {\n    return this._openEventChange.asObservable();\n  }\n\n  public set open(value: boolean) {\n    value = !!value;\n    if (this._open !== value) {\n      this._open = value;\n      this._openChange.next(value);\n    }\n  }\n\n  public get open(): boolean {\n    return this._open;\n  }\n\n  /**\n   * Sometimes, we need to remember the event that triggered the toggling to avoid loops.\n   * This is for instance the case of components that open on a click, but close on a click outside.\n   */\n  public toggleWithEvent(event: any) {\n    this.openEvent = event;\n    this.open = !this.open;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  Inject,\n  OnDestroy,\n  PLATFORM_ID,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\n\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from './providers/filters';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Custom filter that can be added in any column to override the default object property string filter.\n * The reason this is not just an input on DatagridColumn is because we need the filter's template to be projected,\n * since it can be anything (not just a text input).\n */\n@Component({\n  selector: 'clr-dg-filter',\n  // We register this component as a CustomFilter, for the parent column to detect it.\n  providers: [{ provide: CustomFilter, useExisting: ClrDatagridFilter }, UNIQUE_ID_PROVIDER],\n  template: `\n      <button class=\"datagrid-filter-toggle\"\n              type=\"button\"\n              #anchor\n              [attr.aria-label]=\"commonStrings.keys.datagridFilterAriaLabel\"\n              [attr.aria-expanded]=\"ariaExpanded\"\n              [attr.aria-controls]=\"popoverId\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton\n              [class.datagrid-filter-open]=\"open\"\n              [class.datagrid-filtered]=\"active\">\n          <clr-icon [attr.shape]=\"active ? 'filter-grid-circle': 'filter-grid'\" class=\"is-solid\"></clr-icon>\n      </button>\n\n      <div class=\"datagrid-filter\"\n           [id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"open at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <div class=\"datagrid-filter-close-wrapper\">\n              <button type=\"button\" class=\"close\" clrPopoverCloseButton>\n                  <clr-icon shape=\"close\" [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n\n          <ng-content></ng-content>\n      </div>\n  `,\n})\nexport class ClrDatagridFilter<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements CustomFilter, OnDestroy {\n  private subs: Subscription[] = [];\n  public ariaExpanded: boolean = false;\n\n  constructor(\n    _filters: FiltersProvider<T>,\n    public commonStrings: ClrCommonStringsService,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    super(_filters);\n    this.subs.push(\n      smartToggleService.openChange.subscribe(change => {\n        this.open = change;\n        this.ariaExpanded = change;\n      })\n    );\n  }\n\n  @ViewChild('anchor', { static: false, read: ElementRef })\n  anchor: ElementRef;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  private _open: boolean = false;\n  public get open() {\n    return this._open;\n  }\n\n  @Input('clrDgFilterOpen')\n  public set open(open: boolean) {\n    open = !!open;\n    if (this.open !== open) {\n      this.smartToggleService.open = open;\n      this.openChange.emit(open);\n      if (!open && isPlatformBrowser(this.platformId)) {\n        this.anchor.nativeElement.focus();\n      }\n      // keep track of the state\n      this._open = open;\n    }\n  }\n\n  @Output('clrDgFilterOpenChange') public openChange = new EventEmitter<boolean>(false);\n\n  @Input('clrDgFilter')\n  public set customFilter(filter: ClrDatagridFilterInterface<T> | RegisteredFilter<T, ClrDatagridFilterInterface<T>>) {\n    this.setFilter(filter);\n  }\n\n  /**\n   * Indicates if the filter is currently active\n   */\n  public get active() {\n    return !!this.filter && this.filter.isActive();\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Generic accessor for deep object properties\n * that can be specified as simple dot-separated strings.\n */\nexport class NestedProperty<T = any> {\n  private splitProp: string[];\n\n  constructor(private prop: string) {\n    if (prop.indexOf('.') >= 0) {\n      this.splitProp = prop.split('.');\n    }\n  }\n\n  // Safe getter for a deep object property, will not throw an error but return\n  // undefined if one of the intermediate properties is null or undefined.\n  public getPropValue(item: T): any {\n    if (this.splitProp) {\n      let value = item;\n      for (const nestedProp of this.splitProp) {\n        if (value == null || typeof value === 'undefined' || typeof value[nestedProp] === 'undefined') {\n          return undefined;\n        }\n        value = value[nestedProp];\n      }\n      return value;\n    } else {\n      return item[this.prop];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyStringFilter<T = any> implements ClrDatagridStringFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, search: string): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (typeof propValue === 'undefined') {\n      return false;\n    } else if (this.exact) {\n      return ('' + propValue).toLowerCase() === search;\n    } else {\n      return ('' + propValue).toLowerCase().indexOf(search) >= 0;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { DatagridPropertyStringFilter } from './datagrid-property-string-filter';\n\nexport class DatagridStringFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridStringFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<string>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<string> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Raw input value\n   */\n  private _rawValue: string = '';\n  public get value(): string {\n    return this._rawValue;\n  }\n  /**\n   * Input value converted to lowercase\n   */\n  private _lowerCaseValue: string = '';\n  public get lowerCaseValue() {\n    return this._lowerCaseValue;\n  }\n  /**\n   * Common setter for the input value\n   */\n  public set value(value: string) {\n    if (!value) {\n      value = '';\n    }\n    if (value !== this._rawValue) {\n      this._rawValue = value;\n      this._lowerCaseValue = value.toLowerCase().trim();\n      this._changes.next(value);\n    }\n  }\n\n  /**\n   * Indicates if the filter is currently active, meaning the input is not empty\n   */\n  public isActive(): boolean {\n    return !!this.value;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We always test with the lowercase value of the input, to stay case insensitive\n    return this.filterFn.accepts(item, this.lowerCaseValue);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyStringFilter) {\n      return {\n        property: this.filterFn.prop,\n        value: this.value,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridStringFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyStringFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyStringFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.value === this.value\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\n\nimport { DatagridStringFilterImpl } from './datagrid-string-filter-impl';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-string-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridStringFilter }],\n  template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <input #input type=\"text\" name=\"search\" [(ngModel)]=\"value\" class=\"clr-input\" />\n        </clr-dg-filter>\n    `,\n})\nexport class DatagridStringFilter<T = any> extends DatagridFilterRegistrar<T, DatagridStringFilterImpl<T>>\n  implements CustomFilter, AfterViewInit, OnDestroy {\n  private subs: Subscription[] = [];\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    private smartToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  /**\n   * Customizable filter logic based on a search text\n   */\n  @Input('clrDgStringFilter')\n  set customStringFilter(\n    value: ClrDatagridStringFilterInterface<T> | RegisteredFilter<T, DatagridStringFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridStringFilterImpl(value));\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open: boolean = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input', { static: false })\n  public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter, { static: false })\n  public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subs.push(\n      this.smartToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Common setter for the input value\n   */\n  public get value() {\n    return this.filter.value;\n  }\n  @Input('clrFilterValue')\n  public set value(value: string) {\n    if (!this.filter) {\n      return;\n    }\n    if (!value) {\n      value = '';\n    }\n    if (value !== this.filter.value) {\n      this.filter.value = value;\n      this.filterValueChange.emit(value);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyNumericFilter<T = any> implements ClrDatagridNumericFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, low: number, high: number): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (low !== null && propValue < low) {\n      return false;\n    }\n    if (high !== null && propValue > high) {\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { DatagridPropertyNumericFilter } from './datagrid-property-numeric-filter';\n\nexport class DatagridNumericFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridNumericFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<[number, number]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<[number, number]> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Internal values and accessor\n   */\n  private _low: number = null;\n  private _high: number = null;\n\n  /**\n   * Common setters for the input values, including individual limits and\n   * both at the same time.  Value is singular to make the interface similar\n   * to the built-in string filter.\n   */\n\n  public get value(): [number, number] {\n    return [this._low, this._high];\n  }\n\n  public set value(vals: [number, number]) {\n    const low = vals[0];\n    const high = vals[1];\n    if (low !== this._low || high !== this._high) {\n      this._low = low;\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public set low(low: number) {\n    if (low !== this._low) {\n      this._low = low;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public set high(high: number) {\n    if (high !== this._high) {\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public get low() {\n    return this._low;\n  }\n\n  public get high() {\n    return this._high;\n  }\n\n  /**\n   * Indicates if the filter is currently active, (at least one input is set)\n   */\n  public isActive(): boolean {\n    return this._low !== null || this.high !== null;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We have a filter function in case someone wants to implement a numeric\n    // filter that always passes nulls or similar\n    return this.filterFn.accepts(item, this._low, this._high);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyNumericFilter) {\n      return {\n        property: this.filterFn.prop,\n        low: this._low,\n        high: this._high,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridNumericFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyNumericFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyNumericFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.low === this._low &&\n          other.high === this._high\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\nimport { DatagridNumericFilterImpl } from './datagrid-numeric-filter-impl';\nimport { ClrCommonStringsService } from '../../../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-numeric-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridNumericFilter }],\n  template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <input class=\"datagrid-numeric-filter-input\" #input_low type=\"number\" name=\"low\" [(ngModel)]=\"low\" \n                   [placeholder]=\"commonStrings.keys.minValue\" [attr.aria-label]=\"commonStrings.keys.minValue\" />\n                <span class=\"datagrid-filter-input-spacer\"></span>\n            <input class=\"datagrid-numeric-filter-input\" #input_high type=\"number\" name=\"high\" [(ngModel)]=\"high\" \n                   [placeholder]=\"commonStrings.keys.maxValue\" [attr.aria-label]=\"commonStrings.keys.maxValue\" />\n        </clr-dg-filter>\n    `,\n})\nexport class DatagridNumericFilter<T = any> extends DatagridFilterRegistrar<T, DatagridNumericFilterImpl<T>>\n  implements CustomFilter, AfterViewInit {\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    public commonStrings: ClrCommonStringsService,\n    private popoverToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n\n  /**\n   * Customizable filter logic based on high and low values\n   */\n  @Input('clrDgNumericFilter')\n  set customNumericFilter(\n    value: ClrDatagridNumericFilterInterface<T> | RegisteredFilter<T, DatagridNumericFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridNumericFilterImpl(value));\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open: boolean = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input_low', { static: false })\n  public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter, { static: false })\n  public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.popoverToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  /**\n   * Common setter for the input values\n   */\n  public get value() {\n    return [this.filter.low, this.filter.high];\n  }\n\n  @Input('clrFilterValue')\n  public set value(values: [number, number]) {\n    if (!this.filter) {\n      return;\n    }\n    if (values && (values[0] !== this.filter.low || values[1] !== this.filter.high)) {\n      if (typeof values[0] === 'number') {\n        this.filter.low = values[0];\n      } else {\n        this.filter.low = null;\n      }\n      if (typeof values[1] === 'number') {\n        this.filter.high = values[1];\n      } else {\n        this.filter.high = null;\n      }\n      this.filterValueChange.emit(values);\n    }\n  }\n\n  public get low() {\n    if (typeof this.filter.low === 'number' && isFinite(this.filter.low)) {\n      return this.filter.low;\n    } else {\n      // There's not a low limit\n      return null;\n    }\n  }\n\n  public get high() {\n    if (typeof this.filter.high === 'number' && isFinite(this.filter.high)) {\n      return this.filter.high;\n    } else {\n      // There's not a high limit\n      return null;\n    }\n  }\n\n  public set low(low: number | string) {\n    if (typeof low === 'number' && low !== this.filter.low) {\n      this.filter.low = low;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof low !== 'number') {\n      this.filter.low = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  public set high(high: number | string) {\n    if (typeof high === 'number' && high !== this.filter.high) {\n      this.filter.high = high;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof high !== 'number') {\n      this.filter.high = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentChecked, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { WillyWonka } from './willy-wonka';\n\nexport abstract class OompaLoompa implements AfterContentChecked, OnDestroy {\n  // FIXME: Request Injector once we move to Angular 4.2+, it'll allow easier refactors\n  constructor(cdr: ChangeDetectorRef, willyWonka: WillyWonka) {\n    this.subscription = willyWonka.chocolate.subscribe(() => {\n      if (this.latestFlavor !== this.flavor) {\n        cdr.detectChanges();\n      }\n    });\n  }\n\n  private subscription: Subscription;\n\n  private latestFlavor: any;\n\n  abstract get flavor(): any;\n\n  ngAfterContentChecked() {\n    this.latestFlavor = this.flavor;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RowActionService {\n  private actionableCount = 0;\n\n  public register() {\n    this.actionableCount++;\n  }\n\n  public unregister() {\n    this.actionableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   */\n  public get hasActionableRow(): boolean {\n    return this.actionableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewChecked } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * After a conversation with the Angular core team, it turns out we don't have much of a choice for our\n * declarative API, we need to fight against change detection and its one-way flow. This is\n * currently the least dirty solution to do what we want.\n *\n * Do not modify or even use this class unless you know exactly what you're doing.\n * It has the potential to trigger change detection loops or kill app performances.\n */\nexport class WillyWonka implements AfterViewChecked {\n  private _chocolate = new Subject<void>();\n\n  public get chocolate(): Observable<void> {\n    return this._chocolate.asObservable();\n  }\n\n  ngAfterViewChecked() {\n    this._chocolate.next();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-datagrid' })\nexport class DatagridWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { RowActionService } from '../providers/row-action-service';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ActionableOompaLoompa extends OompaLoompa {\n  private rowActions: RowActionService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: DatagridWillyWonka, rowActions: RowActionService) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.rowActions = rowActions;\n  }\n\n  get flavor() {\n    return this.rowActions.hasActionableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ExpandableRowsCount {\n  private expandableCount = 0;\n\n  public register() {\n    this.expandableCount++;\n  }\n\n  public unregister() {\n    this.expandableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   */\n  public get hasExpandableRow(): boolean {\n    return this.expandableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ExpandableRowsCount } from '../providers/global-expandable-rows';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ExpandableOompaLoompa extends OompaLoompa {\n  private expandableCount: ExpandableRowsCount;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: DatagridWillyWonka,\n    expandableCount: ExpandableRowsCount\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.expandableCount = expandableCount;\n  }\n\n  get flavor() {\n    return this.expandableCount.hasExpandableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridComparatorInterface } from '../../interfaces/comparator.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyComparator<T = any> implements ClrDatagridComparatorInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  public compare(a: T, b: T): number {\n    let propA = this.nestedProp.getPropValue(a);\n    let propB = this.nestedProp.getPropValue(b);\n\n    if (typeof propA === 'string') {\n      propA = propA.toLowerCase();\n    }\n\n    if (typeof propB === 'string') {\n      propB = propB.toLowerCase();\n    }\n\n    if (typeof propA === 'undefined' || propA === null) {\n      if (typeof propB === 'undefined' || propB === null) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else {\n      if (typeof propB === 'undefined' || propB === null) {\n        return -1;\n      } else if (propA < propB) {\n        return -1;\n      } else if (propA > propB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrViewportViolation {\n  BOTTOM = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  TOP = 3,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridComparatorInterface } from '../interfaces/comparator.interface';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Sort<T = any> {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  /**\n   * Currently active comparator\n   */\n  private _comparator: ClrDatagridComparatorInterface<T>;\n  public get comparator(): ClrDatagridComparatorInterface<T> {\n    return this._comparator;\n  }\n  public set comparator(value: ClrDatagridComparatorInterface<T>) {\n    this.stateDebouncer.changeStart();\n    this._comparator = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Ascending order if false, descending if true\n   */\n  private _reverse: boolean = false;\n  public get reverse(): boolean {\n    return this._reverse;\n  }\n  public set reverse(value: boolean) {\n    this.stateDebouncer.changeStart();\n    this._reverse = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to sort changes\n   */\n  private _change = new Subject<Sort<T>>();\n  private emitChange() {\n    this._change.next(this);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<Sort<T>> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Sets a comparator as the current one, or toggles reverse if the comparator is already used. The\n   * optional forceReverse input parameter allows to override that toggling behavior by sorting in\n   * reverse order if `true`.\n   *\n   * @memberof Sort\n   */\n  public toggle(sortBy: ClrDatagridComparatorInterface<T>, forceReverse?: boolean) {\n    this.stateDebouncer.changeStart();\n    // We modify private properties directly, to batch the change event\n    if (this.comparator === sortBy) {\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse || !this._reverse : !this._reverse;\n    } else {\n      this._comparator = sortBy;\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse : false;\n    }\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Clears the current sorting order\n   */\n  public clear() {\n    this.comparator = null;\n  }\n\n  /**\n   * Compares two objects according to the current comparator\n   */\n  public compare(a: T, b: T): number {\n    return (this.reverse ? -1 : 1) * this.comparator.compare(a, b);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-column',\n  template: `        \n        <ng-template #columnPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedColumn implements DynamicWrapper, AfterViewInit {\n  _dynamic = false;\n\n  @ViewChild('columnPortal', { static: false })\n  templateRef: TemplateRef<void>;\n  columnView: EmbeddedViewRef<void>; // the columns projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.columnView = this.templateRef.createEmbeddedView(null);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ElementRef, Injectable, Renderer2, Inject, OnDestroy } from '@angular/core';\nimport { ClrPopoverToggleService } from './popover-toggle.service';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Injectable()\nexport class ClrPopoverEventsService implements OnDestroy {\n  public outsideClickClose = true;\n  public scrollToClose = true;\n  private documentClickListener: () => void;\n  public ignoredEvent: any;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private renderer: Renderer2,\n    private smartOpenService: ClrPopoverToggleService,\n    @Inject(DOCUMENT) private document: HTMLDocument\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.subscribe(open => {\n        if (open) {\n          this.addEscapeListener();\n          this.addClickListener();\n          this.addScrollListener();\n        } else {\n          this.removeAllEventListeners();\n        }\n      }),\n      smartOpenService.getEventChange().subscribe(event => {\n        // Remember the event that was used to open the content\n        this.ignoredEvent = event;\n      })\n    );\n  }\n\n  private scrollSubscription: Subscription;\n  public addScrollListener() {\n    if (this.scrollToClose) {\n      this.documentScroller = fromEvent(this.document, 'scroll', { capture: true });\n      this.scrollSubscription = this.documentScroller\n        .pipe(filter(this.testForSmartPopoverContentContainer))\n        .subscribe(() => {\n          this.smartOpenService.open = false;\n          this.setAnchorFocus();\n        });\n    } else {\n      // I think this is where dynamic re-positioning will be added\n      // Instead of testing like we do in the close pipe below\n      // we need to switch positioning to use an observable and then\n      // debounce the scroll events to recalculate content position in a performant way\n      // For now, ignore scrolling events.\n      return;\n    }\n  }\n\n  public removeScrollListener() {\n    if (this.documentScroller) {\n      this.scrollSubscription.unsubscribe();\n      delete this.documentScroller;\n    }\n  }\n\n  private testForSmartPopoverContentContainer(event: Event): boolean {\n    // Filter for the documentScroller observable event targets\n    let target: Element = <Element>event.target;\n\n    // Walk up the DOM tree until we get to the element that is a direct child of the body.\n    while (target.classList && target.parentElement.localName !== 'body') {\n      target = target.parentElement;\n    }\n\n    // Target is the child element of body where the scroll events originated.\n    // Return false and prevent the popover content container from closing for any scroll events inside a popover\n    // content container.\n    if (target.classList) {\n      // check scroll events to see if they are happening in popover content or elsewhere\n      return target.classList.contains('clr-popover-content') ? false : true;\n    } else {\n      // prevents it from closing right after first opening\n      return false;\n    }\n  }\n\n  public addClickListener() {\n    if (this.outsideClickClose) {\n      this.documentClickListener = this.renderer.listen(this.document, 'click', (event: MouseEvent) => {\n        if (event === this.ignoredEvent) {\n          // Here we ignore the opening click event (w/o this content opens and immediately closes.\n          delete this.ignoredEvent;\n        } else {\n          this.smartOpenService.open = false;\n          // Rather than a complex change to the focus trap I put focus on the element that was clicked\n          const clickedElement: HTMLElement = <HTMLElement>event.target;\n          clickedElement.focus();\n        }\n      });\n    }\n  }\n\n  public removeClickListener() {\n    if (this.outsideClickClose) {\n      delete this.ignoredEvent;\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n\n  private escapeListener: () => void;\n  public addEscapeListener() {\n    this.escapeListener = this.renderer.listen(this.document, 'keydown.escape', event => {\n      this.smartOpenService.open = false;\n      this.setAnchorFocus();\n    });\n  }\n\n  public removeEscapeListener() {\n    if (this.escapeListener) {\n      this.escapeListener();\n      delete this.escapeListener;\n    }\n  }\n\n  private _anchorButtonRef: ElementRef;\n  public set anchorButtonRef(ref: ElementRef) {\n    this._anchorButtonRef = ref;\n  }\n  public get anchorButtonRef(): ElementRef {\n    return this._anchorButtonRef;\n  }\n\n  private _closeButtonRef: ElementRef;\n  public set closeButtonRef(ref: ElementRef) {\n    this._closeButtonRef = ref;\n  }\n  public get closeButtonRef(): ElementRef {\n    return this._closeButtonRef;\n  }\n\n  public setCloseFocus(): void {\n    this._closeButtonRef.nativeElement.focus();\n  }\n\n  public setAnchorFocus(): void {\n    this.anchorButtonRef.nativeElement.focus();\n  }\n\n  private _contentRef: ElementRef;\n  public set contentRef(host: ElementRef) {\n    this._contentRef = host;\n  }\n  public get contentRef(): ElementRef {\n    return this._contentRef;\n  }\n\n  private documentScroller: Observable<Event>;\n\n  private removeAllEventListeners() {\n    this.removeScrollListener();\n    this.removeClickListener();\n    this.removeEscapeListener();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.removeAllEventListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from './interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from './enums/viewport-violation.enum';\nimport { ClrVisibilityCoords } from './interfaces/visibility-coords.interface';\nimport { ClrAlignment } from './enums/alignment.enum';\n\n// Put the forward arg here but it is only needed when nudging content or anchors.\nexport type ClrTransform = (position: ClrPopoverPosition, back?: boolean) => ClrPopoverPosition;\n\nexport const flipSides: ClrTransform = position => {\n  return {\n    ...position,\n    side: -1 * position.side,\n  };\n};\n\n// This could be used in more advanced positioning algorithms.\n// flipAxisFlipSideAndNudgeContent(flipAxis, flipSide, nudge, nudgeForward?): ClrTransform {...}\n// I would like to keep it for now.\nexport const flipAxis: ClrTransform = position => {\n  return {\n    ...position,\n    axis: position.axis === 0 ? 1 : 0,\n  };\n};\n\nexport const nudgeContent: ClrTransform = (position, forward) => {\n  const nextAlignment = position.content + (forward ? 0.5 : -0.5);\n  if (nextAlignment < 0 || nextAlignment > 1) {\n    return position;\n  } else {\n    return {\n      ...position,\n      content: nextAlignment,\n    };\n  }\n};\n\nexport function flipSidesAndNudgeContent(flip: ClrTransform, nudge: ClrTransform, nudgeBack?: boolean): ClrTransform {\n  return (position: ClrPopoverPosition): ClrPopoverPosition => nudge(flip(position), nudgeBack);\n}\n\nexport function align(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): ClrPopoverContentOffset {\n  let xDiff = anchor.left;\n  let yDiff = anchor.top;\n\n  // When ClrAxis is VERTICAL BEFORE = left, AFTER = right\n  // When ClrAxis is HORIZONTAL BEFORE is top, AFTER is bottom\n  switch (position.axis + position.side) {\n    case -1: {\n      // ClrAxis.VERTICAL + ClrSide.BEFORE\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff -= content.height; // pull content up to the top of the anchor\n      break;\n    }\n    case 1: {\n      // ClrAxis.VERTICAL + ClrSide.AFTER\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff += anchor.height; // push the content down to below the anchor\n      break;\n    }\n    case 0: {\n      // ClrAxis.HORIZONTAL + ClrSide.BEFORE\n      xDiff -= content.width; // pull the content left of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    case 2: {\n      // ClrAxis.HORIZONTAL + ClrSide.AFTER\n      xDiff += anchor.width; // push the content right of of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return { xOffset: xDiff, yOffset: yDiff };\n}\n\nfunction alignHorizontal(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  let horizontalOffset = 0;\n  // horizontal offset for the anchor position\n  switch (position.anchor /*calculate for the anchor alignment*/) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset += anchor.width / 2; // push content over 1/2 anchor width\n      break;\n    }\n    case ClrAlignment.END: {\n      horizontalOffset += anchor.width; //  push content over width of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // horizontal offsets for anchor alignment\n  switch (\n    position.content // calculate for the content alignment\n  ) {\n    case ClrAlignment.START: {\n      // Nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset -= content.width / 2; // pull content left by a value of 1/2 content width\n      break;\n    }\n    case ClrAlignment.END: {\n      // subtract the width of currentContent from horizontalOffset to pull it back\n      horizontalOffset -= content.width;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  return horizontalOffset;\n}\n\nfunction alignVertical(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  // y axis offsets for anchor alignment\n  let verticalOffset = 0;\n\n  // Calculate y offset for anchor position\n  switch (position.anchor) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset += anchor.height / 2; // push content down to the middle of the anchor rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset += anchor.height; // push content down to the bottom of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // Calculate y offsets for content alignment\n  switch (position.content) {\n    case ClrAlignment.START: {\n      // aligned to the top of the content rect\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset -= content.height / 2; // pull content back up to the middle of the content rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset -= content.height; // pull content back up to the bottom of the content rect\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return verticalOffset;\n}\n\nexport function testVisibility(offset: ClrPopoverContentOffset, content: ClientRect): ClrViewportViolation[] {\n  const violations: ClrViewportViolation[] = [];\n  const mockCoords: ClrVisibilityCoords = {\n    bottom: offset.yOffset + content.height,\n    left: offset.xOffset,\n    right: offset.xOffset + content.width,\n    top: offset.yOffset,\n  };\n\n  if (!(mockCoords.top >= 0)) {\n    violations.push(ClrViewportViolation.TOP);\n  }\n  if (!(mockCoords.left >= 0)) {\n    violations.push(ClrViewportViolation.LEFT);\n  }\n  if (!(mockCoords.bottom <= (window.innerHeight || document.documentElement.clientHeight))) {\n    violations.push(ClrViewportViolation.BOTTOM);\n  }\n  if (!(mockCoords.right <= (window.innerWidth || document.documentElement.clientWidth))) {\n    violations.push(ClrViewportViolation.RIGHT);\n  }\n\n  return violations;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridDisplayMode {\n  DISPLAY,\n  CALCULATE,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridRenderStep {\n  ALIGN_COLUMNS,\n  CALCULATE_MODE_ON,\n  CALCULATE_MODE_OFF,\n  CLEAR_WIDTHS, // Note this is listened to by both cells and columns\n  COMPUTE_COLUMN_WIDTHS,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { Injectable, PLATFORM_ID, Inject } from '@angular/core';\n\nimport { ClrPopoverEventsService } from './popover-events.service';\nimport { ClrPopoverPosition } from '../interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from '../interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from '../enums/viewport-violation.enum';\nimport { align, flipSidesAndNudgeContent, flipSides, nudgeContent, testVisibility } from '../position-operators';\nimport { ClrAxis } from '../enums/axis.enum';\n\n@Injectable()\nexport class ClrPopoverPositionService {\n  private currentAnchorCoords: ClientRect;\n  private currentContentCoords: ClientRect;\n  private contentOffsets: ClrPopoverContentOffset;\n  private _position: ClrPopoverPosition;\n\n  set position(position: ClrPopoverPosition) {\n    this._position = position;\n  }\n  get position(): ClrPopoverPosition {\n    return this._position;\n  }\n\n  constructor(private eventService: ClrPopoverEventsService, @Inject(PLATFORM_ID) public platformId: Object) {}\n\n  public alignContent(content: HTMLElement): ClrPopoverContentOffset {\n    if (!isPlatformBrowser(this.platformId)) {\n      // Only position when in a browser.\n      // Default to the browser origin and prevent getBoundingClientRect from running.\n      return {\n        xOffset: 0,\n        yOffset: 0,\n      };\n    }\n\n    this.currentAnchorCoords = this.eventService.anchorButtonRef.nativeElement.getBoundingClientRect();\n    this.currentContentCoords = content.getBoundingClientRect();\n    this.contentOffsets = align(this.position, this.currentAnchorCoords, this.currentContentCoords);\n\n    const visibilityViolations: ClrViewportViolation[] = testVisibility(this.contentOffsets, this.currentContentCoords);\n    /**\n     * Calculate the sum of viewport errors. This calculation is used below with the provided Axis in the given\n     * ClrPopoverPosition. Its worth putting the ClrViewportViolation enum values here:\n     *\n     *   BOTTOM = 0,\n     *   LEFT = 1,\n     *   RIGHT = 2,\n     *   TOP = 3,\n     *\n     *   So, this.visibilityViolations.length tells us how many sides of the viewport that the popover content was\n     *   clipped on. We can only help when the content has an issue on one or two sides.\n     *   errorSum is calculated to determine _how_ to change the position. Looking at both the axis and the number\n     *   of violations I can use the errorSum to determine how to transform the position (on the fly) and adjust\n     *   where it can be improved.\n     *\n     *   Note, more than 3 viewport violations and there isn't anything we can do to help. Also when there are two\n     *   violations, we can't help if the violations are TOP+BOTTOM || LEFT+RIGHT => There is no transformation we\n     *   can make to the postion that will help.\n     *\n     *   Some examples:\n     *   There is only one error and Primary axis is VERTICAL\n     *   - this.handleVerticalAxisOneViolation has a switch that will use the error sum to apply the correct\n     *   transform to the postion based on the reduction of visibilityViolations.\n     *\n     *   There are two errors and Primary axis is HORIZONTAL\n     *   - handleHorizontalAxisTwoViolations has a switch that uses the error sum to apply both transforms needed to\n     *   improve the content position based on the reduction of visibilityViolations.\n     */\n\n    const errorSum = visibilityViolations.reduce((count, current) => {\n      return count + current;\n    }, 0);\n\n    if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there is one viewport violation\n      this.handleVerticalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there is one viewport violation\n      this.handleHorizontalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there are two viewport violations\n      this.handleVerticalAxisTwoViolations(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there are two viewport violations\n      this.handleHorizontalAxisTwoViolations(errorSum);\n    }\n    return this.contentOffsets;\n  }\n\n  private handleVerticalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 0:\n      case 3: {\n        // BOTTOM(0) or TOP(3) are primary violations and we can just flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 1: {\n        // LEFT(1) is secondary and needs to nudge content right\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 2: {\n        // RIGHT(2) is secondary and  needs to nudge content left\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleVerticalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      // We know there are two violations. We can use the errorSum to determine which combination of sides were\n      // violated and handle appropriately.\n      case 5: {\n        // TOP(3)+RIGHT(2) is case 5. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 4: {\n        //TOP(3)+LEFT(1) is case 4, we need to flip sides and nudge content to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2: {\n        // BOTTOM(0)+RIGHT(2) is case 2. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 1: {\n        // BOTTOM(0)+LEFT(1) is case 1. We need to flip sides and nudge to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 1:\n      case 2: {\n        // LEFT(1) and RIGHT(2) are primary violations so we can flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 0: {\n        // BOTTOM(0) is a secondary violation and we need to nudge content up\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3) is a secondary violation and we need to nudge content down\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      case 5:\n      case 4: {\n        // TOP(3)+LEFT(1) is case 4.\n        // TOP(3)+RIGHT(2) is case 5.\n        // In both of these cases we need to flip sides and nudge content down\n        const flipAndNudgeDown = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeDown(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2:\n      case 1: {\n        // BOTTOM(0)+RIGHT(2) is case 2.\n        // BOTTOM(0)+LEFT(1) is case 1.\n        // In both cases we  need to flip sides and nudge content up\n        const flipAndNudgeUp = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(flipAndNudgeUp(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  EventEmitter,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewContainerRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DatagridPropertyComparator } from './built-in/comparators/datagrid-property-comparator';\nimport { DatagridPropertyStringFilter } from './built-in/filters/datagrid-property-string-filter';\nimport { DatagridPropertyNumericFilter } from './built-in/filters/datagrid-property-numeric-filter';\nimport { DatagridStringFilterImpl } from './built-in/filters/datagrid-string-filter-impl';\nimport { DatagridNumericFilterImpl } from './built-in/filters/datagrid-numeric-filter-impl';\nimport { ClrDatagridSortOrder } from './enums/sort-order.enum';\nimport { ClrDatagridComparatorInterface } from './interfaces/comparator.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider } from './providers/filters';\nimport { Sort } from './providers/sort';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { WrappedColumn } from './wrapped-column';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-column',\n  template: `\n      <div class=\"datagrid-column-flex\">\n          <!-- I'm really not happy with that select since it's not very scalable -->\n          <ng-content select=\"clr-dg-filter, clr-dg-string-filter, clr-dg-numeric-filter\"></ng-content>\n\n          <clr-dg-string-filter\n                  *ngIf=\"field && !customFilter && (colType=='string')\"\n                  [clrDgStringFilter]=\"registered\"\n                  [(clrFilterValue)]=\"filterValue\"></clr-dg-string-filter>\n          \n          <clr-dg-numeric-filter\n                  *ngIf=\"field && !customFilter && (colType=='number')\"\n                  [clrDgNumericFilter]=\"registered\"\n                  [(clrFilterValue)]=\"filterValue\"></clr-dg-numeric-filter>\n\n          <ng-template #columnTitle>\n              <ng-content></ng-content>\n          </ng-template>\n\n          <button \n            class=\"datagrid-column-title\" \n            [attr.aria-label]=\"commonStrings.keys.sortColumn\"\n            *ngIf=\"sortable\" \n            (click)=\"sort()\" \n            type=\"button\">\n              <ng-container  *ngTemplateOutlet=\"columnTitle\"></ng-container>\n              <clr-icon\n                      *ngIf=\"sortIcon\"\n                      [attr.shape]=\"sortIcon\"\n                      class=\"sort-icon\"></clr-icon>\n          </button>\n\n          <span class=\"datagrid-column-title\" *ngIf=\"!sortable\">\n              <ng-container *ngTemplateOutlet=\"columnTitle\"></ng-container>\n          </span>\n\n            <clr-dg-column-separator></clr-dg-column-separator>\n        </div>\n    `,\n  providers: [ClrPopoverPositionService, ClrPopoverEventsService, ClrPopoverToggleService],\n  host: {\n    '[class.datagrid-column]': 'true',\n    '[attr.aria-sort]': 'ariaSort',\n    role: 'columnheader',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrDatagridColumn<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements OnDestroy, OnInit {\n  constructor(\n    private _sort: Sort<T>,\n    filters: FiltersProvider<T>,\n    private vcr: ViewContainerRef,\n    public commonStrings: ClrCommonStringsService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    super(filters);\n    this._sortSubscription = _sort.change.subscribe(sort => {\n      // Need to manually mark the component to be checked\n      // for both activating and deactivating sorting\n      this.changeDetectorRef.markForCheck();\n\n      // We're only listening to make sure we emit an event when the column goes from sorted to unsorted\n      if (this.sortOrder !== ClrDatagridSortOrder.UNSORTED && sort.comparator !== this._sortBy) {\n        this._sortOrder = ClrDatagridSortOrder.UNSORTED;\n        this.sortOrderChange.emit(this._sortOrder);\n        // removes the sortIcon when column becomes unsorted\n        this.sortIcon = null;\n      }\n      // deprecated: to be removed - START\n      if (this.sorted && sort.comparator !== this._sortBy) {\n        this._sorted = false;\n        this.sortedChange.emit(false);\n      }\n      // deprecated: to be removed - END\n    });\n  }\n\n  /**\n   * Subscription to the sort service changes\n   */\n  private _sortSubscription: Subscription;\n\n  ngOnDestroy() {\n    this._sortSubscription.unsubscribe();\n  }\n\n  /*\n     * Simple object property shortcut, activates both sorting and filtering\n     * based on native comparison of the specified property on the items.\n     */\n  private _field: string;\n  public get field() {\n    return this._field;\n  }\n\n  @Input('clrDgField')\n  public set field(field: string) {\n    if (typeof field === 'string') {\n      this._field = field;\n      if (!this.customFilter) {\n        if (this.colType === 'number') {\n          this.setFilter(new DatagridNumericFilterImpl(new DatagridPropertyNumericFilter(field)));\n        } else {\n          this.setFilter(new DatagridStringFilterImpl(new DatagridPropertyStringFilter(field)));\n        }\n      }\n      if (!this._sortBy) {\n        this._sortBy = new DatagridPropertyComparator(field);\n      }\n    }\n  }\n\n  /**\n   * ClrDatagridComparatorInterface to use when sorting the column\n   */\n\n  private _sortBy: ClrDatagridComparatorInterface<T>;\n\n  public get sortBy() {\n    return this._sortBy;\n  }\n\n  @Input('clrDgSortBy')\n  public set sortBy(comparator: ClrDatagridComparatorInterface<T> | string) {\n    if (typeof comparator === 'string') {\n      this._sortBy = new DatagridPropertyComparator(comparator);\n    } else {\n      if (comparator) {\n        this._sortBy = comparator;\n      } else {\n        if (this._field) {\n          this._sortBy = new DatagridPropertyComparator(this._field);\n        } else {\n          delete this._sortBy;\n        }\n      }\n    }\n  }\n\n  /*\n    * What type is this column?  This defaults to STRING, but can also be\n    * set to NUMBER.  Unsupported types default to STRING. Users can set it\n    * via the [clrDgColType] input by setting it to 'string' or 'number'.\n    */\n\n  // TODO: We might want to make this an enum in the future\n  @Input('clrDgColType') colType: 'string' | 'number' = 'string';\n\n  /**\n   * Indicates if the column is sortable\n   */\n  public get sortable(): boolean {\n    return !!this._sortBy;\n  }\n\n  // deprecated: to be removed - START\n  /**\n   * Indicates if the column is currently sorted\n   *\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  private _sorted = false;\n  public get sorted() {\n    return this._sorted;\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Input('clrDgSorted')\n  public set sorted(value: boolean) {\n    if (!value && this.sorted) {\n      this._sorted = false;\n      this._sort.clear();\n    } else if (value && !this.sorted) {\n      this.sort();\n    }\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Output('clrDgSortedChange') public sortedChange = new EventEmitter<boolean>();\n\n  // deprecated: to be removed - END\n\n  /**\n   * Indicates how the column is currently sorted\n   */\n  private _sortOrder: ClrDatagridSortOrder = ClrDatagridSortOrder.UNSORTED;\n  public get sortOrder() {\n    return this._sortOrder;\n  }\n\n  @Input('clrDgSortOrder')\n  public set sortOrder(value: ClrDatagridSortOrder) {\n    if (typeof value === 'undefined') {\n      return;\n    }\n\n    // only if the incoming order is different from the current one\n    if (this._sortOrder === value) {\n      return;\n    }\n\n    switch (value) {\n      // the Unsorted case happens when the current state is either Asc or Desc\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        this._sort.clear();\n        break;\n      case ClrDatagridSortOrder.ASC:\n        this.sort(false);\n        break;\n      case ClrDatagridSortOrder.DESC:\n        this.sort(true);\n        break;\n    }\n  }\n\n  public get ariaSort() {\n    switch (this._sortOrder) {\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        return 'none';\n      case ClrDatagridSortOrder.ASC:\n        return 'ascending';\n      case ClrDatagridSortOrder.DESC:\n        return 'descending';\n    }\n  }\n\n  @Output('clrDgSortOrderChange') public sortOrderChange = new EventEmitter<ClrDatagridSortOrder>();\n\n  public sortIcon: string;\n  /**\n   * Sorts the datagrid based on this column\n   */\n  public sort(reverse?: boolean) {\n    if (!this.sortable) {\n      return;\n    }\n\n    this._sort.toggle(this._sortBy, reverse);\n\n    // setting the private variable to not retrigger the setter logic\n    this._sortOrder = this._sort.reverse ? ClrDatagridSortOrder.DESC : ClrDatagridSortOrder.ASC;\n    // Sets the correct icon for current sort order\n    this.sortIcon = this._sortOrder === ClrDatagridSortOrder.DESC ? 'arrow down' : 'arrow';\n    this.sortOrderChange.emit(this._sortOrder);\n\n    // deprecated: to be removed - START\n    this._sorted = true;\n    this.sortedChange.emit(true);\n    // deprecated: to be removed - END\n  }\n\n  /**\n   * A custom filter for this column that can be provided in the projected content\n   */\n  public customFilter = false;\n\n  @ContentChild(CustomFilter, { static: false })\n  public set projectedFilter(custom: any) {\n    if (custom) {\n      this.deleteFilter();\n      this.customFilter = true;\n    }\n  }\n\n  public get filterValue() {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      return this.filter.value;\n    }\n  }\n\n  @Input('clrFilterValue')\n  public set updateFilterValue(newValue: string | [number, number]) {\n    if (!this.filter) {\n      return;\n    }\n    if (this.filter instanceof DatagridStringFilterImpl) {\n      if (!newValue || typeof newValue !== 'string') {\n        newValue = '';\n      }\n      if (newValue !== this.filter.value) {\n        this.filter.value = newValue;\n      }\n    } else if (this.filter instanceof DatagridNumericFilterImpl) {\n      if (!newValue || !(newValue instanceof Array)) {\n        newValue = [null, null];\n      }\n      if (newValue.length === 2 && (newValue[0] !== this.filter.value[0] || newValue[1] !== this.filter.value[1])) {\n        this.filter.value = newValue;\n      }\n    }\n  }\n\n  public set filterValue(newValue: string | [number, number]) {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      this.updateFilterValue = newValue;\n      this.filterValueChange.emit(this.filter.value);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedColumn, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedColumn, this.vcr).columnView;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\n\n@Injectable()\nexport class Items<T = any> {\n  constructor(private _filters: FiltersProvider<T>, private _sort: Sort<T>, private _page: Page) {}\n\n  /**\n   * Indicates if the data is currently loading\n   */\n  public loading = false;\n\n  // TODO: Verify that trackBy is registered for the *ngFor case too\n  /**\n   * Tracking function to identify objects. Default is reference equality.\n   */\n  public trackBy: TrackByFunction<T> = (index: number, item: T) => item;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private _filtersSub: Subscription;\n  private _sortSub: Subscription;\n  private _pageSub: Subscription;\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    if (this._filtersSub) {\n      this._filtersSub.unsubscribe();\n    }\n    if (this._sortSub) {\n      this._sortSub.unsubscribe();\n    }\n    if (this._pageSub) {\n      this._pageSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Whether we should use smart items for this datagrid or let the user handle\n   * everything.\n   */\n  private _smart = false;\n  public get smart(): boolean {\n    return this._smart;\n  }\n  public smartenUp() {\n    this._smart = true;\n    /*\n         * These observers trigger a chain of function: filter -> sort -> paginate\n         * An observer up the chain re-triggers all the operations that follow it.\n         */\n    this._filtersSub = this._filters.change.subscribe(() => this._filterItems());\n    this._sortSub = this._sort.change.subscribe(() => {\n      // Special case, if the datagrid went from sorted to unsorted, we have to re-filter\n      // to get the original order back\n      if (!this._sort.comparator) {\n        this._filterItems();\n      } else {\n        this._sortItems();\n      }\n    });\n    this._pageSub = this._page.change.subscribe(() => this._changePage());\n  }\n\n  /**\n   * List of all items in the datagrid\n   */\n  private _all: T[];\n  public get all() {\n    return this._all;\n  }\n  public set all(items: T[]) {\n    this._all = items;\n    this.emitAllChanges(items);\n    if (this.smart) {\n      this._filterItems();\n    } else {\n      this._displayed = items;\n      this.emitChange();\n    }\n  }\n\n  /**\n   * Manually recompute the list of displayed items\n   */\n  public refresh() {\n    if (this.smart) {\n      this._filterItems();\n    }\n  }\n\n  /**\n   * Internal temporary step, which we preserve to avoid re-filtering or re-sorting if not necessary\n   */\n  private _filtered: T[];\n\n  /**\n   * List of items currently displayed\n   */\n  private _displayed: T[] = [];\n  public get displayed(): T[] {\n    // Ideally we could return an immutable array, but we don't have it in Clarity yet.\n    return this._displayed;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to items changes\n   */\n  private _change = new Subject<T[]>();\n  private emitChange() {\n    this._change.next(this.displayed);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[]> {\n    return this._change.asObservable();\n  }\n\n  private _allChanges = new Subject<T[]>();\n  private emitAllChanges(items: T[]): void {\n    this._allChanges.next(items);\n  }\n\n  public get allChanges(): Observable<T[]> {\n    return this._allChanges.asObservable();\n  }\n\n  /**\n   * Checks if we don't have data to process yet, to abort early operations\n   */\n  private get uninitialized() {\n    return !this._all;\n  }\n\n  /**\n   * FiltersProvider items from the raw list\n   */\n  private _filterItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._filters.hasActiveFilters()) {\n      this._filtered = this._all.filter(item => this._filters.accepts(item));\n    } else {\n      // Work on a shallow copy of the array, to not modify the user's model\n      this._filtered = this._all.slice();\n    }\n    this._page.totalItems = this._filtered.length;\n    this._sortItems();\n  }\n\n  /**\n   * Sorts items in the filtered list\n   */\n  private _sortItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._sort.comparator) {\n      this._filtered.sort((a, b) => this._sort.compare(a, b));\n    }\n    this._changePage();\n  }\n\n  /**\n   * Extracts the current page from the sorted list\n   */\n  private _changePage() {\n    // If we know we have pagination but the page size hasn't been set yet, we wait for it.\n    if (this.uninitialized || (this._page.activated && this._page.size === 0)) {\n      return;\n    }\n    if (this._page.size > 0) {\n      this._displayed = this._filtered.slice(this._page.firstItem, this._page.lastItem + 1);\n    } else {\n      this._displayed = this._filtered;\n    }\n    this.emitChange();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgForOf, NgForOfContext } from '@angular/common';\nimport {\n  Directive,\n  DoCheck,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Items } from './providers/items';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrDgItems][clrDgItemsOf]',\n})\nexport class ClrDatagridItems<T> implements DoCheck, OnDestroy {\n  private iterableProxy: NgForOf<T>;\n  private _rawItems: T[];\n  private differ: IterableDiffer<T> | null = null;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrDgItemsOf')\n  public set rawItems(items: T[]) {\n    this._rawItems = items ? items : []; // local copy for ngOnChange diffing\n  }\n\n  @Input('clrDgItemsTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    this.iterableProxy.ngForTrackBy = value;\n  }\n\n  constructor(\n    public template: TemplateRef<NgForOfContext<T>>,\n    private differs: IterableDiffers,\n    private items: Items,\n    private vcr: ViewContainerRef\n  ) {\n    items.smartenUp();\n    this.iterableProxy = new NgForOf<T>(this.vcr, this.template, this.differs);\n    this.subscriptions.push(\n      items.change.subscribe(newItems => {\n        this.iterableProxy.ngForOf = newItems;\n        this.iterableProxy.ngDoCheck();\n      })\n    );\n  }\n\n  ngDoCheck() {\n    if (!this.differ) {\n      this.differ = this.differs.find(this._rawItems).create(this.iterableProxy.ngForTrackBy);\n    }\n    if (this.differ) {\n      const changes = this.differ.diff(this._rawItems);\n      if (changes) {\n        // TODO: not very efficient right now,\n        // but premature optimization is the root of all evil.\n        this.items.all = this._rawItems;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { Items } from './providers/items';\n\n@Component({\n  selector: 'clr-dg-placeholder',\n  template: `\n        <div\n            class=\"datagrid-placeholder\"\n            [class.datagrid-empty]=\"emptyDatagrid\">\n                <div class=\"datagrid-placeholder-image\" *ngIf=\"emptyDatagrid\"></div>\n                <ng-content *ngIf=\"emptyDatagrid\"></ng-content>\n        </div>\n    `,\n  host: { '[class.datagrid-placeholder-container]': 'true' },\n})\nexport class ClrDatagridPlaceholder<T = any> {\n  constructor(private items: Items<T>) {}\n\n  /**\n   * Tests if the datagrid is empty, meaning it doesn't contain any items\n   */\n  public get emptyDatagrid() {\n    return !this.items.loading && (!this.items.displayed || this.items.displayed.length === 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ElementRef, InjectionToken } from '@angular/core';\n\nexport const POPOVER_HOST_ANCHOR = new InjectionToken<ElementRef>('POPOVER_HOST_ANCHOR');\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SignpostFocusManager {\n  private _triggerEl: HTMLElement;\n\n  set triggerEl(value: HTMLElement) {\n    this._triggerEl = value;\n  }\n\n  focusTrigger() {\n    if (this._triggerEl) {\n      this._triggerEl.focus();\n    }\n  }\n}\n","/*\n *  Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SignpostIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  setId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Directive, ElementRef, HostListener, Inject, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { IfOpenService } from '../../utils/conditional/if-open.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\n\n@Directive({\n  selector: '[clrSignpostTrigger]',\n  host: {\n    class: 'signpost-trigger',\n    '[attr.aria-label]': 'commonStrings.keys.signpostToggle',\n    '[attr.aria-expanded]': 'ariaExpanded',\n    '[attr.aria-controls]': 'ariaControl',\n    '[class.active]': 'isOpen',\n  },\n})\n\n/*********\n *\n * @description\n * A Directive added to the ClrSignpost Trigger button that will call the ClrSignpost.toggle() function to hide/show the\n * ClrSignpostContent.\n *\n */\nexport class ClrSignpostTrigger implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  public ariaExpanded: boolean;\n  public ariaControl: string;\n  public isOpen: boolean;\n\n  private document: Document;\n\n  constructor(\n    private ifOpenService: IfOpenService,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(DOCUMENT) document: any,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = document;\n  }\n\n  ngOnInit() {\n    this.signpostFocusManager.triggerEl = this.el.nativeElement;\n    this.subscriptions.push(\n      this.ifOpenService.openChange.subscribe((isOpen: boolean) => {\n        this.ariaExpanded = isOpen;\n\n        const prevIsOpen = this.isOpen;\n        this.isOpen = isOpen;\n\n        // openChange fires false on initialization because signpost starts as closed by default\n        // but we shouldn't focus on that initial false value\n        // we should focus back only if it's closed after being opened\n        if (!this.isOpen && prevIsOpen) {\n          this.focusOnClose();\n        }\n      }),\n      this.signpostIdService.id.subscribe(idChange => (this.ariaControl = idChange))\n    );\n  }\n\n  private focusOnClose() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    // we have to set the focus back on the trigger only if the focus is reset back to the body element\n    // if the focus is on another element, we are not allowed to move that focus back to this trigger again.\n    if (!this.isOpen && this.document.activeElement === this.document.body) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  /**********\n   *\n   * @description\n   * click handler for the ClrSignpost trigger button used to hide/show ClrSignpostContent.\n   */\n  @HostListener('click', ['$event'])\n  onSignpostTriggerClick(event: Event): void {\n    this.ifOpenService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, ElementRef } from '@angular/core';\n\nimport { IfOpenService } from '../../utils/conditional/if-open.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { ClrSignpostTrigger } from './signpost-trigger';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\n\n@Component({\n  selector: 'clr-signpost',\n  template: `\n        <ng-container *ngIf=\"!useCustomTrigger\">\n            <button\n                type=\"button\"\n                class=\"signpost-action btn btn-small btn-link\"\n                clrSignpostTrigger>\n                <clr-icon shape=\"info\" [attr.title]=\"commonStrings.keys.info\"></clr-icon>\n            </button>\n        </ng-container>\n        \n        <ng-content></ng-content>\n    `,\n  host: { '[class.signpost]': 'true' },\n  providers: [\n    IfOpenService,\n    SignpostFocusManager,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    SignpostIdService,\n  ],\n})\n\n/*********\n *\n * @class ClrSignpost\n *\n * @description\n * Class used to configure and control the state of a ClrSignpost and its associated ClrSignpostContent.\n * It supports the clrPosition with a 'right-middle' default.\n *\n */\nexport class ClrSignpost {\n  constructor(public commonStrings: ClrCommonStringsService) {}\n\n  /**********\n   * @property useCustomTrigger\n   *\n   * @description\n   * Flag used to determine if we need to use the default trigger or a user supplied trigger element.\n   *\n   */\n  public useCustomTrigger: boolean = false;\n\n  /**********\n   * @property signPostTrigger\n   *\n   * @description\n   * Uses ContentChild to check for a user supplied element with the ClrSignpostTrigger on it.\n   *\n   */\n  @ContentChild(ClrSignpostTrigger, { static: false })\n  set customTrigger(trigger: ClrSignpostTrigger) {\n    this.useCustomTrigger = !!trigger;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-cell',\n  template: `        \n        <ng-template #cellPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedCell implements DynamicWrapper, AfterViewInit {\n  _dynamic = false;\n  @ViewChild('cellPortal', { static: false })\n  templateRef: TemplateRef<void>;\n  cellView: EmbeddedViewRef<void>; // the cells projected view\n\n  ngAfterViewInit() {\n    this.cellView = this.templateRef.createEmbeddedView(null);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChildren, Injector, OnInit, QueryList, ViewContainerRef } from '@angular/core';\n\nimport { ClrSignpost } from '../../popover/signpost/signpost';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { WrappedCell } from './wrapped-cell';\n\n@Component({\n  selector: 'clr-dg-cell',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.datagrid-cell]': 'true',\n    '[class.datagrid-signpost-trigger]': 'signpost.length > 0',\n    role: 'gridcell',\n  },\n})\nexport class ClrDatagridCell implements OnInit {\n  /*********\n   * @property signpost\n   *\n   * @description\n   * @ContentChild is used to detect the presence of a Signpost in the projected content.\n   * On the host, we set the .datagrid-signpost-trigger class on the cell when signpost.length is greater than 0.\n   *\n   */\n  @ContentChildren(ClrSignpost) signpost: QueryList<ClrSignpost>;\n\n  constructor(private vcr: ViewContainerRef) {}\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedCell, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedCell, this.vcr).cellView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum SelectionType {\n  None,\n  Single,\n  Multi,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\n@Injectable()\nexport class DatagridRenderOrganizer {\n  protected _renderStep: Subject<DatagridRenderStep> = new Subject<DatagridRenderStep>();\n  public get renderStep(): Observable<DatagridRenderStep> {\n    return this._renderStep.asObservable();\n  }\n\n  public filterRenderSteps(step: DatagridRenderStep) {\n    return this.renderStep.pipe(filter(testStep => step === testStep));\n  }\n\n  private alreadySized = false;\n\n  public resize() {\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_ON);\n    if (this.alreadySized) {\n      this._renderStep.next(DatagridRenderStep.CLEAR_WIDTHS);\n    }\n    this._renderStep.next(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS);\n    this._renderStep.next(DatagridRenderStep.ALIGN_COLUMNS);\n    this.alreadySized = true;\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_OFF);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridDisplayMode } from '../enums/display-mode.enum';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\n@Injectable()\nexport class DisplayModeService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  protected _view: BehaviorSubject<DatagridDisplayMode> = new BehaviorSubject<DatagridDisplayMode>(\n    DatagridDisplayMode.DISPLAY\n  );\n\n  constructor(renderOrganizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_ON)\n        .subscribe(() => this._view.next(DatagridDisplayMode.CALCULATE))\n    );\n\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_OFF)\n        .subscribe(() => this._view.next(DatagridDisplayMode.DISPLAY))\n    );\n  }\n\n  public get view(): Observable<DatagridDisplayMode> {\n    return this._view.asObservable();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Items } from './items';\nimport { SelectionType } from '../enums/selection-type';\n\nlet nbSelection: number = 0;\n\n@Injectable()\nexport class Selection<T = any> {\n  public id: string;\n  public preserveSelection: boolean = false;\n  private prevSelectionRefs: T[] = []; // Refs of selected items\n  private prevSingleSelectionRef: T; // Ref of single selected item\n\n  constructor(private _items: Items<T>, private _filters: FiltersProvider<T>) {\n    this.id = 'clr-dg-selection' + nbSelection++;\n\n    this.subscriptions.push(\n      this._filters.change.subscribe(() => {\n        if (!this._selectable || this.preserveSelection) {\n          return;\n        }\n        this.clearSelection();\n      })\n    );\n\n    this.subscriptions.push(\n      this._items.allChanges.subscribe(updatedItems => {\n        switch (this.selectionType) {\n          case SelectionType.None: {\n            break;\n          }\n\n          case SelectionType.Single: {\n            let newSingle: any;\n            const trackBy: TrackByFunction<T> = this._items.trackBy;\n            let selectionUpdated: boolean = false;\n\n            // if the currentSingle has been set before data was loaded, we look up and save the ref from current data set\n            if (this.currentSingle && !this.prevSingleSelectionRef) {\n              if (this._items.all && this._items.trackBy) {\n                const lookup = this._items.all.findIndex(maybe => maybe === this.currentSingle);\n                this.prevSingleSelectionRef = this._items.trackBy(lookup, this.currentSingle);\n              }\n            }\n\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              // If one of the updated items is the previously selectedSingle, set it as the new one\n              if (this.prevSingleSelectionRef === ref) {\n                newSingle = item;\n                selectionUpdated = true;\n              }\n            });\n\n            // If we're using smart datagrids, we expect all items to be present in the updatedItems array.\n            // Therefore, we should delete the currentSingle if it used to be defined but doesn't exist anymore.\n            // No explicit \"delete\" is required, since newSingle would be undefined at this point.\n            // Marking it as selectionUpdated here will set currentSingle to undefined below in the setTimeout.\n            if (this._items.smart && !newSingle) {\n              selectionUpdated = true;\n            }\n\n            // TODO: Discussed this with Eudes and this is fine for now.\n            // But we need to figure out a different pattern for the\n            // child triggering the parent change detection problem.\n            // Using setTimeout for now to fix this.\n            setTimeout(() => {\n              if (selectionUpdated) {\n                this.currentSingle = newSingle;\n              }\n            }, 0);\n            break;\n          }\n\n          case SelectionType.Multi: {\n            let leftOver: any[] = this.current.slice();\n            const trackBy: TrackByFunction<any> = this._items.trackBy;\n            let selectionUpdated: boolean = false;\n\n            // if the current has been set before data was loaded, we look up and save the ref from current data set\n            if (this.current.length > 0 && this.prevSelectionRefs.length !== this.current.length) {\n              if (this._items.all && this._items.trackBy) {\n                this.prevSelectionRefs = [];\n                this.current.forEach(item => {\n                  const lookup = this._items.all.findIndex(maybe => maybe === item);\n                  this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n                });\n              }\n            }\n\n            // TODO: revisit this when we work on https://github.com/vmware/clarity/issues/2342\n            // currently, the selection is cleared when filter is applied, so the logic inside\n            // the if statement below results in broken behavior.\n            if (leftOver.length > 0) {\n              updatedItems.forEach((item, index) => {\n                const ref = trackBy(index, item);\n                // Look in current selected refs array if item is selected, and update actual value\n                const selectedIndex = this.prevSelectionRefs.indexOf(ref);\n                if (selectedIndex > -1) {\n                  leftOver[selectedIndex] = item;\n                  selectionUpdated = true;\n                }\n              });\n\n              // Filter out any unmatched items if we're using smart datagrids where we expect all items to be\n              // present\n              if (this._items.smart) {\n                leftOver = leftOver.filter(selected => updatedItems.indexOf(selected) > -1);\n                if (this.current.length !== leftOver.length) {\n                  selectionUpdated = true;\n                }\n              }\n\n              // TODO: Discussed this with Eudes and this is fine for now.\n              // But we need to figure out a different pattern for the\n              // child triggering the parent change detection problem.\n              // Using setTimeout for now to fix this.\n              setTimeout(() => {\n                if (selectionUpdated) {\n                  this.current = leftOver;\n                }\n              }, 0);\n            }\n            break;\n          }\n\n          default: {\n            break;\n          }\n        }\n      })\n    );\n  }\n\n  public clearSelection(): void {\n    this.current.length = 0;\n    this.prevSelectionRefs = [];\n    this._currentSingle = null;\n    this.prevSingleSelectionRef = null;\n    this.emitChange();\n  }\n\n  private _selectionType: SelectionType = SelectionType.None;\n  public get selectionType(): SelectionType {\n    return this._selectionType;\n  }\n  public set selectionType(value: SelectionType) {\n    if (value === this.selectionType) {\n      return;\n    }\n    this._selectionType = value;\n    if (value === SelectionType.None) {\n      delete this.current;\n    } else {\n      this.updateCurrent([], false);\n    }\n  }\n\n  /** @deprecated since 2.0, remove in 3.0 */\n  public rowSelectionMode: boolean = false;\n\n  private get _selectable(): boolean {\n    return this._selectionType === SelectionType.Multi || this._selectionType === SelectionType.Single;\n  }\n  /**\n   * Ignore items changes in the same change detection cycle.\n   */\n  // tslint:disable-next-line\n  private debounce: boolean = false;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * The current selection in single selection type\n   */\n  private _currentSingle: T;\n  public get currentSingle(): T {\n    return this._currentSingle;\n  }\n  public set currentSingle(value: T) {\n    if (value === this._currentSingle) {\n      return;\n    }\n    this._currentSingle = value;\n    if (this._items.all && this._items.trackBy && value) {\n      const lookup = this._items.all.findIndex(maybe => maybe === value);\n      this.prevSingleSelectionRef = this._items.trackBy(lookup, value);\n    }\n    this.emitChange();\n    // Ignore items changes in the same change detection cycle.\n    // @TODO This can likely be removed!\n    this.debounce = true;\n    setTimeout(() => (this.debounce = false));\n  }\n\n  /**\n   * The current selection\n   */\n  private _current: T[];\n  public get current(): T[] {\n    return this._current;\n  }\n  public set current(value: T[]) {\n    this.updateCurrent(value, true);\n  }\n\n  public updateCurrent(value: T[], emit: boolean) {\n    this._current = value;\n    if (emit) {\n      this.emitChange();\n      // Ignore items changes in the same change detection cycle.\n      // @TODO This can likely be removed!\n      this.debounce = true;\n      setTimeout(() => (this.debounce = false));\n    }\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to selection changes\n   */\n  private _change = new Subject<T[] | T>();\n  private emitChange() {\n    if (this._selectionType === SelectionType.Single) {\n      this._change.next(this.currentSingle);\n    } else if (this._selectionType === SelectionType.Multi) {\n      this._change.next(this.current);\n    }\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[] | T> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Checks if an item is currently selected\n   */\n  public isSelected(item: T): boolean {\n    if (this._selectionType === SelectionType.Single) {\n      return this.currentSingle === item;\n    } else if (this._selectionType === SelectionType.Multi) {\n      return this.current.indexOf(item) >= 0;\n    }\n    return false;\n  }\n\n  /**\n   * Selects an item\n   */\n  private selectItem(item: T): void {\n    this.current.push(item);\n    if (this._items.trackBy) {\n      // Push selected ref onto array\n      const lookup = this._items.all.findIndex(maybe => maybe === item);\n      this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n    }\n  }\n\n  /**\n   * Deselects an item\n   */\n  private deselectItem(indexOfItem: number): void {\n    this.current.splice(indexOfItem, 1);\n    if (this._items.trackBy && indexOfItem < this.prevSelectionRefs.length) {\n      // Keep selected refs array in sync\n      this.prevSelectionRefs.splice(indexOfItem, 1);\n    }\n  }\n\n  /**\n   * Selects or deselects an item\n   */\n  public setSelected(item: T, selected: boolean) {\n    switch (this._selectionType) {\n      case SelectionType.None:\n        break;\n      case SelectionType.Single:\n        // in single selection, set currentSingle method should be used\n        break;\n      case SelectionType.Multi:\n        const index = this.current.indexOf(item);\n        if (index >= 0 && !selected) {\n          this.deselectItem(index);\n          this.emitChange();\n        } else if (index < 0 && selected) {\n          this.selectItem(item);\n          this.emitChange();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Checks if all currently displayed items are selected\n   */\n  public isAllSelected(): boolean {\n    if (this._selectionType !== SelectionType.Multi || !this._items.displayed) {\n      return false;\n    }\n    const displayedItems: T[] = this._items.displayed;\n    const nbDisplayed = this._items.displayed.length;\n    if (nbDisplayed < 1) {\n      return false;\n    }\n    const temp: T[] = displayedItems.filter(item => this.current.indexOf(item) > -1);\n    return temp.length === displayedItems.length;\n  }\n\n  /**\n   * Selects or deselects all currently displayed items\n   */\n  public toggleAll() {\n    if (this._selectionType === SelectionType.None || this._selectionType === SelectionType.Single) {\n      return;\n    }\n    /*\n         * If every currently displayed item is already selected, we clear them.\n         * If at least one item isn't selected, we select every currently displayed item.\n         */\n    if (this.isAllSelected()) {\n      this._items.displayed.forEach(item => {\n        const currentIndex = this.current.indexOf(item);\n        if (currentIndex > -1) {\n          this.deselectItem(currentIndex);\n        }\n      });\n    } else {\n      this._items.displayed.forEach(item => {\n        if (this.current.indexOf(item) < 0) {\n          this.selectItem(item);\n        }\n      });\n    }\n    this.emitChange();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridColumnChanges {\n  WIDTH,\n  HIDDEN,\n}\n\nexport const ALL_COLUMN_CHANGES: DatagridColumnChanges[] = Object.keys(DatagridColumnChanges)\n  .map(key => DatagridColumnChanges[key])\n  .filter(key => key === parseInt(key, 10)); // extracts only integer keys\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-row',\n  template: `        \n        <ng-template #rowPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedRow implements DynamicWrapper, AfterViewInit {\n  _dynamic = false;\n\n  @ViewChild('rowPortal', { static: false })\n  templateRef: TemplateRef<void>;\n  rowView: EmbeddedViewRef<void>; // the rows projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.rowView = this.templateRef.createEmbeddedView(null);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { ClrLoadingState } from '../../utils/loading/loading';\n\n@Injectable()\nexport class DatagridIfExpandService extends IfExpandService {\n  // due to the es5 spec if the set is overridden on base class the getter must also be overridden\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._animate.next();\n      this._expandChange.next(value);\n    }\n  }\n\n  loadingStateChange(state: ClrLoadingState) {\n    super.loadingStateChange(state);\n    if (state !== ClrLoadingState.LOADING) {\n      this._animate.next();\n    }\n  }\n\n  private _replace: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  get replace(): Observable<boolean> {\n    return this._replace.asObservable();\n  }\n\n  setReplace(replaceValue: boolean) {\n    this._replace.next(replaceValue);\n  }\n\n  private _animate: Subject<boolean> = new Subject<boolean>();\n  get animate(): Observable<boolean> {\n    return this._animate.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { combineLatest, Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { WrappedRow } from './wrapped-row';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\nimport { ClrExpandableAnimation } from '../../utils/animations/expandable-animation/expandable-animation';\n\nlet nbRow: number = 0;\n\n@Component({\n  selector: 'clr-dg-row',\n  templateUrl: './datagrid-row.html',\n  host: {\n    '[class.datagrid-row]': 'true',\n    '[class.datagrid-selected]': 'selected',\n    '[attr.aria-owns]': 'id',\n    role: 'rowgroup',\n  },\n  providers: [\n    DatagridIfExpandService,\n    { provide: IfExpandService, useExisting: DatagridIfExpandService },\n    { provide: LoadingListener, useExisting: DatagridIfExpandService },\n  ],\n})\nexport class ClrDatagridRow<T = any> implements AfterContentInit, AfterViewInit {\n  public id: string;\n  public radioId: string;\n  public checkboxId: string;\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ViewChild(ClrExpandableAnimation, { static: false })\n  expandAnimation: ClrExpandableAnimation;\n\n  /**\n   * Model of the row, to use for selection\n   */\n  @Input('clrDgItem') item: T;\n\n  public replaced;\n\n  public expandAnimationTrigger: boolean = false;\n\n  constructor(\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    public globalExpandable: ExpandableRowsCount,\n    public expand: DatagridIfExpandService,\n    private displayMode: DisplayModeService,\n    private vcr: ViewContainerRef,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    nbRow++;\n    this.id = 'clr-dg-row' + nbRow;\n    this.radioId = 'clr-dg-row-rd' + nbRow;\n    this.checkboxId = 'clr-dg-row-cb' + nbRow;\n\n    this.subscriptions.push(\n      combineLatest(this.expand.replace, this.expand.expandChange).subscribe(\n        ([expandReplaceValue, expandChangeValue]) => {\n          if (expandReplaceValue && expandChangeValue) {\n            // replaced and expanding\n            this.replaced = true;\n            this.renderer.addClass(this.el.nativeElement, 'datagrid-row-replaced');\n          } else {\n            this.replaced = false;\n            // Handles these cases: not replaced and collapsing & replaced and\n            // collapsing and not replaced and expanding.\n            this.renderer.removeClass(this.el.nativeElement, 'datagrid-row-replaced');\n          }\n        }\n      )\n    );\n  }\n\n  private _selected = false;\n  /**\n   * Indicates if the row is selected\n   */\n  public get selected() {\n    if (this.selection.selectionType === SelectionType.None) {\n      return this._selected;\n    } else {\n      return this.selection.isSelected(this.item);\n    }\n  }\n\n  @Input('clrDgSelected')\n  public set selected(value: boolean) {\n    if (this.selection.selectionType === SelectionType.None) {\n      this._selected = value;\n    } else {\n      this.selection.setSelected(this.item, value);\n    }\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<boolean>(false);\n\n  public toggle(selected = !this.selected) {\n    if (selected !== this.selected) {\n      this.selected = selected;\n      this.selectedChanged.emit(selected);\n    }\n  }\n\n  public get expanded() {\n    return this.expand.expanded;\n  }\n\n  @Input('clrDgExpanded')\n  public set expanded(value: boolean) {\n    this.expand.expanded = value;\n  }\n\n  @Output('clrDgExpandedChange') expandedChange = new EventEmitter<boolean>(false);\n\n  public toggleExpand() {\n    if (this.expand.expandable) {\n      this.expandAnimation.updateStartHeight();\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  /*****\n   * property dgCells\n   *\n   * @description\n   * A Query List of the ClrDatagrid cells in this row.\n   *\n   */\n  @ContentChildren(ClrDatagridCell) dgCells: QueryList<ClrDatagridCell>;\n\n  ngAfterContentInit() {\n    this.dgCells.changes.subscribe(() => {\n      this.dgCells.forEach(cell => {\n        this._scrollableCells.insert(cell._view);\n      });\n    });\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.displayMode.view.subscribe(viewChange => {\n        // Listen for view changes and move cells around depending on the current displayType\n        // remove cell views from display view\n        for (let i = this._scrollableCells.length; i > 0; i--) {\n          this._scrollableCells.detach();\n        }\n        // remove cell views from calculated view\n        for (let i = this._calculatedCells.length; i > 0; i--) {\n          this._calculatedCells.detach();\n        }\n        if (viewChange === DatagridDisplayMode.CALCULATE) {\n          this.displayCells = false;\n          this.dgCells.forEach(cell => {\n            this._calculatedCells.insert(cell._view);\n          });\n        } else {\n          this.displayCells = true;\n          this.dgCells.forEach(cell => {\n            this._scrollableCells.insert(cell._view);\n          });\n        }\n      }),\n      this.expand.animate.subscribe(() => {\n        this.expandAnimationTrigger = !this.expandAnimationTrigger;\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  public displayCells = false;\n\n  @ViewChild('stickyCells', { static: false, read: ViewContainerRef })\n  _stickyCells: ViewContainerRef;\n  @ViewChild('scrollableCells', { static: false, read: ViewContainerRef })\n  _scrollableCells: ViewContainerRef;\n  @ViewChild('calculatedCells', { static: false, read: ViewContainerRef })\n  _calculatedCells: ViewContainerRef;\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedRow, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedRow, this.vcr).rowView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DatagridPropertyComparator } from '../built-in/comparators/datagrid-property-comparator';\nimport { ClrDatagridStateInterface } from '../interfaces/state.interface';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n/**\n * This provider aggregates state changes from the various providers of the Datagrid\n */\n@Injectable()\nexport class StateProvider<T> {\n  constructor(\n    private filters: FiltersProvider<T>,\n    private sort: Sort<T>,\n    private page: Page,\n    private debouncer: StateDebouncer\n  ) {}\n\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  change: Observable<ClrDatagridStateInterface<T>> = this.debouncer.change.pipe(map(() => this.state));\n\n  /*\n     * By making this a getter, we open the possibility for a setter in the future.\n     * It's been requested a couple times.\n     */\n  get state(): ClrDatagridStateInterface<T> {\n    const state: ClrDatagridStateInterface<T> = {};\n    if (this.page.size > 0) {\n      state.page = {\n        from: this.page.firstItem,\n        to: this.page.lastItem,\n        size: this.page.size,\n        current: this.page.current,\n      };\n    }\n    if (this.sort.comparator) {\n      if (this.sort.comparator instanceof DatagridPropertyComparator) {\n        /*\n                 * Special case for the default object property comparator,\n                 * we give the property name instead of the actual comparator.\n                 */\n        state.sort = { by: (<DatagridPropertyComparator<T>>this.sort.comparator).prop, reverse: this.sort.reverse };\n      } else {\n        state.sort = { by: this.sort.comparator, reverse: this.sort.reverse };\n      }\n    }\n\n    const activeFilters = this.filters.getActiveFilters();\n    if (activeFilters.length > 0) {\n      state.filters = [];\n      for (const filter of activeFilters) {\n        if (filter.state) {\n          state.filters.push(filter.state);\n        } else {\n          state.filters.push(filter);\n        }\n      }\n    }\n    return state;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n/**\n * @description\n * Internal datagrid service that holds a reference to the clr-dg-table element and exposes a method to get height.\n */\n@Injectable()\nexport class TableSizeService {\n  private _tableRef: HTMLElement;\n\n  public get tableRef(): HTMLElement {\n    return this._tableRef;\n  }\n\n  public set tableRef(element: HTMLElement) {\n    this._tableRef = element;\n  }\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n  public set table(table: ElementRef) {\n    if (isPlatformBrowser(this.platformId) && table.nativeElement) {\n      this.tableRef = table.nativeElement.querySelector('.datagrid-table');\n    }\n  }\n\n  // Used when resizing columns to show the column border being dragged.\n  getColumnDragHeight(): string {\n    if (!this.tableRef) {\n      return;\n    }\n    return `${this.tableRef.clientHeight}px`;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnStateDiff, ColumnState } from '../interfaces/column-state.interface';\n\n@Injectable()\nexport class ColumnsService {\n  columns: BehaviorSubject<ColumnState>[] = [];\n\n  get columnStates(): ColumnState[] {\n    return this.columns.map(column => column.value);\n  }\n\n  get hasHideableColumns(): boolean {\n    return this.columnStates.filter(state => state.hideable).length > 0;\n  }\n\n  // Helper method to emit a change to a column only when there is an actual diff to process for that column\n  emitStateChangeAt(columnIndex: number, diff: ColumnStateDiff) {\n    if (!this.columns[columnIndex]) {\n      return;\n    }\n    this.emitStateChange(this.columns[columnIndex], diff);\n  }\n\n  emitStateChange(column: BehaviorSubject<ColumnState>, diff: ColumnStateDiff) {\n    const current = column.value;\n    column.next({ ...current, ...diff });\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { ClrDatagridStateInterface } from './interfaces/state.interface';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { FiltersProvider } from './providers/filters';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { Items } from './providers/items';\nimport { Page } from './providers/page';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { Sort } from './providers/sort';\nimport { StateDebouncer } from './providers/state-debouncer.provider';\nimport { StateProvider } from './providers/state.provider';\nimport { TableSizeService } from './providers/table-size.service';\nimport { DatagridRenderOrganizer } from './render/render-organizer';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\n\n@Component({\n  selector: 'clr-datagrid',\n  templateUrl: './datagrid.html',\n  providers: [\n    Selection,\n    Sort,\n    FiltersProvider,\n    Page,\n    Items,\n    DatagridRenderOrganizer,\n    RowActionService,\n    ExpandableRowsCount,\n    StateDebouncer,\n    StateProvider,\n    TableSizeService,\n    ColumnsService,\n    DisplayModeService,\n  ],\n  host: { '[class.datagrid-host]': 'true' },\n})\nexport class ClrDatagrid<T = any> implements AfterContentInit, AfterViewInit, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    public items: Items<T>,\n    public expandableRows: ExpandableRowsCount,\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    private stateProvider: StateProvider<T>,\n    private displayMode: DisplayModeService,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private page: Page,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  /**\n   * Freezes the datagrid while data is loading\n   */\n  public get loading(): boolean {\n    return this.items.loading;\n  }\n\n  @Input('clrDgLoading')\n  public set loading(value: boolean) {\n    this.items.loading = value;\n  }\n\n  /**\n   * Output emitted whenever the data needs to be refreshed, based on user action or external ones\n   */\n  @Output('clrDgRefresh') public refresh = new EventEmitter<ClrDatagridStateInterface<T>>(false);\n\n  /**\n   * Public method to re-trigger the computation of displayed items manually\n   */\n  public dataChanged() {\n    this.items.refresh();\n  }\n\n  /**\n   * We grab the smart iterator from projected content\n   */\n  @ContentChild(ClrDatagridItems, { static: false })\n  public iterator: ClrDatagridItems<T>;\n\n  /**\n   * Array of all selected items\n   */\n  @Input('clrDgSelected')\n  set selected(value: T[]) {\n    if (value) {\n      this.selection.selectionType = SelectionType.Multi;\n    } else {\n      this.selection.selectionType = SelectionType.None;\n    }\n    this.selection.updateCurrent(value, false);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<T[]>(false);\n\n  /**\n   * Selected item in single-select mode\n   */\n  @Input('clrDgSingleSelected')\n  set singleSelected(value: T) {\n    this.selection.selectionType = SelectionType.Single;\n    // the clrDgSingleSelected is updated in one of two cases:\n    // 1. an explicit value is passed\n    // 2. is being set to null or undefined, where previously it had a value\n    if (value) {\n      this.selection.currentSingle = value;\n    } else if (this.selection.currentSingle) {\n      this.selection.currentSingle = null;\n    }\n  }\n\n  @Output('clrDgSingleSelectedChange') singleSelectedChanged = new EventEmitter<T>(false);\n\n  @Input() clrDgSingleSelectionAriaLabel: string = this.commonStrings.keys.singleSelectionAriaLabel;\n  @Input() clrDgSingleActionableAriaLabel: string = this.commonStrings.keys.singleActionableAriaLabel;\n  @Input() clrDetailExpandableAriaLabel: string = this.commonStrings.keys.detailExpandableAriaLabel;\n\n  @Input()\n  set clrDgPreserveSelection(state: boolean) {\n    this.selection.preserveSelection = state;\n  }\n  /**\n   * @deprecated since 2.0, remove in 3.0\n   *\n   * Selection/Deselection on row click mode\n   */\n  @Input('clrDgRowSelection')\n  set rowSelectionMode(value: boolean) {\n    this.selection.rowSelectionMode = value;\n  }\n\n  /**\n   * Indicates if all currently displayed items are selected\n   */\n  public get allSelected() {\n    return this.selection.isAllSelected();\n  }\n\n  /**\n   * Selects/deselects all currently displayed items\n   * @param value\n   */\n  public set allSelected(value: boolean) {\n    /*\n         * This is a setter but we ignore the value.\n         * It's strange, but it lets us have an indeterminate state where only\n         * some of the items are selected.\n         */\n    this.selection.toggleAll();\n  }\n\n  /**\n   * Custom placeholder detection\n   */\n  @ContentChild(ClrDatagridPlaceholder, { static: false })\n  public placeholder: ClrDatagridPlaceholder<T>;\n\n  /**\n   * Hideable Column data source / detection.\n   */\n  @ContentChildren(ClrDatagridColumn) public columns: QueryList<ClrDatagridColumn<T>>;\n\n  /**\n   * When the datagrid is user-managed without the smart iterator, we get the items displayed\n   * by querying the projected content. This is needed to keep track of the models currently\n   * displayed, typically for selection.\n   */\n\n  @ContentChildren(ClrDatagridRow) rows: QueryList<ClrDatagridRow<T>>;\n  @ViewChild('scrollableColumns', { static: false, read: ViewContainerRef })\n  scrollableColumns: ViewContainerRef;\n\n  @ViewChild('datagridTable', { static: false, read: ElementRef })\n  datagridTable: ElementRef;\n\n  ngAfterContentInit() {\n    if (!this.items.smart) {\n      this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n    }\n\n    this._subscriptions.push(\n      this.rows.changes.subscribe(() => {\n        if (!this.items.smart) {\n          this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n        }\n        this.rows.forEach(row => {\n          this._displayedRows.insert(row._view);\n        });\n      })\n    );\n  }\n\n  /**\n   * Our setup happens in the view of some of our components, so we wait for it to be done before starting\n   */\n  ngAfterViewInit() {\n    // TODO: determine if we can get rid of provider wiring in view init so that subscriptions can be done earlier\n    this.refresh.emit(this.stateProvider.state);\n    this._subscriptions.push(\n      this.stateProvider.change.subscribe(state => this.refresh.emit(state)),\n      this.selection.change.subscribe(s => {\n        if (this.selection.selectionType === SelectionType.Single) {\n          this.singleSelectedChanged.emit(<T>s);\n        } else if (this.selection.selectionType === SelectionType.Multi) {\n          this.selectedChanged.emit(<T[]>s);\n        }\n      }),\n      this.page.change.subscribe(() => {\n        this.datagridTable.nativeElement.focus();\n      }),\n      // A subscription that listens for displayMode changes on the datagrid\n      this.displayMode.view.subscribe(viewChange => {\n        // Remove any projected columns from the projectedDisplayColumns container\n        for (let i = this._projectedDisplayColumns.length; i > 0; i--) {\n          this._projectedDisplayColumns.detach();\n        }\n        // Remove any projected columns from the projectedCalculationColumns container\n        for (let i = this._projectedCalculationColumns.length; i > 0; i--) {\n          this._projectedCalculationColumns.detach();\n        }\n        // Remove any projected rows from the calculationRows container\n        for (let i = this._calculationRows.length; i > 0; i--) {\n          this._calculationRows.detach();\n        }\n        // Remove any projected rows from the displayedRows container\n        for (let i = this._displayedRows.length; i > 0; i--) {\n          this._displayedRows.detach();\n        }\n        if (viewChange === DatagridDisplayMode.DISPLAY) {\n          // Set state, style for the datagrid to DISPLAY and insert row & columns into containers\n          this.renderer.removeClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedDisplayColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._displayedRows.insert(row._view);\n          });\n        } else {\n          // Set state, style for the datagrid to CALCULATE and insert row & columns into containers\n          this.renderer.addClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedCalculationColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._calculationRows.insert(row._view);\n          });\n        }\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  resize(): void {\n    this.organizer.resize();\n  }\n\n  @ViewChild('projectedDisplayColumns', { static: false, read: ViewContainerRef })\n  _projectedDisplayColumns: ViewContainerRef;\n  @ViewChild('projectedCalculationColumns', { static: false, read: ViewContainerRef })\n  _projectedCalculationColumns: ViewContainerRef;\n  @ViewChild('displayedRows', { static: false, read: ViewContainerRef })\n  _displayedRows: ViewContainerRef;\n  @ViewChild('calculationRows', { static: false, read: ViewContainerRef })\n  _calculationRows: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-action-bar',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: { '[class.datagrid-action-bar]': 'true' },\n})\nexport class ClrDatagridActionBar {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Inject, Input, OnDestroy, Output, NgZone, PLATFORM_ID } from '@angular/core';\n\nimport { RowActionService } from './providers/row-action-service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { Subscription } from 'rxjs';\n\nlet clrDgActionId = 0;\n\n@Component({\n  selector: 'clr-dg-action-overflow',\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverToggleService, ClrPopoverEventsService, ClrPopoverPositionService],\n  template: `\n      <button class=\"datagrid-action-toggle\"\n              type=\"button\"\n              role=\"button\"\n              aria-haspopup=\"true\"\n              #anchor\n              [attr.aria-controls]=\"popoverId\"\n              [attr.aria-expanded]=\"open\"\n              [attr.aria-label]=\"commonStrings.keys.rowActions\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton>\n          <clr-icon shape=\"ellipsis-vertical\" [attr.title]=\"commonStrings.keys.rowActions\"></clr-icon>\n      </button>\n\n      <div class=\"datagrid-action-overflow\"\n           role=\"menu\"\n           [id]=\"popoverId\"\n           [attr.aria-hidden]=\"!open\"\n           [attr.id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"open at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <ng-content></ng-content>\n      </div>\n  `,\n})\nexport class ClrDatagridActionOverflow implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.CENTER,\n  };\n\n  constructor(\n    private rowActionService: RowActionService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private zone: NgZone,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    this.rowActionService.register();\n    this.subscriptions.push(\n      this.smartToggleService.openChange.subscribe(openState => {\n        this.open = openState;\n        if (openState) {\n          this.focusFirstButton();\n        }\n      })\n    );\n    this.popoverId = 'clr-action-menu' + clrDgActionId++;\n  }\n\n  ngOnDestroy() {\n    this.rowActionService.unregister();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private _open: boolean = false;\n  public get open() {\n    return this._open;\n  }\n\n  private focusFirstButton(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          const firstButton: HTMLButtonElement = document.querySelector('button.action-item');\n          if (firstButton) {\n            firstButton.focus();\n          }\n        });\n      });\n    }\n  }\n\n  @Input('clrDgActionOverflowOpen')\n  public set open(open: boolean) {\n    const openState = !!open;\n    if (!!openState !== this.open) {\n      // prevents chocolate mess\n      this.smartToggleService.open = openState;\n      this.openChange.emit(openState);\n      this._open = openState;\n    }\n  }\n\n  @Output('clrDgActionOverflowOpenChange') public openChange = new EventEmitter<boolean>(false);\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ElementRef, Injectable } from '@angular/core';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../../../utils/drag-and-drop/drag-event';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\nconst MIN_COLUMN_WIDTH = 96;\n\n// This service allows DatagridHeaderRenderer and ClrDatagridColumnSeparator\n// to share column resize data with each other.\n\n@Injectable()\nexport class ColumnResizerService {\n  constructor(private el: ElementRef, private domAdapter: DomAdapter, private organizer: DatagridRenderOrganizer) {}\n\n  private widthBeforeResize: number;\n\n  private _resizedBy: number = 0;\n\n  public get resizedBy() {\n    return this._resizedBy;\n  }\n\n  // is it within the maximum resize range to the left\n  public isWithinMaxResizeRange: boolean;\n\n  public get minColumnWidth() {\n    return this.domAdapter.minWidth(this.el.nativeElement) || MIN_COLUMN_WIDTH;\n  }\n\n  public get maxResizeRange() {\n    return this.widthBeforeResize - this.minColumnWidth;\n  }\n\n  public startResize(): void {\n    this._resizedBy = 0;\n    this.isWithinMaxResizeRange = true;\n    this.widthBeforeResize = this.domAdapter.clientRect(this.el.nativeElement).width;\n  }\n\n  public endResize(): void {\n    this.organizer.resize();\n  }\n\n  public get widthAfterResize(): number {\n    return this.widthBeforeResize + this._resizedBy;\n  }\n\n  public calculateResize(event: ClrDragEvent<any>): void {\n    const moveX = event.dragPosition.moveX;\n    // returns the resize amount within the allowed range\n    if (moveX < -this.maxResizeRange) {\n      this._resizedBy = -this.maxResizeRange;\n      this.isWithinMaxResizeRange = false;\n    } else {\n      this._resizedBy = moveX;\n      this.isWithinMaxResizeRange = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Renderer2 } from '@angular/core';\n\nimport { ClrDragEvent } from '../../utils/drag-and-drop/drag-event';\nimport { ColumnResizerService } from './providers/column-resizer.service';\nimport { TableSizeService } from './providers/table-size.service';\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-dg-column-separator',\n  template: `\n    <div class=\"datagrid-column-handle\" aria-hidden=\"true\"\n      clrDraggable \n      [clrGroup]=\"columnSeparatorId\" \n      (clrDragStart)=\"showTracker(resizeTrackerEl)\" \n      (clrDragMove)=\"moveTracker($event, resizeTrackerEl)\" \n      (clrDragEnd)=\"hideTracker(resizeTrackerEl)\"></div>\n    <div class=\"datagrid-column-resize-tracker\" #resizeTrackerEl></div>\n    `,\n  host: {\n    '[class.datagrid-column-separator]': 'true',\n  },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrDatagridColumnSeparator {\n  // Every column draggable separator should have its own unique ID\n  // in order to not conflict with other draggables/droppables.\n  constructor(\n    private columnResizerService: ColumnResizerService,\n    private renderer: Renderer2,\n    private tableSizeService: TableSizeService,\n    @Inject(DOCUMENT) private document: any,\n    @Inject(UNIQUE_ID) public columnSeparatorId: string\n  ) {}\n\n  public showTracker(resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.startResize();\n    const tableHeight = this.tableSizeService.getColumnDragHeight();\n    this.renderer.setStyle(resizeTrackerEl, 'height', tableHeight);\n    this.renderer.setStyle(resizeTrackerEl, 'display', 'block');\n  }\n\n  public moveTracker(event: ClrDragEvent<any>, resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.calculateResize(event);\n    this.renderer.setStyle(resizeTrackerEl, 'transform', `translateX(${this.columnResizerService.resizedBy}px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'col-resize');\n    this.redFlagTracker(resizeTrackerEl);\n  }\n\n  public hideTracker(resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.endResize();\n    this.renderer.setStyle(resizeTrackerEl, 'display', 'none');\n    this.renderer.setStyle(resizeTrackerEl, 'transform', `translateX(0px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'auto');\n  }\n\n  private redFlagTracker(resizeTrackerEl: HTMLElement) {\n    let isWithinMaxResizeRange: boolean;\n    // @TODO(JEREMY) Review this, it will always be true because above is always null\n    if (isWithinMaxResizeRange !== this.columnResizerService.isWithinMaxResizeRange) {\n      isWithinMaxResizeRange = this.columnResizerService.isWithinMaxResizeRange;\n      if (!isWithinMaxResizeRange) {\n        this.renderer.addClass(resizeTrackerEl, 'exceeded-max');\n      } else {\n        this.renderer.removeClass(resizeTrackerEl, 'exceeded-max');\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-column-toggle-title',\n  template: `<ng-content></ng-content>`,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleTitle {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\n\n@Component({\n  selector: 'clr-dg-column-toggle-button',\n  template: `\n    <button class=\"btn btn-sm btn-link switch-button\"\n            (click)=\"selectAll()\"\n            [disabled]=\"allHideablesVisible\"\n            type=\"button\">\n      <ng-content></ng-content>\n    </button>\n  `,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleButton {\n  constructor(private columnsService: ColumnsService) {}\n\n  private allSelected: Subject<boolean> = new EventEmitter();\n\n  @Output('clrAllSelected')\n  get clrAllSelected(): Observable<boolean> {\n    return this.allSelected.asObservable();\n  }\n\n  private hideableColumns(): BehaviorSubject<ColumnState>[] {\n    return this.columnsService.columns.filter(column => column.value.hideable);\n  }\n\n  get allHideablesVisible() {\n    return this.hideableColumns().filter(column => column.value.hidden).length === 0;\n  }\n\n  selectAll() {\n    this.hideableColumns().forEach(hideableColumn =>\n      this.columnsService.emitStateChange(hideableColumn, {\n        hidden: false,\n        changes: [DatagridColumnChanges.HIDDEN],\n      })\n    );\n    this.allSelected.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Inject, ContentChild, ElementRef, NgZone, PLATFORM_ID, ViewChild } from '@angular/core';\n\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\n\n@Component({\n  selector: 'clr-dg-column-toggle',\n  template: `    \n      <button\n              role=\"button\"\n              type=\"button\"\n              class=\"btn btn-sm btn-link column-toggle--action\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton\n              [attr.aria-controls]=\"popoverId\"\n              [attr.aria-owns]=\"popoverId\">\n          <clr-icon shape=\"view-columns\" [attr.title]=\"commonStrings.keys.pickColumns\"></clr-icon>\n      </button>\n      <div class=\"column-switch\"\n           role=\"dialog\"\n           [id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"openState at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <div class=\"switch-header\">\n              <div class=\"clr-sr-only\" tabindex=\"-1\" #menuDescription>{{commonStrings.keys.showColumnsMenuDescription}}</div>\n              <div class=\"clr-sr-only\" tabindex=\"-1\" #allSelected>{{commonStrings.keys.allColumnsSelected}}</div>\n              <ng-container *ngIf=\"!customToggleTitle\">{{commonStrings.keys.showColumns}}</ng-container>\n              <ng-content select=\"clr-dg-column-toggle-title\"></ng-content>\n              <button class=\"btn btn-sm btn-link toggle-switch-close-button\"\n                      clrPopoverCloseButton\n                      type=\"button\"\n                      [attr.aria-label]=\"commonStrings.keys.close\">\n                  <clr-icon shape=\"close\" \n                            [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n          <ul class=\"switch-content list-unstyled\">\n              <li *ngFor=\"let columnState of hideableColumnStates;trackBy: trackByFn\">\n                  <clr-checkbox-wrapper>\n                      <input clrCheckbox type=\"checkbox\"\n                             [disabled]=\"hasOnlyOneVisibleColumn && !columnState.hidden\"\n                             [ngModel]=\"!columnState.hidden\"\n                             (ngModelChange)=\"toggleColumnState(columnState, !$event)\">\n                      <label>\n                          <ng-template [ngTemplateOutlet]=\"columnState.titleTemplateRef\"></ng-template>\n                      </label>\n                  </clr-checkbox-wrapper>\n              </li>\n          </ul>\n          <div class=\"switch-footer\">\n              <ng-content select=\"clr-dg-column-toggle-button\"></ng-content>\n              <clr-dg-column-toggle-button *ngIf=\"!customToggleButton\" (clrAllSelected)=\"allColumnsSelected()\">\n                  {{commonStrings.keys.selectAll}}\n              </clr-dg-column-toggle-button>\n          </div>\n      </div>\n  `,\n  host: { '[class.column-switch-wrapper]': 'true', '[class.active]': 'openState' },\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverEventsService, ClrPopoverPositionService, ClrPopoverToggleService],\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggle {\n  private _allColumnsVisible: boolean;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n  public openState;\n\n  @ContentChild(ClrDatagridColumnToggleTitle, { static: false })\n  customToggleTitle: ClrDatagridColumnToggleTitle;\n  @ContentChild(ClrDatagridColumnToggleButton, { static: false })\n  customToggleButton: ClrDatagridColumnToggleButton;\n  @ViewChild('menuDescription', { read: ElementRef, static: false })\n  private menuDescriptionElement: ElementRef<HTMLElement>;\n  @ViewChild('allSelected', { read: ElementRef, static: false })\n  private allSelectedElement: ElementRef<HTMLElement>;\n\n  public get allColumnsVisible(): boolean {\n    return this._allColumnsVisible;\n  }\n\n  public set allColumnsVisible(value: boolean) {\n    this._allColumnsVisible = value;\n  }\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private columnsService: ColumnsService,\n    @Inject(UNIQUE_ID) public columnSwitchId: string,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private zone: NgZone,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {}\n\n  get hideableColumnStates(): ColumnState[] {\n    const hideables = this.columnsService.columns.filter(column => column.value.hideable);\n    return hideables.map(column => column.value);\n  }\n\n  get hasOnlyOneVisibleColumn(): boolean {\n    const nbNonHideableColumns = this.columnsService.columns.length - this.hideableColumnStates.length;\n    // this should only return true when there is no non-hideable columns.\n    return (\n      nbNonHideableColumns === 0 && this.hideableColumnStates.filter(columnState => !columnState.hidden).length === 1\n    );\n  }\n\n  toggleColumnState(columnState: ColumnState, event: boolean) {\n    const columnToToggle = this.columnsService.columns.filter(column => column.value === columnState)[0];\n    this.columnsService.emitStateChange(columnToToggle, {\n      hidden: event,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  toggleSwitchPanel() {\n    this.openState = !this.openState;\n    if (this.openState && isPlatformBrowser(this.platformId) && this.menuDescriptionElement) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.menuDescriptionElement.nativeElement.focus();\n        });\n      });\n    }\n  }\n\n  allColumnsSelected() {\n    this.allSelectedElement.nativeElement.focus();\n  }\n\n  // Without tracking the checkboxes get rerendered on model update, which leads\n  // to loss of focus after checkbox toggle.\n  trackByFn(index) {\n    return index;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Optional } from '@angular/core';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\n\n/*\n * I don't think this deserves to be in IfExpanded itself,\n * so I'm adding a second directive on the same selector for now just for the datagrid\n */\n@Directive({ selector: '[clrIfExpanded]' })\nexport class DatagridDetailRegisterer {\n  constructor(@Optional() private expandableRowsCount: ExpandableRowsCount) {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.register();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.unregister();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild } from '@angular/core';\n\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\n\n@Component({\n  selector: 'clr-dg-footer',\n  template: `\n        <ng-container\n            *ngIf=\"(selection.selectionType === SELECTION_TYPE.Multi) && (selection.current.length > 0)\">\n          <div class=\"clr-form-control-disabled\">\n              <clr-checkbox-wrapper class=\"datagrid-footer-select\">\n                <input clrCheckbox type=\"checkbox\" checked=\"checked\" disabled>\n                <label>{{selection.current.length}}</label>\n            </clr-checkbox-wrapper>\n          </div>\n        </ng-container>\n        <ng-content select=\"clr-dg-column-toggle\"></ng-content>\n        <clr-dg-column-toggle *ngIf=\"hasHideableColumns && !toggle\"></clr-dg-column-toggle>\n        <div class=\"datagrid-footer-description\">\n            <ng-content></ng-content>\n        </div>\n        <ng-content select=\"clr-dg-pagination\"></ng-content>\n    `,\n  host: {\n    '[class.datagrid-footer]': 'true',\n  },\n})\nexport class ClrDatagridFooter<T = any> {\n  constructor(public selection: Selection<T>, private columnsService: ColumnsService) {}\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ContentChild(ClrDatagridColumnToggle, { static: false })\n  toggle: ClrDatagridColumnToggle;\n\n  get hasHideableColumns(): boolean {\n    return this.columnsService.hasHideableColumns;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnState } from '../interfaces/column-state.interface';\n\nexport const COLUMN_STATE = new InjectionToken<ColumnState>('COLUMN_STATE');\n\nexport function columnStateFactory() {\n  return new BehaviorSubject<ColumnState>({\n    changes: [],\n  });\n}\n\nexport const COLUMN_STATE_PROVIDER = {\n  provide: COLUMN_STATE,\n  useFactory: columnStateFactory,\n};\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// TODO: I'd like this to be a CheckedState enum for the checkboxes in the future.\nexport enum ClrSelectedState {\n  // WARNING! Unselected has the value 0,\n  // so it's actually the only one that will evaluate to false if cast to a boolean.\n  // Don't mess with the order!\n  UNSELECTED = 0,\n  SELECTED,\n  INDETERMINATE,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { COLUMN_STATE } from './providers/column-state.provider';\n\n@Directive({ selector: '[clrDgHideableColumn]' })\n\n/**\n *\n * @description\n * A structural directive meant to be used inside a clr-dg-column component.\n *\n * <clr-dg-column>\n *       <ng-container *clrDgHideableColumn=\"{ hidden: true }\">\n *           User ID\n *       </ng-container>\n *   </clr-dg-column>\n *\n * It sets up state and properties so that columns can be manges for hide/show by a service and an internal\n * datagrid toggle component.\n *\n */\nexport class ClrDatagridHideableColumn implements OnDestroy {\n  /**\n   *\n   * @description\n   * Used to initialize the column with either hidden or visible state.\n   *\n   */\n  private _hidden: boolean;\n\n  /**\n   *\n   * @description\n   * Setter fn for the @Input with the same name as this structural directive.\n   * It allows the user to pre-configure the column's hide/show state. { hidden: true }\n   * It's more verbose but has more Clarity.\n   *\n   *\n   * @example\n   * *clrDgHideableColumn\n   * *clrDgHideableColumn={hidden: false}\n   * *clrDgHideableColumn={hidden: true}\n   *\n   */\n  @Input('clrDgHideableColumn')\n  set clrDgHideableColumn(value: { hidden: boolean }) {\n    this.clrDgHidden = value && value.hidden ? value.hidden : false;\n  }\n\n  @Input('clrDgHidden')\n  set clrDgHidden(hidden: boolean) {\n    this._hidden = hidden ? hidden : false;\n    this.columnsService.emitStateChange(this.columnState, {\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  @Output('clrDgHiddenChange') public hiddenChange = new EventEmitter<boolean>();\n\n  constructor(\n    private titleTemplateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef,\n    private columnsService: ColumnsService,\n    @Optional()\n    @Inject(COLUMN_STATE)\n    private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.viewContainerRef.createEmbeddedView(this.titleTemplateRef);\n\n    if (!this.columnState) {\n      throw new Error('The *clrDgHideableColumn directive can only be used inside of a clr-dg-column component.');\n    }\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnInit() {\n    this.columnsService.emitStateChange(this.columnState, {\n      hideable: true,\n      titleTemplateRef: this.titleTemplateRef,\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n\n    this.subscriptions.push(\n      this.columnState.subscribe((state: ColumnState) => {\n        if (state.changes && state.changes.indexOf(DatagridColumnChanges.HIDDEN) > -1) {\n          this.hiddenChange.emit(state.hidden); // Can emit through @Output when desugared syntax is used\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TrackByFunction } from '@angular/core';\n\nimport { Items } from './providers/items';\n\n@Directive({\n  selector: '[ngForTrackBy]',\n})\nexport class ClrDatagridItemsTrackBy<T = any> {\n  constructor(@Optional() private _items: Items<T>) {}\n\n  @Input('ngForTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    if (this._items) {\n      this._items.trackBy = value;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input } from '@angular/core';\nimport { Page } from './providers/page';\n\n@Component({\n  selector: 'clr-dg-page-size',\n  template: `\n    <ng-content></ng-content>\n    <div class=\"clr-select-wrapper\">\n      <select [class.clr-page-size-select]=\"true\" [(ngModel)]=\"page.size\">\n        <option *ngFor=\"let option of pageSizeOptions\" [ngValue]=\"option\">{{option}}</option>\n      </select>\n    </div>\n  `,\n})\nexport class ClrDatagridPageSize {\n  @Input('clrPageSizeOptions') pageSizeOptions: number[];\n\n  constructor(public page: Page) {}\n\n  ngOnInit() {\n    if (!this.pageSizeOptions || this.pageSizeOptions.length === 0) {\n      this.pageSizeOptions = [this.page.size];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Page } from './providers/page';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-dg-pagination',\n  template: `\n    <div class=\"pagination-size\" *ngIf=\"_pageSizeComponent\">\n      <ng-content select=\"clr-dg-page-size\"></ng-content>\n    </div>\n    <div class=\"pagination-description\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"pagination-list\" *ngIf=\"page.last > 1\">\n      <button\n        type=\"button\" \n        class=\"pagination-first\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = 1\"\n        [attr.aria-label]=\"commonStrings.keys.firstPage\"\n        >\n        <clr-icon shape=\"step-forward-2 down\"></clr-icon>\n      </button>\n      <button \n        type=\"button\"\n        class=\"pagination-previous\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = page.current - 1\"\n        [attr.aria-label]=\"commonStrings.keys.previousPage\"\n        >\n        <clr-icon shape=\"angle left\"></clr-icon>\n      </button>\n        <input\n          *ngIf=\"!disableCurrentPageInput; else readOnly\"\n          #currentPageInput \n          type=\"text\" \n          class=\"pagination-current clr-input\" \n          [size]=\"page.last.toString().length\" \n          [value]=\"page.current\"\n          (keydown.enter)=\"updateCurrentPage($event)\" \n          (blur)=\"updateCurrentPage($event)\"\n          [attr.aria-label]=\"commonStrings.keys.currentPage\"\n          />\n          <ng-template #readOnly>\n            <span>{{ page.current }}</span>\n          </ng-template>\n\n          &nbsp;/&nbsp;<span [attr.aria-label]=\"commonStrings.keys.totalPages\">{{page.last}}</span>\n      <button \n        type=\"button\"\n        class=\"pagination-next\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.current + 1\"\n        [attr.aria-label]=\"commonStrings.keys.nextPage\"\n        >\n        <clr-icon shape=\"angle right\"></clr-icon>\n      </button>\n      <button \n        type=\"button\" \n        class=\"pagination-last\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.last\"\n        [attr.aria-label]=\"commonStrings.keys.lastPage\"\n        >\n        <clr-icon shape=\"step-forward-2 up\"></clr-icon>\n      </button>\n    </div>\n    `,\n  host: { '[class.pagination]': 'true' },\n})\nexport class ClrDatagridPagination implements OnDestroy, OnInit {\n  @ContentChild(ClrDatagridPageSize, { static: false })\n  _pageSizeComponent: ClrDatagridPageSize;\n  @ViewChild('currentPageInput', { static: false })\n  currentPageInputRef: ElementRef;\n\n  constructor(public page: Page, public commonStrings: ClrCommonStringsService) {\n    this.page.activated = true;\n  }\n\n  /**********\n   * Subscription to the Page service for page changes.\n   * Note: this only emits after the datagrid is initialized/stabalized and the page changes.\n   */\n  ngOnInit() {\n    /*\n     * Default page size is 10.\n     * The reason we set it here and not in the provider itself is because\n     * we don't want pagination if this component isn't present in the datagrid.\n     */\n    if (!this.page.size) {\n      this.page.size = 10;\n    }\n    this._pageSubscription = this.page.change.subscribe(current => this.currentChanged.emit(current));\n  }\n\n  /**\n   * Subscription to the page service changes\n   */\n  private _pageSubscription: Subscription;\n\n  ngOnDestroy() {\n    this.page.resetPageSize(true);\n    if (this._pageSubscription) {\n      this._pageSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Page size\n   */\n  public get pageSize(): number {\n    return this.page.size;\n  }\n\n  @Input('clrDgPageInputDisabled') public disableCurrentPageInput: boolean;\n\n  @Input('clrDgPageSize')\n  public set pageSize(size: number) {\n    if (typeof size === 'number') {\n      this.page.size = size;\n    }\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  public get totalItems(): number {\n    return this.page.totalItems;\n  }\n\n  @Input('clrDgTotalItems')\n  public set totalItems(total: number) {\n    if (typeof total === 'number') {\n      this.page.totalItems = total;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  public get lastPage(): number {\n    return this.page.last;\n  }\n\n  @Input('clrDgLastPage')\n  public set lastPage(last: number) {\n    if (typeof last === 'number') {\n      this.page.last = last;\n    }\n  }\n\n  /**\n   * Current page\n   */\n  public get currentPage(): number {\n    return this.page.current;\n  }\n\n  @Input('clrDgPage')\n  public set currentPage(page: number) {\n    if (typeof page === 'number') {\n      this.page.current = page;\n    }\n  }\n\n  @Output('clrDgPageChange') currentChanged = new EventEmitter<number>(false);\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    this.page.previous();\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    this.page.next();\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    return this.page.firstItem;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    return this.page.lastItem;\n  }\n\n  /**\n   * Conditionally adds page numbers before and after the current page\n   */\n  public get middlePages(): number[] {\n    const middlePages: number[] = [];\n    if (this.page.current > 1) {\n      middlePages.push(this.page.current - 1);\n    }\n    middlePages.push(this.page.current);\n    if (this.page.current < this.page.last) {\n      middlePages.push(this.page.current + 1);\n    }\n    return middlePages;\n  }\n\n  /**\n   * We only update the pagination's current page on blur of the input field, or\n   * when they press enter.\n   */\n  public updateCurrentPage(event: any): void {\n    const parsed = parseInt(event.target.value, 10);\n\n    // if the input value, is not a number, we don't update the page\n    if (!isNaN(parsed)) {\n      if (parsed < 1) {\n        this.page.current = 1;\n      } else if (parsed > this.page.last) {\n        this.page.current = this.page.last;\n      } else {\n        this.page.current = parsed;\n      }\n    }\n\n    /**\n     * Set the input's value to the new current page. This is needed because the code\n     * above may have changed the value from what the user entered in.\n     */\n    this.currentPageInputRef.nativeElement.value = this.page.current;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, Component, ContentChildren, Input, OnDestroy, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\n\n/**\n * Generic bland container serving various purposes for Datagrid.\n * For instance, it can help span a text over multiple rows in detail view.\n */\n@Component({\n  selector: 'clr-dg-row-detail',\n  template: `\n        <ng-container *ngIf=\"!replacedRow\">\n            <!-- space for multiselection state -->\n            <div class=\"datagrid-cell datagrid-select datagrid-fixed-column\"\n                *ngIf=\"selection.selectionType === SELECTION_TYPE.Multi\">\n            </div>\n            <!-- space for single selection state -->\n            <div class=\"datagrid-cell datagrid-select datagrid-fixed-column\"\n                *ngIf=\"selection.selectionType === SELECTION_TYPE.Single\">\n            </div>\n            <!-- space for single row action; only displayType if we have at least one actionable row in datagrid -->\n            <div class=\"datagrid-cell datagrid-row-actions datagrid-fixed-column\"\n                *ngIf=\"rowActionService.hasActionableRow\">\n            </div>\n            <!-- space for expandable caret action; only displayType if we have at least one expandable row in datagrid -->\n            <div *ngIf=\"expandableRows.hasExpandableRow\"\n                        class=\"datagrid-expandable-caret datagrid-fixed-column datagrid-cell\">\n            </div>\n        </ng-container>\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.datagrid-row-flex]': 'true',\n    '[class.datagrid-row-detail]': 'true',\n    '[class.datagrid-container]': 'cells.length === 0',\n  },\n})\nexport class ClrDatagridRowDetail<T = any> implements AfterContentInit, OnDestroy {\n  /* reference to the enum so that template can access it */\n  public SELECTION_TYPE = SelectionType;\n\n  constructor(\n    public selection: Selection,\n    public rowActionService: RowActionService,\n    public expand: DatagridIfExpandService,\n    public expandableRows: ExpandableRowsCount\n  ) {}\n\n  @ContentChildren(ClrDatagridCell) cells: QueryList<ClrDatagridCell>;\n\n  @Input('clrDgReplace')\n  set replace(value: boolean) {\n    this.expand.setReplace(!!value);\n  }\n  private subscriptions: Subscription[] = [];\n  public replacedRow = false;\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.expand.replace.subscribe(replaceChange => {\n        this.replacedRow = replaceChange;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES, DatagridColumnChanges } from '../enums/column-changes.enum';\n\n@Directive({ selector: 'clr-dg-cell' })\nexport class DatagridCellRenderer implements OnDestroy {\n  private stateSubscription: Subscription;\n\n  private runAllChanges: DatagridColumnChanges[];\n\n  // @TODO(JEREMY) Work out how to dedupe some of this code between header and cell renderers\n  set columnState(columnState: BehaviorSubject<ColumnState>) {\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n\n    this.runAllChanges = ALL_COLUMN_CHANGES;\n    this.stateSubscription = columnState.subscribe(state => this.stateChanges(state));\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2, organizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (this.runAllChanges) {\n      state.changes = this.runAllChanges;\n      delete this.runAllChanges;\n    }\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    this.renderer.setStyle(this.el.nativeElement, 'width', null);\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n    this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO The top two are not used now, which is probably a performance drag that was broken along the way.\n// There was a previous pattern to hide everything to do computation then display, for Firefox, needs revisiting.\nexport const NO_LAYOUT_CLASS = 'datagrid-no-layout';\nexport const COMPUTE_WIDTH_CLASS = 'datagrid-computing-columns-width';\nexport const STRICT_WIDTH_CLASS = 'datagrid-fixed-width';\nexport const HIDDEN_COLUMN_CLASS = 'datagrid-hidden-column';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Inject, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { ColumnResizerService } from '../providers/column-resizer.service';\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { COLUMN_STATE, COLUMN_STATE_PROVIDER } from '../providers/column-state.provider';\nimport { ColumnsService } from '../providers/columns.service';\n\n@Directive({ selector: 'clr-dg-column', providers: [ColumnResizerService, COLUMN_STATE_PROVIDER] })\nexport class DatagridHeaderRenderer implements OnDestroy {\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private organizer: DatagridRenderOrganizer,\n    private domAdapter: DomAdapter,\n    private columnResizerService: ColumnResizerService,\n    private columnsService: ColumnsService,\n    @Inject(COLUMN_STATE) private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.subscriptions.push(\n      this.organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n\n    this.subscriptions.push(columnState.subscribe(state => this.stateChanges(state)));\n  }\n\n  @Output('clrDgColumnResize') resizeEmitter: EventEmitter<number> = new EventEmitter();\n\n  /**\n   * Indicates if the column has a strict width, so it doesn't shrink or expand based on the content.\n   */\n  private widthSet: boolean = false;\n  private autoSet: boolean = false;\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    // remove the width only if we set it, and it is not changed by dragging.\n    if (this.widthSet && !this.columnResizerService.resizedBy) {\n      this.renderer.setStyle(this.el.nativeElement, 'width', null);\n    }\n    if (this.autoSet) {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n  }\n\n  private detectStrictWidth(): number {\n    if (this.columnResizerService.resizedBy) {\n      return this.columnResizerService.widthAfterResize;\n    } else if (this.autoSet) {\n      return 0;\n    } else {\n      return this.domAdapter.userDefinedWidth(this.el.nativeElement);\n    }\n  }\n\n  private computeWidth(strictWidth: number): number {\n    let width: number = strictWidth;\n    if (!width) {\n      width = this.domAdapter.scrollWidth(this.el.nativeElement);\n    }\n    return width;\n  }\n\n  public getColumnWidthState(): Partial<ColumnState> {\n    const strictWidth = this.detectStrictWidth();\n    return {\n      width: this.computeWidth(strictWidth),\n      strictWidth: strictWidth,\n    };\n  }\n\n  public setColumnState(index: number) {\n    this.columnsService.columns[index] = this.columnState;\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      if (this.columnResizerService.resizedBy) {\n        this.resizeEmitter.emit(state.width);\n        this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n        this.widthSet = false;\n      }\n      // Don't set width if there is a user-defined one. Just add the strict width class.\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.autoSet = false;\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n      this.widthSet = true;\n      this.autoSet = true;\n    }\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * This version of the DomAdapter is for use on non-browser platforms, where there are no\n * nativeElements to use for calculations.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\n\n@Injectable()\nexport class NoopDomAdapter implements DomAdapter {\n  userDefinedWidth(element: any): number {\n    return 0;\n  }\n\n  scrollBarWidth(element: any) {\n    return 0;\n  }\n\n  scrollWidth(element: any) {\n    return 0;\n  }\n\n  computedHeight(element: any): number {\n    return 0;\n  }\n\n  clientRect(element: any): ClientRect {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  minWidth(element: any): number {\n    return 0;\n  }\n\n  focus(element: any): void {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, ContentChildren, Directive, OnDestroy, QueryList } from '@angular/core';\n\nimport { DatagridCellRenderer } from './cell-renderer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({ selector: 'clr-dg-row, clr-dg-row-detail' })\nexport class DatagridRowRenderer implements AfterContentInit, OnDestroy {\n  @ContentChildren(DatagridCellRenderer) private cells: QueryList<DatagridCellRenderer>;\n\n  constructor(private columnsService: ColumnsService) {}\n\n  ngAfterContentInit() {\n    this.setColumnState(); // case #3 and #4\n    this.subscriptions.push(\n      this.cells.changes.subscribe(() => {\n        this.setColumnState(); // case #2\n        // Note on case #2: In the case of dynamic columns, when one column (header/cell together) gets deleted,\n        // this.cells.changes emits before this.columnsService.columns gets updated in MainRenderer\n        // when this.headers.changes emits as well. So that means there will be n+1 column state providers\n        // when this.cells.changes emits. Hence, we should quit earlier there. But this method will be called\n        // right after again when this.headers.changes emits. By then, there will be the same number of column state\n        // providers as column headers.\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  public setColumnState() {\n    // This method runs in four cases:\n    // 1. When the initial rows appear on the first page.\n    //    In this case, the method will be called in DatagridMainRenderer.\n    // 2. When columns (corresponding header/cells) get added and deleted.\n    //    In this case, the method will be called in DatagridMainRenderer. (Read the note on this case above).\n    // 3. When rows load asynchronously.\n    //    In this case, the method will be called in this class.\n    // 4. When rows load after switching pages.\n    //    In this case, the method will be called in this class (Basically, same as the case 3).\n    if (this.cells.length === this.columnsService.columns.length) {\n      this.cells.forEach((cell, index) => {\n        if (this.columnsService.columns[index]) {\n          cell.columnState = this.columnsService.columns[index];\n        }\n      });\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  OnDestroy,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { Items } from '../providers/items';\nimport { Page } from '../providers/page';\nimport { TableSizeService } from '../providers/table-size.service';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridHeaderRenderer } from './header-renderer';\nimport { NoopDomAdapter } from './noop-dom-adapter';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { DatagridRowRenderer } from './row-renderer';\nimport { ColumnStateDiff } from '../interfaces/column-state.interface';\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\nexport const domAdapterFactory = (platformId: Object) => {\n  if (isPlatformBrowser(platformId)) {\n    return new DomAdapter();\n  } else {\n    return new NoopDomAdapter();\n  }\n};\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\n@Directive({\n  selector: 'clr-datagrid',\n  providers: [{ provide: DomAdapter, useFactory: domAdapterFactory, deps: [PLATFORM_ID] }],\n})\nexport class DatagridMainRenderer<T = any> implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    private items: Items,\n    private page: Page,\n    private domAdapter: DomAdapter,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private tableSizeService: TableSizeService,\n    private columnsService: ColumnsService\n  ) {\n    this.subscriptions.push(\n      this.organizer\n        .filterRenderSteps(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS)\n        .subscribe(() => this.computeHeadersWidth())\n    );\n\n    this.subscriptions.push(\n      this.page.sizeChange.subscribe(() => {\n        if (this._heightSet) {\n          this.resetDatagridHeight();\n        }\n      })\n    );\n    this.subscriptions.push(this.items.change.subscribe(() => (this.shouldStabilizeColumns = true)));\n  }\n\n  @ContentChildren(DatagridHeaderRenderer) private headers: QueryList<DatagridHeaderRenderer>;\n  @ContentChildren(DatagridRowRenderer, { descendants: true })\n  private rows: QueryList<DatagridRowRenderer>; // if expandable row is expanded initially, query its cells too.\n\n  ngAfterContentInit() {\n    this.setupColumns();\n\n    this.subscriptions.push(\n      this.headers.changes.subscribe(() => {\n        // TODO: only re-stabilize if a column was added or removed. Reordering is fine.\n        // Need to setup columns before stabalizing them\n        this.setupColumns();\n        this.columnsSizesStable = false;\n        this.stabilizeColumns();\n      })\n    );\n  }\n\n  // Initialize and set Table width for horizontal scrolling here.\n  ngAfterViewInit() {\n    this.tableSizeService.table = this.el;\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldStabilizeColumns) {\n      this.stabilizeColumns();\n    }\n    if (this.shouldComputeHeight()) {\n      setTimeout(() => {\n        this.computeDatagridHeight();\n      });\n    }\n  }\n\n  private setupColumns() {\n    this.headers.forEach((header, index) => header.setColumnState(index));\n    this.columnsService.columns.splice(this.headers.length); // Trim any old columns\n    this.rows.forEach(row => row.setColumnState());\n  }\n\n  private _heightSet: boolean = false;\n\n  private shouldComputeHeight(): boolean {\n    if (!this._heightSet && this.page.size > 0) {\n      if (this.items.displayed.length === this.page.size) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Computes the height of the datagrid.\n   *\n   * NOTE: We had to choose to set the height instead of the min-height because\n   * IE 11 requires the height on the parent for the children flex grow/shrink properties to work.\n   * When we used min-height, 1 1 auto doesn't used to work in IE11 :-(\n   * But this doesn't affect the fix. It works in both fixed & variable height datagrids.\n   *\n   * Refer: http://stackoverflow.com/questions/24396205/flex-grow-not-working-in-internet-explorer-11-0\n   */\n  private computeDatagridHeight() {\n    // IE doesn't return correct value for getComputedStyle(element).getPropertyValue(\"height\")\n    const value: number = this.domAdapter.clientRect(this.el.nativeElement).height;\n    this.renderer.setStyle(this.el.nativeElement, 'height', value + 'px');\n    this._heightSet = true;\n  }\n\n  private resetDatagridHeight() {\n    this.renderer.setStyle(this.el.nativeElement, 'height', '');\n    this._heightSet = false;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Makes each header compute its width.\n   */\n  private computeHeadersWidth() {\n    const nbColumns: number = this.headers.length;\n    let allStrict = true;\n    this.headers.forEach((header, index) => {\n      // On the last header column check whether all columns have strict widths.\n      // If all columns have strict widths, remove the strict width from the last column and make it the column's\n      // minimum width so that when all previous columns shrink, it will get a flexible width and cover the empty\n      // gap in the Datagrid.\n      const state: ColumnStateDiff = {\n        changes: [DatagridColumnChanges.WIDTH],\n        ...header.getColumnWidthState(),\n      };\n\n      if (!state.strictWidth) {\n        allStrict = false;\n      }\n\n      if (nbColumns === index + 1 && allStrict) {\n        state.strictWidth = 0;\n      }\n\n      this.columnsService.emitStateChangeAt(index, state);\n    });\n  }\n\n  /**\n   * Indicates if we want to re-compute columns width. This should only happen:\n   * 1) When headers change, with columns being added or removed\n   * 2) When rows are lazily loaded for the first time\n   */\n  private columnsSizesStable = false;\n\n  private shouldStabilizeColumns = true;\n\n  /**\n   * Triggers a whole re-rendring cycle to set column sizes, if needed.\n   */\n  private stabilizeColumns() {\n    this.shouldStabilizeColumns = false;\n    if (this.columnsSizesStable) {\n      // Nothing to do.\n      return;\n    }\n    // Resize when the rows are loaded.\n    if (this.items.displayed.length > 0) {\n      this.organizer.resize();\n      this.columnsSizesStable = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport {\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  AfterContentChecked,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverPositionService } from './providers/popover-position.service';\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Directive({ selector: '[clrPopoverContent]' })\nexport class ClrPopoverContent implements AfterContentChecked, OnDestroy {\n  private view: EmbeddedViewRef<void>;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrPopoverContent')\n  public set open(value: boolean) {\n    this.smartOpenService.open = !!value;\n  }\n\n  @Input('clrPopoverContentAt')\n  set contentAt(position: ClrPopoverPosition) {\n    this.smartPositionService.position = position;\n  }\n\n  @Input('clrPopoverContentOutsideClickToClose')\n  set outsideClickClose(clickToClose) {\n    this.smartEventsService.outsideClickClose = !!clickToClose;\n  }\n\n  @Input('clrPopoverContentScrollToClose')\n  set scrollToClose(scrollToClose) {\n    this.smartEventsService.scrollToClose = !!scrollToClose;\n  }\n\n  constructor(\n    @Inject(DOCUMENT) private document: HTMLDocument,\n    private container: ViewContainerRef,\n    private template: TemplateRef<any>,\n    private renderer: Renderer2,\n    private smartPositionService: ClrPopoverPositionService,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {}\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        if (change) {\n          this.addContent();\n        } else {\n          this.removeContent();\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.removeContent();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private removeContent(): void {\n    if (!this.view) {\n      return;\n    }\n    this.view.rootNodes.forEach(node => this.renderer.removeChild(this.document.body, node));\n    this.container.clear();\n    delete this.view;\n    this.hasPositionCoords = false;\n  }\n\n  /**\n   * TODO(matt): investigate why DebugElement retains a reference to the nodes and causes a memory leak.\n   * A note about the use of appendChild/removeChild\n   * The DebugElement is keeping a reference to the detached node and its unclear why.\n   * This does warrant further investigation. But, since it doesn't happen in production mode\n   * it is a low priority issue for now.\n   */\n  private addContent() {\n    // Create the view container\n    this.view = this.container.createEmbeddedView(this.template);\n    this.smartEventsService.contentRef = this.view.rootNodes[0]; // So we know where/what to set close focus on\n    // Position the content and add a click listener\n    this.renderer.addClass(this.view.rootNodes[0], 'clr-popover-content');\n    this.renderer.listen(this.view.rootNodes[0], 'click', event => {\n      this.smartOpenService.openEvent = event;\n    });\n    this.view.rootNodes.forEach(node => {\n      this.renderer.appendChild(this.document.body, node);\n    });\n  }\n  private hasPositionCoords = false;\n\n  ngAfterContentChecked(): void {\n    // In order to get accurate content height/width values, we cannot calculate alignment offsets until after the\n    // projected content has stabilized.\n    if (this.smartOpenService.open && this.view && !this.hasPositionCoords) {\n      const positionCoords = this.smartPositionService.alignContent(this.view.rootNodes[0]);\n      this.renderer.setStyle(this.view.rootNodes[0], 'top', `${positionCoords.yOffset}px`);\n      this.renderer.setStyle(this.view.rootNodes[0], 'left', `${positionCoords.xOffset}px`);\n      this.hasPositionCoords = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, EventEmitter, HostListener, OnDestroy, Output } from '@angular/core';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrPopoverOpenCloseButton]',\n  host: {\n    '[class.clr-smart-open-close]': 'true',\n  },\n})\nexport class ClrPopoverOpenCloseButton implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(private smartOpenService: ClrPopoverToggleService) {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        this.openCloseChange.next(change);\n      })\n    );\n  }\n\n  @Output('clrPopoverOpenCloseChange') openCloseChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef, EventEmitter, Output, HostListener, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[clrPopoverCloseButton]',\n  host: {\n    '[class.clr-smart-close-button]': 'true',\n  },\n})\nexport class ClrPopoverCloseButton implements OnDestroy, AfterViewInit {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private elementRef: ElementRef,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.pipe(filter(value => !value)).subscribe(() => {\n        this.closeChange.next();\n      })\n    );\n  }\n\n  @Output('clrPopoverOnCloseChange') closeChange: EventEmitter<void> = new EventEmitter<void>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n    this.smartEventsService.setAnchorFocus();\n  }\n\n  ngAfterViewInit() {\n    this.smartEventsService.closeButtonRef = this.elementRef;\n    this.smartEventsService.setCloseFocus();\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef } from '@angular/core';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\n\n@Directive({\n  selector: '[clrPopoverAnchor]',\n  host: {\n    '[class.clr-anchor]': 'true',\n  },\n})\nexport class ClrPopoverAnchor {\n  constructor(smartEventService: ClrPopoverEventsService, element: ElementRef) {\n    smartEventService.anchorButtonRef = element;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrPopoverContent } from './popover-content';\nimport { ClrPopoverOpenCloseButton } from './popover-open-close-button';\nimport { ClrPopoverCloseButton } from './popover-close-button';\nimport { ClrPopoverAnchor } from './popover-anchor';\n\n@NgModule({\n  imports: [],\n  declarations: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n  exports: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n})\nexport class ClrPopoverModuleNext {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrFormsModule } from '../../forms/forms.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonPopoverModule } from '../../popover/common/popover.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrOutsideClickModule } from '../../utils/outside-click/outside-click.module';\nimport { ClrDragAndDropModule } from '../../utils/drag-and-drop/drag-and-drop.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrSpinnerModule } from '../../progress/spinner/spinner.module';\n\nimport { DatagridStringFilter } from './built-in/filters/datagrid-string-filter';\nimport { DatagridNumericFilter } from './built-in/filters/datagrid-numeric-filter';\nimport { ActionableOompaLoompa } from './chocolate/actionable-oompa-loompa';\nimport { DatagridWillyWonka } from './chocolate/datagrid-willy-wonka';\nimport { ExpandableOompaLoompa } from './chocolate/expandable-oompa-loompa';\nimport { ClrDatagrid } from './datagrid';\nimport { ClrDatagridActionBar } from './datagrid-action-bar';\nimport { ClrDatagridActionOverflow } from './datagrid-action-overflow';\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridColumnSeparator } from './datagrid-column-separator';\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { DatagridDetailRegisterer } from './datagrid-detail-registerer';\nimport { ClrDatagridFilter } from './datagrid-filter';\nimport { ClrDatagridFooter } from './datagrid-footer';\nimport { ClrDatagridHideableColumn } from './datagrid-hideable-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridItemsTrackBy } from './datagrid-items-trackby';\nimport { ClrDatagridPagination } from './datagrid-pagination';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { ClrDatagridRowDetail } from './datagrid-row-detail';\nimport { DatagridCellRenderer } from './render/cell-renderer';\nimport { DatagridHeaderRenderer } from './render/header-renderer';\nimport { DatagridMainRenderer } from './render/main-renderer';\nimport { DatagridRowRenderer } from './render/row-renderer';\nimport { WrappedCell } from './wrapped-cell';\nimport { WrappedColumn } from './wrapped-column';\nimport { WrappedRow } from './wrapped-row';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\n\nexport const CLR_DATAGRID_DIRECTIVES: Type<any>[] = [\n  // Core\n  ClrDatagrid,\n  ClrDatagridActionBar,\n  ClrDatagridActionOverflow,\n  ClrDatagridColumn,\n  ClrDatagridColumnSeparator,\n  ClrDatagridColumnToggle,\n  ClrDatagridHideableColumn,\n  ClrDatagridFilter,\n  ClrDatagridItems,\n  ClrDatagridItemsTrackBy,\n  ClrDatagridRow,\n  ClrDatagridRowDetail,\n  DatagridDetailRegisterer,\n  ClrDatagridCell,\n  ClrDatagridFooter,\n  ClrDatagridPagination,\n  ClrDatagridPageSize,\n  ClrDatagridPlaceholder,\n  ClrDatagridColumnToggleButton,\n  ClrDatagridColumnToggleTitle,\n  WrappedCell,\n  WrappedColumn,\n  WrappedRow,\n\n  // Renderers\n  DatagridMainRenderer,\n  DatagridHeaderRenderer,\n  DatagridRowRenderer,\n  DatagridCellRenderer,\n\n  // Chocolate\n  DatagridWillyWonka,\n  ActionableOompaLoompa,\n  ExpandableOompaLoompa,\n\n  // Built-in shortcuts\n  DatagridStringFilter,\n  DatagridNumericFilter,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrIconModule,\n    ClrFormsModule,\n    FormsModule,\n    ClrLoadingModule,\n    ClrOutsideClickModule,\n    ClrExpandableAnimationModule,\n    ClrDragAndDropModule,\n    ClrSpinnerModule,\n    ClrCommonPopoverModule,\n    ClrPopoverModuleNext,\n    ClrFocusTrapModule,\n  ],\n  declarations: [CLR_DATAGRID_DIRECTIVES],\n  exports: [CLR_DATAGRID_DIRECTIVES],\n  entryComponents: [WrappedCell, WrappedColumn, WrappedRow],\n})\nexport class ClrDatagridModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, HostBinding, Inject, Input, OnInit, Optional, Output, SkipSelf } from '@angular/core';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-stack-block',\n  template: `\n    <dt class=\"stack-block-label\"\n        (click)=\"toggleExpand()\"\n        (keyup.enter)=\"toggleExpand()\"\n        (keyup.space)=\"toggleExpand()\"\n        (focus)=\"focused = true\"\n        (blur)=\"focused = false\"\n        [id]=\"uniqueId\"\n        [attr.role]=\"role\"\n        [attr.tabindex]=\"tabIndex\"\n        [attr.aria-expanded]=\"ariaExpanded\"\n        [attr.aria-controls]=\"getStackChildrenId()\"\n        [attr.aria-posinset]=\"ariaPosinset\"\n        [attr.aria-level]=\"ariaLevel\"\n        [attr.aria-setsize]=\"ariaSetsize\"\n        >\n      <clr-icon shape=\"caret\"\n                class=\"stack-block-caret\"\n                *ngIf=\"expandable\"\n                [attr.dir]=\"caretDirection\"\n                [attr.title]=\"caretTitle\"></clr-icon>\n      <span class=\"clr-sr-only\" *ngIf=\"getChangedValue\">{{commonStrings.keys.stackViewChanged}}</span>\n      <ng-content select=\"clr-stack-label\"></ng-content>\n    </dt>\n    <dd class=\"stack-block-content\">\n      <ng-content></ng-content>\n    </dd>\n\n    <clr-expandable-animation [@clrExpandTrigger]=\"expanded\" class=\"stack-children\" [attr.id]=\"getStackChildrenId()\">\n      <div [style.height]=\"expanded ? 'auto' : 0\">\n        <ng-content select=\"clr-stack-block\"></ng-content>\n      </div>\n    </clr-expandable-animation>\n  `,\n  // Custom elements are inline by default\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  // Make sure the host has the proper class for styling purposes\n  host: { '[class.stack-block]': 'true' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrStackBlock implements OnInit {\n  @HostBinding('class.stack-block-expanded')\n  @Input('clrSbExpanded')\n  expanded: boolean = false;\n  @Output('clrSbExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  @HostBinding('class.stack-block-expandable')\n  @Input('clrSbExpandable')\n  expandable: boolean = false;\n\n  focused: boolean = false;\n  private _changedChildren: number = 0;\n  private _fullyInitialized: boolean = false;\n  private _changed: boolean = false;\n\n  @HostBinding('class.stack-block-changed')\n  get getChangedValue(): boolean {\n    return this._changed || (this._changedChildren > 0 && !this.expanded);\n  }\n\n  @Input('clrSbNotifyChange')\n  set setChangedValue(value: boolean) {\n    this._changed = value;\n\n    if (this.parent && this._fullyInitialized) {\n      if (value) {\n        this.parent._changedChildren++;\n      } else {\n        this.parent._changedChildren--;\n      }\n    }\n  }\n\n  /**\n   * Depth of the stack view starting from 1 for first level\n   */\n  @Input('clrStackViewLevel') ariaLevel: number;\n\n  /**\n   * Total number of rows in a given group\n   */\n  @Input('clrStackViewSetsize') ariaSetsize: number;\n\n  /**\n   * The position of the row inside the grouped by level rows\n   */\n  @Input('clrStackViewPosinset') ariaPosinset: number;\n\n  /*\n   * This would be more efficient with @ContentChildren, with the parent ClrStackBlock\n   * querying for children StackBlocks, but this feature is not available when downgrading\n   * the component for Angular 1.\n   */\n  constructor(\n    @SkipSelf()\n    @Optional()\n    private parent: ClrStackBlock,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    if (parent) {\n      parent.addChild();\n    }\n  }\n\n  ngOnInit(): void {\n    // in order to access the parent ClrStackBlock's properties,\n    // the child ClrStackBlock has to be fully initialized at first.\n    this._fullyInitialized = true;\n  }\n\n  addChild(): void {\n    this.expandable = true;\n  }\n\n  toggleExpand(): void {\n    if (this.expandable) {\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  get caretDirection(): string {\n    return this.expanded ? 'down' : 'right';\n  }\n\n  get caretTitle(): string {\n    return this.expanded ? this.commonStrings.keys.collapse : this.commonStrings.keys.expand;\n  }\n\n  get role(): string {\n    return this.expandable ? 'button' : null;\n  }\n\n  get tabIndex(): string {\n    return this.expandable ? '0' : null;\n  }\n\n  @HostBinding('class.on-focus')\n  get onStackLabelFocus(): boolean {\n    return this.expandable && !this.expanded && this.focused;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.expandable) {\n      return null;\n    } else {\n      return this.expanded ? 'true' : 'false';\n    }\n  }\n\n  getStackChildrenId() {\n    return this.expanded ? `clr-stack-children-${this.uniqueId}` : null;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'clr-stack-view',\n  template: `\n        <ng-content select=\"clr-stack-header\"></ng-content>\n        <dl class=\"stack-view\"><ng-content></ng-content></dl>\n    `,\n  // Custom elements are inline by default.\n  styles: [\n    `\n        :host { display: block; }\n    `,\n  ],\n})\nexport class ClrStackView {\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  editable: boolean = false;\n\n  @Output('clrStackSave') save: EventEmitter<void> = new EventEmitter<void>(false);\n\n  private _editMode: boolean = false;\n\n  editingChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  get editing(): boolean {\n    return this.editable && this._editMode;\n  }\n\n  set editing(value: boolean) {\n    if (this.editable) {\n      this._editMode = value;\n      this.editingChange.emit(value);\n      if (!value) {\n        this.save.emit(null);\n      }\n    }\n  }\n  /**\n   * End of undocumented experimental feature.\n   */\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-header',\n  template: `\n        <h4 class=\"stack-header\">\n            <span class=\"stack-title\"><ng-content></ng-content></span>\n            \n            <span class=\"stack-actions\">\n                <ng-content select=\".stack-action\"></ng-content>\n                <!-- Undocumented experimental feature: inline editing. -->\n                <button *ngIf=\"stackView.editable\" class=\"stack-action btn btn-sm btn-link\" \n                        (click)=\"stackView.editing = !stackView.editing\" type=\"button\">\n                        Edit\n                </button>\n                <!-- End of undocumented experimental feature. -->\n            </span>\n        </h4>\n    `,\n  // Custom elements are inline by default\n  styles: [\n    `\n        :host { display: block; }\n    `,\n  ],\n})\nexport class ClrStackHeader {\n  constructor(public stackView: ClrStackView) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\nexport class StackControl {\n  model: any;\n  modelChange: EventEmitter<any> = new EventEmitter<any>(false);\n\n  constructor(protected stackView: ClrStackView) {\n    // Make the ClrStackView editable, since it contains a StackControl\n    this.stackView.editable = true;\n    this.stackView.editingChange.subscribe((editing: boolean) => {\n      // Edit mode was closed\n      if (!editing) {\n        this.modelChange.emit(this.model);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: support more types of inputs: checkbox, radio, ...\n * TODO: Mirror input attributes from the host to the actual input: size, min, max, placeholder, ...\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-input',\n  inputs: ['model: clrModel', 'type'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <input [type]=\"type\" *ngIf=\"stackView.editing\" [(ngModel)]=\"model\"/>\n    `,\n})\nexport class ClrStackInput extends StackControl {\n  type: string = 'text';\n\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: Offer a a way to customize the value displayed, plain value may be unreadable.\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-select',\n  inputs: ['model: clrModel'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <div class=\"select\" *ngIf=\"stackView.editing\" >\n            <select [(ngModel)]=\"model\">\n                <ng-content></ng-content>\n            </select>\n        </div>\n    `,\n})\nexport class ClrStackSelect extends StackControl {\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-stack-label, clr-stack-content' })\nexport class ClrStackViewCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Inject } from '@angular/core';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Directive({\n  selector: '[clrStackInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.aria-labelledby]': 'uniqueId',\n  },\n})\nexport class ClrStackContentInput {\n  constructor(@Inject(UNIQUE_ID) public uniqueId: string) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrStackBlock } from './stack-block';\nimport { ClrStackHeader } from './stack-header';\nimport { ClrStackInput } from './stack-input';\nimport { ClrStackSelect } from './stack-select';\nimport { ClrStackView } from './stack-view';\nimport { ClrStackViewCustomTags } from './stack-view-custom-tags';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrStackContentInput } from './stack-content-input';\n\nexport const CLR_STACK_VIEW_DIRECTIVES: Type<any>[] = [\n  ClrStackView,\n  ClrStackHeader,\n  ClrStackBlock,\n  ClrStackContentInput,\n  ClrStackViewCustomTags,\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  ClrStackInput,\n  ClrStackSelect,\n  /**\n   * End of undocumented experimental feature.\n   */\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrExpandableAnimationModule],\n  declarations: [CLR_STACK_VIEW_DIRECTIVES],\n  exports: [CLR_STACK_VIEW_DIRECTIVES],\n})\nexport class ClrStackViewModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrSelectedState } from './selected-state.enum';\nimport { BehaviorSubject } from 'rxjs';\n\nexport abstract class TreeNodeModel<T> {\n  selected = new BehaviorSubject<ClrSelectedState>(ClrSelectedState.UNSELECTED);\n  model: T | null;\n  /*\n   * Ideally, I would like to use a polymorphic this type here to ensure homogeneity of the tree, something like:\n   * abstract parent: this<T> | null;\n   * abstract children: this<T>[];\n   * But I'm hitting limitations on typescript not allowing that type in constructors or static methods.\n   * So I'm resorting to forcing override with more precise types by marking these abstract.\n   */\n  abstract parent: TreeNodeModel<T> | null;\n  abstract children: TreeNodeModel<T>[];\n\n  /*\n   * Being able to push this down to the RecursiveTreeNodeModel would require too much work on the angular components\n   * right now for them to know which kind of model they are using. So I'm lifting the public properties to this\n   * abstract parent class for now and we can revisit it later, when we're not facing such a close deadline.\n   */\n  loading = false;\n\n  destroy() {\n    // Just to be safe\n    this.selected.complete();\n  }\n\n  // Propagate by default when eager, don't propagate in the lazy-loaded tree.\n  setSelected(state: ClrSelectedState, propagateUp: boolean, propagateDown: boolean) {\n    if (state === this.selected.value) {\n      return;\n    }\n    this.selected.next(state);\n    if (propagateDown && state !== ClrSelectedState.INDETERMINATE && this.children) {\n      this.children.forEach(child => child.setSelected(state, false, true));\n    }\n    if (propagateUp && this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n\n  toggleSelection(propagate: boolean) {\n    // Both unselected and indeterminate toggle to selected\n    const newState =\n      this.selected.value === ClrSelectedState.SELECTED ? ClrSelectedState.UNSELECTED : ClrSelectedState.SELECTED;\n    // NOTE: we always propagate selection up in this method because it is only called when the user takes an action.\n    // It should never be called from lifecycle hooks or app-provided inputs.\n    this.setSelected(newState, true, propagate);\n  }\n\n  private computeSelectionStateFromChildren() {\n    let oneSelected = false;\n    let oneUnselected = false;\n    // Using a good old for loop to exit as soon as we can tell, for better performance on large trees.\n    for (const child of this.children) {\n      switch (child.selected.value) {\n        case ClrSelectedState.INDETERMINATE:\n          return ClrSelectedState.INDETERMINATE;\n        case ClrSelectedState.SELECTED:\n          oneSelected = true;\n          if (oneUnselected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n        case ClrSelectedState.UNSELECTED:\n        default:\n          // Default is the same as unselected, in case an undefined somehow made it all the way here.\n          oneUnselected = true;\n          if (oneSelected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n      }\n    }\n    if (!oneSelected) {\n      return ClrSelectedState.UNSELECTED;\n    } else if (!oneUnselected) {\n      return ClrSelectedState.SELECTED;\n    }\n  }\n\n  /*\n   * Internal, but needs to be called by other nodes\n   */\n  _updateSelectionFromChildren() {\n    const newState = this.computeSelectionStateFromChildren();\n    if (newState === this.selected.value) {\n      return;\n    }\n    this.selected.next(newState);\n    if (this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { TreeNodeModel } from './tree-node.model';\n\n/*\n * A declarative model is built by traversing the Angular component tree.\n * Declarative = Tree node components dictate the model\n */\nexport class DeclarativeTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(parent: DeclarativeTreeNodeModel<T> | null) {\n    super();\n    this.parent = parent;\n    if (parent) {\n      parent._addChild(this);\n    }\n    this.children = [];\n  }\n\n  // Override for a more precise type\n  parent: DeclarativeTreeNodeModel<T> | null;\n  children: DeclarativeTreeNodeModel<T>[];\n\n  _addChild(child: DeclarativeTreeNodeModel<T>) {\n    this.children.push(child);\n  }\n\n  _removeChild(child: DeclarativeTreeNodeModel<T>) {\n    const index = this.children.indexOf(child);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  destroy() {\n    if (this.parent) {\n      this.parent._removeChild(this);\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf, TemplateRef } from '@angular/core';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TreeFeaturesService<T> {\n  selectable = false;\n  eager = true;\n  recursion: {\n    template: TemplateRef<ClrRecursiveForOfContext<T>>;\n    root: RecursiveTreeNodeModel<T>[];\n  };\n  childrenFetched: Subject<void> = new Subject();\n}\n\nexport function treeFeaturesFactory<T>(existing: TreeFeaturesService<T>) {\n  return existing || new TreeFeaturesService();\n}\n\nexport const TREE_FEATURES_PROVIDER = {\n  provide: TreeFeaturesService,\n  useFactory: treeFeaturesFactory,\n  /*\n   * The Optional + SkipSelf pattern ensures that in case of nested components, only the root one will\n   * instantiate a new service and all its children will reuse the root's instance.\n   * If there are several roots (in this case, several independent trees on a page), each root will instantiate\n   * its own service so they won't interfere with one another.\n   *\n   * TL;DR - Optional + SkipSelf = 1 instance of TreeFeaturesService per tree.\n   */\n  deps: [[new Optional(), new SkipSelf(), TreeFeaturesService]],\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n  Component,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SkipSelf,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { DeclarativeTreeNodeModel } from './models/declarative-tree-node.model';\nimport { ClrSelectedState } from './models/selected-state.enum';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { TREE_FEATURES_PROVIDER, TreeFeaturesService } from './tree-features.service';\n\n@Component({\n  selector: 'clr-tree-node',\n  templateUrl: './tree-node.html',\n  providers: [\n    UNIQUE_ID_PROVIDER,\n    TREE_FEATURES_PROVIDER,\n    IfExpandService,\n    { provide: LoadingListener, useExisting: IfExpandService },\n  ],\n  animations: [\n    trigger('childNodesState', [\n      state('expanded', style({ height: '*', 'overflow-y': 'hidden' })),\n      state('collapsed', style({ height: 0, 'overflow-y': 'hidden' })),\n      transition('expanded <=> collapsed', animate('0.2s ease-in-out')),\n    ]),\n  ],\n  host: { '[class.clr-tree-node]': 'true' },\n})\nexport class ClrTreeNode<T> implements OnInit, OnDestroy {\n  STATES = ClrSelectedState;\n  private skipEmitChange = false;\n\n  constructor(\n    @Inject(UNIQUE_ID) public nodeId: string,\n    @Optional()\n    @SkipSelf()\n    parent: ClrTreeNode<T>,\n    public featuresService: TreeFeaturesService<T>,\n    public expandService: IfExpandService,\n    public commonStrings: ClrCommonStringsService,\n    injector: Injector\n  ) {\n    if (this.featuresService.recursion) {\n      // I'm completely stuck, we have to hack into private properties until either\n      // https://github.com/angular/angular/issues/14935 or https://github.com/angular/angular/issues/15998\n      // are fixed\n      this._model = (<any>injector).view.context.clrModel;\n    } else {\n      // Force cast for now, not sure how to tie the correct type here to featuresService.recursion\n      this._model = new DeclarativeTreeNodeModel(parent ? <DeclarativeTreeNodeModel<T>>parent._model : null);\n    }\n  }\n\n  _model: TreeNodeModel<T>;\n\n  isExpandable() {\n    if (typeof this.expandable !== 'undefined') {\n      return this.expandable;\n    }\n    return !!this.expandService.expandable || (this._model.children && this._model.children.length > 0);\n  }\n\n  @Input('clrSelected')\n  get selected(): ClrSelectedState | boolean {\n    return this._model.selected.value;\n  }\n  set selected(value: ClrSelectedState | boolean) {\n    this.featuresService.selectable = true;\n    // Gracefully handle falsy states like null or undefined because it's just easier than answering questions.\n    // This shouldn't happen with strict typing on the app's side, but it's not up to us.\n    if (value === null || typeof value === 'undefined') {\n      value = ClrSelectedState.UNSELECTED;\n    }\n    // We match booleans to the corresponding ClrSelectedState\n    if (typeof value === 'boolean') {\n      value = value ? ClrSelectedState.SELECTED : ClrSelectedState.UNSELECTED;\n    }\n    // We propagate only if the tree is in smart mode, and skip emitting the output when we set the input\n    // See https://github.com/vmware/clarity/issues/3073\n    this.skipEmitChange = true;\n    this._model.setSelected(value, this.featuresService.eager, this.featuresService.eager);\n    this.skipEmitChange = false;\n  }\n\n  @Output('clrSelectedChange') selectedChange = new EventEmitter<ClrSelectedState>(false);\n\n  @HostBinding('attr.role')\n  get treeNodeRole(): string {\n    return this._model.parent ? 'treeitem' : 'tree';\n  }\n\n  @HostBinding('attr.aria-multiselectable')\n  get rootAriaMultiSelectable(): boolean {\n    if (this._model.parent || !this.featuresService.selectable) {\n      return null;\n    } else {\n      return true;\n    }\n  }\n\n  @HostBinding('attr.aria-selected')\n  get ariaSelected(): boolean {\n    return this.featuresService.selectable ? this._model.selected.value === ClrSelectedState.SELECTED : null;\n  }\n\n  // Allows the consumer to override our logic deciding if a node is expandable.\n  // Useful for recursive trees that don't want to pre-load one level ahead just to know which nodes are expandable.\n  @Input('clrExpandable') expandable: boolean | undefined;\n\n  // I'm caving on this, for tree nodes I think we can tolerate having a two-way binding on the component\n  // rather than enforce the clrIfExpanded structural directive for dynamic cases. Mostly because for the smart\n  // case, you can't use a structural directive, it would need to go on an ng-container.\n  @Input('clrExpanded')\n  get expanded() {\n    return this.expandService.expanded;\n  }\n  set expanded(value: boolean) {\n    this.expandService.expanded = value;\n  }\n\n  @Output('clrExpandedChange') expandedChange = new EventEmitter<boolean>();\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this._model.selected.pipe(filter(() => !this.skipEmitChange)).subscribe(value => this.selectedChange.emit(value))\n    );\n    this.subscriptions.push(this.expandService.expandChange.subscribe(value => this.expandedChange.emit(value)));\n  }\n\n  ngOnDestroy() {\n    this._model.destroy();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { TREE_FEATURES_PROVIDER, TreeFeaturesService } from './tree-features.service';\n\n@Component({\n  selector: 'clr-tree',\n  template: `\n    <ng-content></ng-content>\n    <clr-recursive-children *ngIf=\"featuresService.recursion\"\n                            [children]=\"featuresService.recursion.root\"></clr-recursive-children>\n  `,\n  providers: [TREE_FEATURES_PROVIDER],\n})\nexport class ClrTree<T> {\n  // This component can also be used just to declare providers once for trees with multiple root nodes.\n\n  constructor(public featuresService: TreeFeaturesService<T>) {}\n\n  @Input('clrLazy')\n  set lazy(value: boolean) {\n    this.featuresService.eager = !value;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isObservable, Subscription } from 'rxjs';\n\nimport { TreeNodeModel } from './tree-node.model';\nimport { AsyncArray, isPromise } from './async-array';\nimport { TreeFeaturesService } from '../tree-features.service';\n\n/*\n * A recursive model is built received from the app and traversed to create the corresponding components.\n * Recursive = Model dictates the tree node components\n */\nexport class RecursiveTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(\n    model: T,\n    parent: RecursiveTreeNodeModel<T> | null,\n    private getChildren: (node: T) => AsyncArray<T> | undefined,\n    private featuresService: TreeFeaturesService<T> | undefined\n  ) {\n    super();\n    this.model = model;\n    this.parent = parent;\n  }\n\n  parent: RecursiveTreeNodeModel<T> | null;\n\n  private childrenFetched = false;\n\n  clearChildren() {\n    this._children.forEach(child => child.destroy());\n    delete this._children;\n    this.childrenFetched = false;\n  }\n\n  fetchChildren() {\n    if (this.childrenFetched) {\n      return;\n    }\n\n    const asyncChildren = this.getChildren(this.model);\n    if (isPromise(asyncChildren)) {\n      this.loading = true;\n      asyncChildren.then(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (isObservable(asyncChildren)) {\n      this.loading = true;\n      this.subscription = asyncChildren.subscribe(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (asyncChildren) {\n      // Synchronous case\n      this._children = this.wrapChildren(asyncChildren);\n    } else {\n      this._children = [];\n    }\n    this.childrenFetched = true;\n    if (this.featuresService) {\n      this.featuresService.childrenFetched.next();\n    }\n  }\n\n  private wrapChildren(rawModels: T[]) {\n    return rawModels.map(m => new RecursiveTreeNodeModel(m, this, this.getChildren, this.featuresService));\n  }\n\n  private _children: RecursiveTreeNodeModel<T>[] = [];\n  get children(): RecursiveTreeNodeModel<T>[] {\n    this.fetchChildren();\n    return this._children;\n  }\n  set children(value: RecursiveTreeNodeModel<T>[]) {\n    this._children = value;\n  }\n\n  private subscription: Subscription;\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ArrowKeyDirection {\n  UP = 'up',\n  DOWN = 'down',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// We need to make sure people can give us null or undefined children even if they run strict type checking.\nimport { Observable } from 'rxjs';\n\nexport type AsyncArray<T> =\n  | T[]\n  | null\n  | undefined\n  | Promise<T[] | null | undefined>\n  | Observable<T[] | null | undefined>;\n\nexport function isPromise<T>(o: AsyncArray<T>): o is Promise<T[]> {\n  // Shamelessly copied from every open-source project out there.\n  return o && typeof (<any>o).then === 'function';\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Input, OnChanges, OnDestroy, TemplateRef } from '@angular/core';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { AsyncArray } from './models/async-array';\nimport { Subscription } from 'rxjs';\n\nexport interface ClrRecursiveForOfContext<T> {\n  $implicit: T;\n  clrModel: TreeNodeModel<T>;\n}\n\n@Directive({ selector: '[clrRecursiveFor][clrRecursiveForOf]' })\nexport class ClrRecursiveForOf<T> implements OnChanges, OnDestroy {\n  constructor(\n    private template: TemplateRef<ClrRecursiveForOfContext<T>>,\n    private featuresService: TreeFeaturesService<T>,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  // TODO: accept NgIterable<T>\n  @Input('clrRecursiveForOf') nodes: T | T[];\n\n  // TODO: accept NgIterable<T> return type\n  @Input('clrRecursiveForGetChildren') getChildren: (node: T) => AsyncArray<T>;\n\n  private childrenFetchSubscription: Subscription;\n\n  // I'm using OnChanges instead of OnInit to easily keep up to date with dynamic trees. Maybe optimizable later.\n  ngOnChanges() {\n    let wrapped: RecursiveTreeNodeModel<T>[];\n    if (Array.isArray(this.nodes)) {\n      wrapped = this.nodes.map(node => new RecursiveTreeNodeModel(node, null, this.getChildren, this.featuresService));\n    } else {\n      wrapped = [new RecursiveTreeNodeModel(this.nodes, null, this.getChildren, this.featuresService)];\n    }\n    if (!this.childrenFetchSubscription) {\n      this.childrenFetchSubscription = this.featuresService.childrenFetched.subscribe(() => {\n        this.cdr.detectChanges();\n      });\n    }\n\n    this.featuresService.recursion = {\n      template: this.template,\n      root: wrapped,\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.childrenFetchSubscription) {\n      this.childrenFetchSubscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\n\n@Component({\n  selector: 'clr-recursive-children',\n  template: `\n    <ng-container *ngIf=\"shouldRender()\">\n      <ng-container *ngFor=\"let child of parent?.children || children\">\n        <ng-container *ngTemplateOutlet=\"featuresService.recursion.template; context: getContext(child)\"></ng-container>\n      </ng-container>\n    </ng-container>\n  `,\n})\n/**\n * Internal component, do not export!\n * This is part of the hack to get around https://github.com/angular/angular/issues/15998\n */\nexport class RecursiveChildren<T> {\n  constructor(public featuresService: TreeFeaturesService<T>, @Optional() private expandService: IfExpandService) {\n    if (expandService) {\n      this.subscription = this.expandService.expandChange.subscribe(value => {\n        if (!value && this.parent && !this.featuresService.eager && this.featuresService.recursion) {\n          // In the case of lazy-loading recursive trees, we clear the children on collapse.\n          // This is better in case they change between two user interaction, and that way\n          // the app itself can decide whether to cache them or not.\n          (<RecursiveTreeNodeModel<T>>this.parent).clearChildren();\n        }\n      });\n    }\n  }\n\n  shouldRender() {\n    return (\n      this.featuresService.recursion &&\n      // In the smart case, we eagerly render all the recursive children\n      // to make sure two-way bindings for selection are available.\n      // They will be hidden with CSS by the parent.\n      (this.featuresService.eager || !this.expandService || this.expandService.expanded)\n    );\n  }\n\n  // Offering the option to either give the parent node to recurse potentially lazily,\n  // or directly the list of children to display.\n  @Input('parent') parent: TreeNodeModel<T>;\n  @Input('children') children: TreeNodeModel<T>[];\n\n  getContext(node: TreeNodeModel<T>): ClrRecursiveForOfContext<T> {\n    return {\n      $implicit: node.model,\n      clrModel: node,\n    };\n  }\n\n  subscription: Subscription;\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrTreeNode } from './tree-node';\nimport { ClrTree } from './tree';\nimport { ClrRecursiveForOf } from './recursive-for-of';\nimport { RecursiveChildren } from './recursive-children';\n\nexport const CLR_TREE_VIEW_DIRECTIVES: Type<any>[] = [ClrTree, ClrTreeNode, ClrRecursiveForOf];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrLoadingModule],\n  declarations: [CLR_TREE_VIEW_DIRECTIVES, RecursiveChildren],\n  exports: [CLR_TREE_VIEW_DIRECTIVES],\n})\nexport class ClrTreeViewModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrDatagridModule } from './datagrid/datagrid.module';\nimport { ClrStackViewModule } from './stack-view/stack-view.module';\nimport { ClrTreeViewModule } from './tree-view/tree-view.module';\n\n@NgModule({ exports: [ClrDatagridModule, ClrStackViewModule, ClrTreeViewModule] })\nexport class ClrDataModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\n\nexport abstract class FocusableItem {\n  id: string;\n  disabled?: boolean;\n\n  abstract focus(): void;\n  abstract blur(): void;\n  abstract activate?(): void;\n\n  up?: FocusableItem | Observable<FocusableItem>;\n  down?: FocusableItem | Observable<FocusableItem>;\n  left?: FocusableItem | Observable<FocusableItem>;\n  right?: FocusableItem | Observable<FocusableItem>;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Type } from '@angular/core';\nimport { UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\nexport function customFocusableItemProvider<T>(implementation: Type<T>) {\n  return [\n    UNIQUE_ID_PROVIDER,\n    implementation,\n    {\n      provide: FocusableItem,\n      useExisting: implementation,\n    },\n  ];\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { isObservable, of } from 'rxjs';\n\nimport { ArrowKeyDirection } from './arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item/focusable-item';\n\n@Injectable()\nexport class FocusService {\n  constructor(private renderer: Renderer2) {}\n\n  private _unlistenFuncs = [];\n  private _current: FocusableItem;\n  public get current() {\n    return this._current;\n  }\n\n  reset(first: FocusableItem) {\n    this._current = first;\n  }\n\n  listenToArrowKeys(el: HTMLElement) {\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.arrowup', event => !this.move(ArrowKeyDirection.UP)));\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowdown', event => !this.move(ArrowKeyDirection.DOWN))\n    );\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowleft', event => !this.move(ArrowKeyDirection.LEFT))\n    );\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowright', event => !this.move(ArrowKeyDirection.RIGHT))\n    );\n  }\n\n  registerContainer(el: HTMLElement) {\n    this.renderer.setAttribute(el, 'tabindex', '0');\n    this.listenToArrowKeys(el);\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.space', () => !this.activateCurrent()));\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.enter', () => !this.activateCurrent()));\n  }\n\n  moveTo(item: FocusableItem) {\n    /**\n     * Make sure that item is not undefined,\n     * This is safety net in the case that someone sometime decide to\n     * call this method without having FocusableItem.\n     */\n    if (item === undefined) {\n      return;\n    }\n\n    if (this.current) {\n      this.current.blur();\n    }\n    item.focus();\n    this._current = item;\n  }\n\n  move(direction: ArrowKeyDirection): boolean {\n    let moved = false;\n    if (this.current) {\n      const next = this.current[direction];\n      if (next) {\n        // Turning the value into an Observable isn't great, but it's the fastest way to avoid code duplication.\n        // If performance ever matters for this, we can refactor using additional private methods.\n        const nextObs = isObservable(next) ? next : of(next);\n        nextObs.subscribe(item => {\n          if (item) {\n            this.moveTo(item);\n            moved = true;\n          }\n        });\n      }\n    }\n    return moved;\n  }\n\n  activateCurrent() {\n    if (this.current && this.current.activate) {\n      this.current.activate();\n      return true;\n    }\n    return false;\n  }\n\n  public detachListeners() {\n    this._unlistenFuncs.forEach((unlisten: () => void) => unlisten());\n  }\n}\n\nexport function clrFocusServiceFactory(existing: FocusService, renderer: Renderer2) {\n  return existing || new FocusService(renderer);\n}\n\nexport const FOCUS_SERVICE_PROVIDER = {\n  provide: FocusService,\n  useFactory: clrFocusServiceFactory,\n  deps: [[new Optional(), new SkipSelf(), FocusService], Renderer2],\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable, Observer } from 'rxjs';\n\nexport function wrapObservable<T>(\n  observable: Observable<T>,\n  onSubscribe?: (observer: Observer<T>) => void,\n  onUnsubscribe?: (observer: Observer<T>) => void\n): Observable<T> {\n  return Observable.create((observer: Observer<T>) => {\n    onSubscribe(observer);\n    const subscription = observable.subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n      if (onUnsubscribe) {\n        onUnsubscribe(observer);\n      }\n    };\n  });\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, Optional, PLATFORM_ID, Renderer2, SkipSelf } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IfOpenService } from '../../../utils/conditional/if-open.service';\nimport { customFocusableItemProvider } from '../../../utils/focus/focusable-item/custom-focusable-item-provider';\nimport { UNIQUE_ID } from '../../../utils/id-generator/id-generator.service';\nimport { ArrowKeyDirection } from '../../../utils/focus/arrow-key-direction.enum';\nimport { FocusService } from '../../../utils/focus/focus.service';\nimport { FocusableItem } from '../../../utils/focus/focusable-item/focusable-item';\nimport { linkParent, linkVertical } from '../../../utils/focus/focusable-item/linkers';\nimport { wrapObservable } from '../../../utils/focus/wrap-observable';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class DropdownFocusHandler implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private renderer: Renderer2,\n    @SkipSelf()\n    @Optional()\n    private parent: DropdownFocusHandler,\n    private ifOpenService: IfOpenService,\n    private focusService: FocusService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.resetChildren();\n    this.moveToFirstItemWhenOpen();\n    if (!this.parent) {\n      this.handleRootFocus();\n    }\n  }\n\n  private _unlistenFuncs = [];\n\n  /**\n   * If the dropdown was opened by clicking on the trigger, we automatically move to the first item\n   */\n  moveToFirstItemWhenOpen() {\n    this.ifOpenService.openChange.subscribe(open => {\n      if (open && this.ifOpenService.originalEvent) {\n        // Even if we properly waited for ngAfterViewInit, the container still wouldn't be attached to the DOM.\n        // So setTimeout is the only way to wait for the container to be ready to move focus to first item.\n        setTimeout(() => {\n          this.focusService.moveTo(this);\n          if (this.parent) {\n            this.focusService.move(ArrowKeyDirection.RIGHT);\n          } else {\n            this.focusService.move(ArrowKeyDirection.DOWN);\n          }\n        });\n      }\n    });\n  }\n\n  private focusBackOnTrigger = false;\n\n  /**\n   * Focus on the menu when it opens, and focus back on the root trigger when the whole dropdown becomes closed\n   */\n  handleRootFocus() {\n    this.ifOpenService.openChange.subscribe(open => {\n      if (!open) {\n        // We reset the state of the focus service both on initialization and when closing.\n        this.focusService.reset(this);\n        // But we only actively focus the trigger when closing, not on initialization.\n        if (this.focusBackOnTrigger) {\n          this.focus();\n        }\n      }\n      this.focusBackOnTrigger = open;\n    });\n  }\n\n  private _trigger: HTMLElement;\n  get trigger() {\n    return this._trigger;\n  }\n  set trigger(el: HTMLElement) {\n    this._trigger = el;\n    this.renderer.setAttribute(el, 'id', this.id);\n\n    if (this.parent) {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowright', event => this.ifOpenService.toggleWithEvent(event))\n      );\n    } else {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowup', event => this.ifOpenService.toggleWithEvent(event))\n      );\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowdown', event => this.ifOpenService.toggleWithEvent(event))\n      );\n      this.focusService.listenToArrowKeys(el);\n    }\n  }\n\n  private _container: HTMLElement;\n  get container() {\n    return this._container;\n  }\n  set container(el: HTMLElement) {\n    this._container = el;\n\n    // whether root container or not, tab key should always toggle (i.e. close) the container\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.tab', event => this.ifOpenService.toggleWithEvent(event))\n    );\n\n    if (this.parent) {\n      // if it's a nested container, pressing esc has the same effect as pressing left key, which closes the current\n      // popup and moves up to its parent. Here, we stop propagation so that the parent container\n      // doesn't receive the esc keydown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => {\n          this.focusService.move(ArrowKeyDirection.LEFT);\n          event.stopPropagation();\n        })\n      );\n    } else {\n      // The root container is the only one we register to the focus service, others do not need focus\n      this.focusService.registerContainer(el);\n\n      // The root container will simply close the container when esc key is pressed\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => this.ifOpenService.toggleWithEvent(event))\n      );\n\n      // When the user moves focus outside of the menu, we close the dropdown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'blur', event => {\n          // we clear out any existing focus on the items\n          this.children.pipe(take(1)).subscribe(items => items.forEach(item => item.blur()));\n\n          // event.relatedTarget is null in IE11. In that case we use document.activeElement which correctly points\n          // to the element we want to check. Note that other browsers might point document.activeElement to the\n          // wrong element. This is ok, because all the other browsers we support relies on event.relatedTarget.\n          const target = event.relatedTarget || document.activeElement;\n\n          // If the user clicks on an item which triggers the blur, we don't want to close it since it may open a submenu.\n          // In the case of needing to close it (i.e. user selected an item and the dropdown menu is set to close on\n          // selection), dropdown-item.ts handles it.\n          if (target && isPlatformBrowser(this.platformId)) {\n            if (el.contains(target) || target === this.trigger) {\n              return;\n            }\n          }\n          // We let the user move focus to where the want, we don't force the focus back on the trigger\n          this.focusBackOnTrigger = false;\n          this.ifOpenService.open = false;\n        })\n      );\n    }\n  }\n\n  focus() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.focus();\n    }\n  }\n  blur() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.trigger.click();\n    }\n  }\n\n  private children: ReplaySubject<FocusableItem[]>;\n  right?: Observable<FocusableItem>;\n  down?: Observable<FocusableItem>;\n  up?: Observable<FocusableItem>;\n\n  private openAndGetChildren() {\n    return wrapObservable(this.children, () => (this.ifOpenService.open = true));\n  }\n  private closeAndGetThis() {\n    return wrapObservable(of(this), () => (this.ifOpenService.open = false));\n  }\n\n  resetChildren() {\n    this.children = new ReplaySubject<FocusableItem[]>(1);\n    if (this.parent) {\n      this.right = this.openAndGetChildren().pipe(map(all => all[0]));\n    } else {\n      this.down = this.openAndGetChildren().pipe(map(all => all[0]));\n      this.up = this.openAndGetChildren().pipe(map(all => all[all.length - 1]));\n    }\n  }\n\n  addChildren(children: FocusableItem[]) {\n    linkVertical(children);\n    if (this.parent) {\n      linkParent(children, this.closeAndGetThis(), ArrowKeyDirection.LEFT);\n    }\n    this.children.next(children);\n  }\n\n  ngOnDestroy() {\n    this._unlistenFuncs.forEach((unlisten: () => void) => unlisten());\n    this.focusService.detachListeners();\n  }\n}\n\nexport const DROPDOWN_FOCUS_HANDLER_PROVIDER = customFocusableItemProvider(DropdownFocusHandler);\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\nimport { ArrowKeyDirection } from '../arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item';\n\n/**\n * Links a set of focusable items to a parent along one direction\n */\nexport function linkParent(\n  items: FocusableItem[],\n  parent: FocusableItem | Observable<FocusableItem>,\n  direction: ArrowKeyDirection\n) {\n  items.forEach(item => (item[direction] = parent));\n}\n\n/**\n * Double-links a set of focusable items vertically, possibly looping\n */\nexport function linkVertical(items: FocusableItem[], loop = true) {\n  items.forEach((item, index) => {\n    if (index > 0) {\n      item.up = items[index - 1];\n    }\n    if (index < items.length - 1) {\n      item.down = items[index + 1];\n    }\n  });\n  if (loop && items.length > 1) {\n    items[0].up = items[items.length - 1];\n    items[items.length - 1].down = items[0];\n  }\n}\n\n// Right now I only need the two linkers above, but we can easily add more linkers. A couple examples:\n// export function linkHorizontal(items: FocusableItem[], loop = true);\n// export function linkTable(items: FocusableItem[][]);\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class RootDropdownService {\n  private _changes: Subject<boolean> = new Subject<boolean>();\n\n  get changes(): Observable<boolean> {\n    return this._changes.asObservable();\n  }\n\n  closeMenus(): void {\n    this._changes.next(false);\n  }\n}\n\nexport function clrRootDropdownFactory(existing: RootDropdownService) {\n  return existing || new RootDropdownService();\n}\n\nexport const ROOT_DROPDOWN_PROVIDER = {\n  provide: RootDropdownService,\n  useFactory: clrRootDropdownFactory,\n  deps: [[new Optional(), new SkipSelf(), RootDropdownService]],\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum TabsLayout {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfOpenService } from '../../utils/conditional/if-open.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DROPDOWN_FOCUS_HANDLER_PROVIDER } from './providers/dropdown-focus-handler.service';\nimport { FOCUS_SERVICE_PROVIDER } from '../../utils/focus/focus.service';\n\nimport { ROOT_DROPDOWN_PROVIDER, RootDropdownService } from './providers/dropdown.service';\n\n@Component({\n  selector: 'clr-dropdown',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[class.dropdown]': 'true',\n    // the open class, also used in static version, is always present in the Angular version\n    // Angular takes care of hiding it, regardless of whether you use *clrIfOpen or not\n    '[class.open]': 'true',\n  },\n  providers: [\n    IfOpenService,\n    ROOT_DROPDOWN_PROVIDER,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    FOCUS_SERVICE_PROVIDER,\n    DROPDOWN_FOCUS_HANDLER_PROVIDER,\n  ],\n})\nexport class ClrDropdown implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public parent: ClrDropdown,\n    public ifOpenService: IfOpenService,\n    private cdr: ChangeDetectorRef,\n    dropdownService: RootDropdownService\n  ) {\n    this.subscriptions.push(dropdownService.changes.subscribe(value => (this.ifOpenService.open = value)));\n    this.subscriptions.push(ifOpenService.openChange.subscribe(value => this.cdr.markForCheck()));\n  }\n\n  @Input('clrCloseMenuOnItemClick') isMenuClosable: boolean = true;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\n@Injectable()\nexport class BasicFocusableItem implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private el: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    renderer.setAttribute(el.nativeElement, 'id', id);\n    renderer.setAttribute(el.nativeElement, 'tabindex', '-1');\n  }\n\n  disabled = false;\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n      this.el.nativeElement.focus();\n    }\n  }\n  blur() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n      this.el.nativeElement.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n\nexport const BASIC_FOCUSABLE_ITEM_PROVIDER = [\n  UNIQUE_ID_PROVIDER,\n  {\n    provide: FocusableItem,\n    useClass: BasicFocusableItem,\n  },\n];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\nimport { ClrDropdown } from './dropdown';\nimport { BASIC_FOCUSABLE_ITEM_PROVIDER } from '../../utils/focus/focusable-item/basic-focusable-item.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\nimport { RootDropdownService } from './providers/dropdown.service';\n\n@Directive({\n  selector: '[clrDropdownItem]',\n  host: {\n    '[class.disabled]': 'disabled',\n    '[class.dropdown-item]': 'true',\n    '[attr.role]': '\"menuitem\"',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.disabled]': \"(disabled && setByDeprecatedDisabled)? '' : null\",\n  },\n  providers: [BASIC_FOCUSABLE_ITEM_PROVIDER],\n})\nexport class ClrDropdownItem implements AfterViewInit {\n  constructor(\n    private dropdown: ClrDropdown,\n    private el: ElementRef<HTMLElement>,\n    private _dropdownService: RootDropdownService,\n    private renderer: Renderer2,\n    private focusableItem: FocusableItem\n  ) {}\n\n  private unlisten;\n  public setByDeprecatedDisabled: boolean = false;\n\n  @Input('clrDisabled')\n  set disabled(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n  }\n\n  get disabled() {\n    return this.focusableItem.disabled;\n  }\n\n  /*\n   * @deprecated since 3.0, remove in 4.0. the presence of this attribute makes it not-focusable in IE11. Use [clrDisabled] input instead.\n   */\n  @Input('disabled')\n  set disabledDeprecated(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n    this.setByDeprecatedDisabled = true;\n  }\n\n  get disabledDeprecated() {\n    return this.focusableItem.disabled;\n  }\n\n  ngAfterViewInit() {\n    this.unlisten = this.renderer.listen(this.el.nativeElement, 'click', () => this.onDropdownItemClick());\n  }\n\n  onDropdownItemClick(): void {\n    if (this.dropdown.isMenuClosable && !this.el.nativeElement.classList.contains('disabled')) {\n      this._dropdownService.closeMenus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.unlisten();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  Optional,\n  QueryList,\n  SkipSelf,\n} from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\n\n@Component({\n  selector: 'clr-dropdown-menu',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[attr.role]': '\"menu\"',\n  },\n})\nexport class ClrDropdownMenu extends AbstractPopover implements AfterContentInit, OnDestroy {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef<HTMLElement>,\n    @Optional()\n    @SkipSelf()\n    nested: ClrDropdownMenu,\n    focusHandler: DropdownFocusHandler\n  ) {\n    if (!parentHost) {\n      throw new Error('clr-dropdown-menu should only be used inside of a clr-dropdown');\n    }\n    super(injector, parentHost);\n    if (!nested) {\n      // Default positioning for normal dropdown is bottom-left\n      this.anchorPoint = Point.BOTTOM_LEFT;\n      this.popoverPoint = Point.LEFT_TOP;\n    } else {\n      // Default positioning for nested dropdown is right-top\n      this.anchorPoint = Point.RIGHT_TOP;\n      this.popoverPoint = Point.LEFT_TOP;\n    }\n    this.popoverOptions.allowMultipleOpen = true;\n    this.popoverOptions.ignoreGlobalESCListener = true;\n    this.closeOnOutsideClick = true;\n    this.focusHandler = focusHandler;\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // set the popover values based on menu position\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_RIGHT;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_LEFT;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_RIGHT;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-top':\n        this.anchorPoint = Point.RIGHT_TOP;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-bottom':\n        this.anchorPoint = Point.RIGHT_BOTTOM;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'left-top':\n        this.anchorPoint = Point.LEFT_TOP;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'left-bottom':\n        this.anchorPoint = Point.LEFT_BOTTOM;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      default:\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private focusHandler: DropdownFocusHandler;\n  @ContentChildren(FocusableItem) items: QueryList<FocusableItem>;\n\n  ngAfterContentInit() {\n    this.focusHandler.container = this.el.nativeElement;\n    this.items.changes.subscribe(() => this.focusHandler.addChildren(this.items.toArray()));\n    // I saw this on GitHub as a solution to avoid code duplication because of missed QueryList changes\n    this.items.notifyOnChanges();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.focusHandler.resetChildren();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener } from '@angular/core';\n\nimport { IfOpenService } from '../../utils/conditional/if-open.service';\n\nimport { ClrDropdown } from './dropdown';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\n\n@Directive({\n  // We support both selectors for legacy reasons\n  selector: '[clrDropdownTrigger],[clrDropdownToggle]',\n  host: {\n    '[class.dropdown-toggle]': 'isRootLevelToggle',\n    '[class.dropdown-item]': '!isRootLevelToggle',\n    '[class.expandable]': '!isRootLevelToggle',\n    '[class.active]': 'active',\n    '[attr.aria-haspopup]': '\"menu\"',\n    '[attr.aria-expanded]': 'active',\n  },\n})\nexport class ClrDropdownTrigger {\n  public isRootLevelToggle: boolean = true;\n\n  constructor(\n    dropdown: ClrDropdown,\n    private ifOpenService: IfOpenService,\n    el: ElementRef<HTMLElement>,\n    focusHandler: DropdownFocusHandler\n  ) {\n    // if the containing dropdown has a parent, then this is not the root level one\n    if (dropdown.parent) {\n      this.isRootLevelToggle = false;\n    }\n    focusHandler.trigger = el.nativeElement;\n  }\n\n  get active(): boolean {\n    return this.ifOpenService.open;\n  }\n\n  @HostListener('click', ['$event'])\n  onDropdownTriggerClick(event: any): void {\n    this.ifOpenService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrCommonPopoverModule } from '../common/popover.module';\n\nimport { ClrDropdown } from './dropdown';\nimport { ClrDropdownItem } from './dropdown-item';\nimport { ClrDropdownMenu } from './dropdown-menu';\nimport { ClrDropdownTrigger } from './dropdown-trigger';\n\nexport const CLR_DROPDOWN_DIRECTIVES: Type<any>[] = [ClrDropdown, ClrDropdownMenu, ClrDropdownTrigger, ClrDropdownItem];\n\n@NgModule({\n  imports: [CommonModule, ClrCommonPopoverModule],\n  declarations: [CLR_DROPDOWN_DIRECTIVES],\n  exports: [CLR_DROPDOWN_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrDropdownModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO Make this an enum\nexport const ALERT_TYPES: string[] = ['info', 'warning', 'danger', 'success'];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { AlertInfoObject } from '../utils/alert-info-object';\nimport { ALERT_TYPES } from '../utils/alert-types';\nimport { ClrCommonStringsService } from '../../../utils/i18n/common-strings.service';\n\n@Injectable()\nexport class AlertIconAndTypesService {\n  constructor(private commonStrings: ClrCommonStringsService) {}\n\n  private defaultIconShape = 'info-circle';\n  private _alertIconShape = '';\n  private _alertType = 'info';\n\n  get alertType(): string {\n    return this._alertType;\n  }\n  set alertType(val: string) {\n    if (ALERT_TYPES.indexOf(val) > -1) {\n      this._alertType = val;\n    }\n  }\n\n  get alertIconShape(): string {\n    if ('' === this._alertIconShape) {\n      return this.iconInfoFromType(this._alertType).shape;\n    }\n    return this._alertIconShape;\n  }\n  set alertIconShape(val: string) {\n    if (!val) {\n      this._alertIconShape = '';\n    } else if (val !== this._alertIconShape) {\n      this._alertIconShape = val;\n    }\n  }\n\n  get alertIconTitle(): string {\n    return this.iconInfoFromType(this._alertType).title;\n  }\n\n  public iconInfoFromType(type: string): AlertInfoObject {\n    const returnObj = { shape: '', cssClass: '', title: '' };\n\n    switch (type) {\n      case 'warning':\n        returnObj.shape = 'exclamation-triangle';\n        returnObj.cssClass = 'alert-warning';\n        returnObj.title = this.commonStrings.keys.warning;\n        break;\n      case 'danger':\n        returnObj.shape = 'exclamation-circle';\n        returnObj.cssClass = 'alert-danger';\n        returnObj.title = this.commonStrings.keys.danger;\n        break;\n      case 'success':\n        returnObj.shape = 'check-circle';\n        returnObj.cssClass = 'alert-success';\n        returnObj.title = this.commonStrings.keys.success;\n        break;\n      default:\n        returnObj.shape = this.defaultIconShape;\n        returnObj.cssClass = 'alert-info';\n        returnObj.title = this.commonStrings.keys.info;\n        break;\n    }\n\n    return returnObj;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrAlert } from '../alert';\n\n@Injectable()\nexport class MultiAlertService {\n  private allAlerts: QueryList<ClrAlert> = new QueryList<ClrAlert>();\n  private subscription: Subscription;\n  private _current = 0;\n\n  /**\n   * The Observable that lets other classes subscribe to changes\n   */\n  private _change = new Subject<number>();\n  public get changes(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  get current() {\n    return this._current;\n  }\n  set current(index: number) {\n    if (index !== this._current) {\n      this._current = index;\n      this._change.next(index);\n    }\n  }\n\n  get activeAlerts() {\n    return this.allAlerts.filter(alert => !alert._closed);\n  }\n\n  get currentAlert() {\n    return this.activeAlerts[this.current];\n  }\n\n  set currentAlert(alert: ClrAlert) {\n    this.current = this.activeAlerts.indexOf(alert);\n  }\n\n  get count() {\n    return this.activeAlerts.length;\n  }\n\n  manage(alerts: QueryList<ClrAlert>) {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.allAlerts = alerts;\n    this.subscription = this.allAlerts.changes.subscribe(() => {\n      if (this.current >= this.allAlerts.length) {\n        this.current = Math.max(0, this.allAlerts.length - 1);\n      }\n    });\n  }\n\n  next() {\n    this.current = this.current === this.activeAlerts.length - 1 ? 0 : this.current + 1;\n  }\n\n  previous() {\n    if (this.activeAlerts.length === 0) {\n      return;\n    }\n    this.current = this.current === 0 ? this.activeAlerts.length - 1 : this.current - 1;\n  }\n\n  close() {\n    this.previous();\n  }\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * @remark\n * This directive is used only of selectin alert text.\n */\n@Directive({\n  selector: '.alert-text',\n})\nexport class ClrAlertText {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  AfterViewInit,\n  ContentChildren,\n  QueryList,\n} from '@angular/core';\n\n// providers\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { AriaLiveService, AriaLivePoliteness } from '../../utils/a11y/aria-live.service';\nimport { ClrAlertText } from './alert-text';\n\n@Component({\n  selector: 'clr-alert',\n  providers: [AlertIconAndTypesService, AriaLiveService],\n  templateUrl: './alert.html',\n  styles: [':host { display: block; }'],\n})\nexport class ClrAlert implements AfterViewInit {\n  constructor(\n    public iconService: AlertIconAndTypesService,\n    public cdr: ChangeDetectorRef,\n    @Optional() public multiAlertService: MultiAlertService,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: AriaLiveService\n  ) {}\n\n  ngAfterViewInit() {\n    // Announce the first time the alert is render if it is not hidden\n    this.announceAriaLiveMessage();\n  }\n\n  @Input('clrAlertSizeSmall') isSmall: boolean = false;\n  @Input('clrAlertClosable') closable: boolean = true;\n  @Input('clrAlertAppLevel') isAppLevel: boolean = false;\n\n  // Aria\n  @Input() clrCloseButtonAriaLabel: string = this.commonStrings.keys.alertCloseButtonAriaLabel;\n\n  @Input('clrAlertClosed') _closed: boolean = false;\n  @Output('clrAlertClosedChange') _closedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrAlertType')\n  set alertType(val: string) {\n    this.iconService.alertType = val;\n  }\n\n  get alertType(): string {\n    return this.iconService.alertType;\n  }\n\n  /**\n   * clrPolite is not used in the code. Is here just to provide\n   * code complition and also mark component what type AriaLive\n   * will be used.\n   */\n  @Input('clrPolite') polite: boolean = true;\n  @Input('clrAssertive') assertive: boolean;\n  @Input('clrOff') off: boolean;\n  /**\n   * There is an order on how the attributes will take effect.\n   * Assertive, Off, Polite.\n   *\n   * Polite is default if non is passed.\n   *\n   * In the case of setting all of them to true. Assertive will be used.\n   *\n   */\n  get ariaLive(): AriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return AriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return AriaLivePoliteness.off;\n    }\n    return AriaLivePoliteness.polite;\n  }\n\n  @Input('clrAlertIcon')\n  set alertIconShape(value: string) {\n    this.iconService.alertIconShape = value;\n  }\n\n  get alertClass(): string {\n    return this.iconService.iconInfoFromType(this.iconService.alertType).cssClass;\n  }\n\n  @ContentChildren(ClrAlertText, { descendants: true, read: ElementRef })\n  alertTexts: QueryList<ElementRef>;\n  /**\n   * This handle the find what content to be annonced withing the aria-live container\n   * alerts that are hidden will be ignored.\n   *\n   * @remark\n   * We depend on the ClrAlertText Directive to find and parse the alert messages.\n   * Also this require the HTML markup for the alert to be\n   * ```html\n   * <div class=\"alert\" role=\"alert\">\n   *    <div class=\"alert-items\">\n   *        <div class=\"alert-item static\">\n   *            <span class=\"alert-text\">\n   *                 ...\n   *            </span>\n   *        </div>\n   *    </div>\n   * </div>\n   * ```\n   */\n  private announceAriaLiveMessage(): void {\n    if (!this.isHidden && this.alertTexts.length) {\n      const message = this.alertTexts.map(alertText => alertText.nativeElement.textContent).join(' ');\n      // Don't call announce when there is nothing to say\n      if (message) {\n        this.ariaLiveService.announce(message, this.ariaLive);\n      }\n    }\n  }\n\n  private previouslyHidden = false;\n  private hidden = false;\n\n  private detectChangesIfNeeded() {\n    if (this.previouslyHidden !== this.hidden) {\n      this.previouslyHidden = this.hidden;\n      this.cdr.detectChanges();\n      // when alert hidden state change we could check and try to announce it.\n      this.announceAriaLiveMessage();\n    }\n  }\n\n  get isHidden() {\n    if (this.multiAlertService) {\n      // change detection issue in production mode causes currentAlert to be undefined when only the first alert exists\n      // https://github.com/vmware/clarity/issues/2430\n      if (this.multiAlertService.currentAlert === this || this.multiAlertService.count === 0) {\n        if (this.hidden === true) {\n          this.previouslyHidden = true;\n          this.hidden = false;\n        }\n      } else if (this.hidden === false) {\n        this.previouslyHidden = false;\n        this.hidden = true;\n      }\n      this.detectChangesIfNeeded();\n    }\n\n    return this.hidden;\n  }\n\n  close(): void {\n    if (!this.closable) {\n      return;\n    }\n    this._closed = true;\n    if (this.multiAlertService) {\n      this.multiAlertService.close();\n    }\n    this._closedChanged.emit(true);\n  }\n\n  open(): void {\n    this._closed = false;\n    this._closedChanged.emit(false);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\n\n@Component({\n  selector: 'clr-alert-item',\n  template: `\n        <div class=\"alert-icon-wrapper\">\n            <clr-icon class=\"alert-icon\" \n              [attr.shape]=\"iconService.alertIconShape\" \n              [attr.title]=\"iconService.alertIconTitle\"></clr-icon>\n        </div>\n        <ng-content></ng-content>\n    `,\n  host: { class: 'alert-item' },\n})\nexport class ClrAlertItem {\n  constructor(public iconService: AlertIconAndTypesService) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\n\n@Component({\n  selector: 'clr-alerts',\n  templateUrl: './alerts.html',\n  providers: [MultiAlertService],\n  host: {\n    '[class.alerts]': 'true',\n    '[class.alert-danger]': \"this.currentAlertType == 'danger'\",\n    '[class.alert-info]': \"this.currentAlertType == 'info'\",\n    '[class.alert-success]': \"this.currentAlertType == 'success'\",\n    '[class.alert-warning]': \"this.currentAlertType == 'warning'\",\n  },\n  styles: [':host { display: block }'],\n})\nexport class ClrAlerts implements AfterContentInit, OnDestroy {\n  @ContentChildren(ClrAlert) allAlerts: QueryList<ClrAlert>;\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  public set _inputCurrentIndex(index: number) {\n    if (Number.isInteger(index) && index >= 0) {\n      this.multiAlertService.current = index;\n    }\n  }\n\n  @Output('clrCurrentAlertIndexChange') public currentAlertIndexChange = new EventEmitter<number>(false);\n\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n  @Output('clrCurrentAlertChange') public currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Ensure we are only dealing with alerts that have not been closed yet\n   */\n  get alerts() {\n    return this.allAlerts.filter(alert => {\n      return alert.isHidden === false;\n    });\n  }\n\n  get currentAlertType(): string {\n    if (this.multiAlertService.currentAlert) {\n      return this.multiAlertService.currentAlert.alertType;\n    }\n    return '';\n  }\n\n  constructor(public multiAlertService: MultiAlertService) {}\n\n  ngAfterContentInit() {\n    this.multiAlertService.manage(this.allAlerts);\n    this.multiAlertService.changes.subscribe(index => {\n      this.currentAlertIndexChange.next(index);\n      this.currentAlertChange.next(this.multiAlertService.currentAlert);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.multiAlertService.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-alerts-pager',\n  templateUrl: './alerts-pager.html',\n  host: { '[class.alerts-pager]': 'true' },\n})\nexport class ClrAlertsPager implements OnInit, OnDestroy {\n  private multiAlertServiceChanges: Subscription;\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n\n  @Output('clrCurrentAlertChange') currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  @Output('clrCurrentAlertIndexChange') currentAlertIndexChange = new EventEmitter<number>();\n\n  constructor(public multiAlertService: MultiAlertService, public commonStrings: ClrCommonStringsService) {}\n\n  ngOnInit() {\n    this.multiAlertServiceChanges = this.multiAlertService.changes.subscribe(index => {\n      this.currentAlertIndexChange.emit(index);\n      this.currentAlertChange.emit(this.multiAlertService.activeAlerts[index]);\n    });\n  }\n\n  pageUp() {\n    this.multiAlertService.next();\n  }\n\n  pageDown() {\n    this.multiAlertService.previous();\n  }\n\n  ngOnDestroy() {\n    this.multiAlertServiceChanges.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { ClrAlert } from './alert';\nimport { ClrAlertItem } from './alert-item';\nimport { ClrAlerts } from './alerts';\nimport { ClrAlertsPager } from './alerts-pager';\nimport { ClrAlertText } from './alert-text';\n\nexport const CLR_ALERT_DIRECTIVES: Type<any>[] = [ClrAlert, ClrAlertItem, ClrAlerts, ClrAlertsPager, ClrAlertText];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_ALERT_DIRECTIVES],\n  exports: [CLR_ALERT_DIRECTIVES],\n})\nexport class ClrAlertModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { ClrAlertModule } from './alert/alert.module';\n\n@NgModule({ exports: [ClrAlertModule] })\nexport class ClrEmphasisModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavCodes {\n  public static NAV_LEVEL_1: number = 1;\n  public static NAV_LEVEL_2: number = 2;\n  public static NAV_CLOSE_ALL: string = 'NAV_CLOSE_ALL';\n  public static NAV_OPEN: string = 'NAV_OPEN';\n  public static NAV_CLOSE: string = 'NAV_CLOSE';\n  public static NAV_TOGGLE: string = 'NAV_TOGGLE';\n  public static NAV_CLASS_HAMBURGER_MENU: string = 'open-hamburger-menu';\n  public static NAV_CLASS_OVERFLOW_MENU: string = 'open-overflow-menu';\n  public static NAV_CLASS_TRIGGER_1: string = 'header-hamburger-trigger';\n  public static NAV_CLASS_TRIGGER_2: string = 'header-overflow-trigger';\n  public static NAV_CLASS_LEVEL_1: string = 'clr-nav-level-1';\n  public static NAV_CLASS_LEVEL_2: string = 'clr-nav-level-2';\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavControlMessage {\n  constructor(private _controlCode: string, private _navLevel: number) {}\n\n  get controlCode(): string {\n    return this._controlCode;\n  }\n\n  get navLevel(): number {\n    return this._navLevel;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReplaySubject, Subject } from 'rxjs';\n\nimport { ResponsiveNavCodes } from '../responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../responsive-nav-control-message';\n\n@Injectable({ providedIn: 'root' })\nexport class ResponsiveNavigationService {\n  public responsiveNavList: number[] = [];\n  private registerNavSubject = new ReplaySubject<number[]>();\n  private controlNavSubject = new Subject<ResponsiveNavControlMessage>();\n\n  get registeredNavs(): Observable<number[]> {\n    return this.registerNavSubject.asObservable();\n  }\n\n  get navControl(): Observable<ResponsiveNavControlMessage> {\n    return this.controlNavSubject.asObservable();\n  }\n\n  constructor() {\n    this.closeAllNavs(); // We start with all navs closed\n  }\n\n  registerNav(navLevel: number): void {\n    if (!navLevel || this.isNavRegistered(navLevel)) {\n      return;\n    }\n    this.responsiveNavList.push(navLevel);\n    this.registerNavSubject.next(this.responsiveNavList);\n  }\n\n  isNavRegistered(navLevel: number): boolean {\n    if (this.responsiveNavList.indexOf(navLevel) > -1) {\n      console.error('Multiple clr-nav-level ' + navLevel + ' attributes found. Please make sure that only one exists');\n      return true;\n    }\n    return false;\n  }\n\n  unregisterNav(navLevel: number) {\n    const index = this.responsiveNavList.indexOf(navLevel);\n    if (index > -1) {\n      this.responsiveNavList.splice(index, 1);\n      this.registerNavSubject.next(this.responsiveNavList);\n    }\n  }\n\n  sendControlMessage(controlCode: string, navLevel: number) {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(controlCode, navLevel);\n    this.controlNavSubject.next(message);\n  }\n\n  closeAllNavs() {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(\n      ResponsiveNavCodes.NAV_CLOSE_ALL,\n      -999\n    );\n    this.controlNavSubject.next(message);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from '../nav/providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from '../nav/responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../nav/responsive-nav-control-message';\n\n@Directive({ selector: 'clr-main-container', host: { '[class.main-container]': 'true' } })\nexport class ClrMainContainer implements OnDestroy, OnInit {\n  private _subscription: Subscription;\n  private _classList: DOMTokenList;\n\n  constructor(private elRef: ElementRef, private responsiveNavService: ResponsiveNavigationService) {}\n\n  ngOnInit() {\n    this._classList = this.elRef.nativeElement.classList;\n    this._subscription = this.responsiveNavService.navControl.subscribe({\n      next: (message: ResponsiveNavControlMessage) => {\n        this.processMessage(message);\n      },\n    });\n  }\n\n  processMessage(message: ResponsiveNavControlMessage): void {\n    let navClass: string = ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU;\n    if (message.controlCode === ResponsiveNavCodes.NAV_CLOSE_ALL) {\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU);\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n      this.controlNav(message.controlCode, navClass);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navClass = ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU;\n      this.controlNav(message.controlCode, navClass);\n    }\n  }\n\n  controlNav(controlCode: string, navClass: string): void {\n    if (controlCode === ResponsiveNavCodes.NAV_OPEN) {\n      this._classList.add(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_CLOSE) {\n      this._classList.remove(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_TOGGLE) {\n      this._classList.toggle(navClass);\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrMainContainer } from './main-container';\n\nexport const CLR_LAYOUT_DIRECTIVES: Type<any>[] = [ClrMainContainer];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [CLR_LAYOUT_DIRECTIVES],\n  exports: [CLR_LAYOUT_DIRECTIVES],\n})\nexport class ClrMainContainerModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-main-container' })\nexport class MainContainerWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ResponsiveNavigationService } from '../providers/responsive-navigation.service';\nimport { MainContainerWillyWonka } from './main-container-willy-wonka';\n\n@Directive({ selector: 'clr-header' })\nexport class NavDetectionOompaLoompa extends OompaLoompa {\n  private responsiveNavService: ResponsiveNavigationService;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: MainContainerWillyWonka,\n    responsiveNavService: ResponsiveNavigationService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-header should only be used inside of a clr-main-container');\n    }\n    super(cdr, willyWonka);\n    this.responsiveNavService = responsiveNavService;\n  }\n\n  // NavDetectionOompaLoompa is the addition of the nav levels\n  // Since we support 2 levels, the possibilities are 0, 1 or 3 (1 + 2)\n  get flavor() {\n    return this.responsiveNavService.responsiveNavList.reduce((sum, navLevel) => sum + navLevel, 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-header',\n  template: `\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel1OnPage\"\n            class=\"header-hamburger-trigger\"\n            [attr.aria-label]=\"(openNavLevel !== responsiveNavCodes.NAV_LEVEL_1) ? commonStrings.keys.open : commonStrings.keys.close\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_1)\">\n            <span></span>\n        </button>\n        <ng-content></ng-content>\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel2OnPage\"\n            class=\"header-overflow-trigger\"\n            [attr.aria-label]=\"(openNavLevel !== responsiveNavCodes.NAV_LEVEL_2) ? commonStrings.keys.open : commonStrings.keys.close\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_2)\">\n            <span></span>\n        </button>\n        <div class=\"header-backdrop\" (click)=\"closeOpenNav()\"></div>\n    `,\n  host: { '[class.header]': 'true' },\n})\nexport class ClrHeader implements OnDestroy {\n  isNavLevel1OnPage = false;\n  isNavLevel2OnPage = false;\n  openNavLevel: number = null;\n  responsiveNavCodes = ResponsiveNavCodes;\n  private _subscription: Subscription;\n\n  constructor(\n    private responsiveNavService: ResponsiveNavigationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._subscription = this.responsiveNavService.registeredNavs.subscribe({\n      next: (navLevelList: number[]) => {\n        this.initializeNavTriggers(navLevelList);\n      },\n    });\n  }\n\n  // reset triggers. handles cases when an application has different nav levels on different pages.\n  resetNavTriggers() {\n    this.isNavLevel1OnPage = false;\n    this.isNavLevel2OnPage = false;\n  }\n\n  // decides which triggers to show on the header\n  initializeNavTriggers(navList: number[]): void {\n    this.resetNavTriggers();\n    if (navList.length > 2) {\n      console.error('More than 2 Nav Levels detected.');\n      return;\n    }\n    navList.forEach(navLevel => {\n      if (navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n        this.isNavLevel1OnPage = true;\n      } else if (navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n        this.isNavLevel2OnPage = true;\n      }\n    });\n  }\n\n  // closes the nav that is open\n  closeOpenNav() {\n    this.responsiveNavService.closeAllNavs();\n  }\n\n  // toggles the nav that is open\n  toggleNav(navLevel: number) {\n    this.openNavLevel = this.openNavLevel === navLevel ? null : navLevel;\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_TOGGLE, navLevel);\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\n\n@Directive({ selector: '[clr-nav-level]' })\nexport class ClrNavLevel implements OnInit {\n  @Input('clr-nav-level') _level: number;\n\n  constructor(private responsiveNavService: ResponsiveNavigationService, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.level !== ResponsiveNavCodes.NAV_LEVEL_1 && this.level !== ResponsiveNavCodes.NAV_LEVEL_2) {\n      console.error('Nav Level can only be 1 or 2');\n      return;\n    }\n    this.responsiveNavService.registerNav(this.level);\n    this.addNavClass(this.level);\n  }\n\n  addNavClass(level: number) {\n    const navHostClassList = this.elementRef.nativeElement.classList;\n    if (level === ResponsiveNavCodes.NAV_LEVEL_1) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_1);\n    } else if (level === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_2);\n    }\n  }\n\n  get level(): number {\n    return this._level;\n  }\n\n  // getter to access the responsive navigation codes from the template\n  get responsiveNavCodes(): ResponsiveNavCodes {\n    return ResponsiveNavCodes;\n  }\n\n  open(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_OPEN, this.level);\n  }\n\n  close(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_CLOSE, this.level);\n  }\n\n  // TODO: Figure out whats the best way to do this. Possible methods\n  // 1. HostListener (current solution)\n  // 2. Directives on the .nav-link class. We discussed on moving away from class selectors but I forget the reason\n  // why\n  @HostListener('click', ['$event.target'])\n  onMouseClick(target: any) {\n    let current: any = target; // Get the element in the DOM on which the mouse was clicked\n    const navHost: any = this.elementRef.nativeElement; // Get the current nav native HTML element\n\n    // Start checking if current and navHost are equal.\n    // If not traverse to the parentNode and check again.\n    while (current) {\n      if (current === navHost) {\n        return;\n      } else if (current.classList.contains('nav-link')) {\n        this.close();\n        return;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  ngOnDestroy() {\n    this.responsiveNavService.unregisterNav(this.level);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { MainContainerWillyWonka } from './chocolate/main-container-willy-wonka';\nimport { NavDetectionOompaLoompa } from './chocolate/nav-detection-oompa-loompa';\nimport { ClrHeader } from './header';\nimport { ClrNavLevel } from './nav-level';\n\nexport const CLR_NAVIGATION_DIRECTIVES: Type<any>[] = [\n  ClrHeader,\n  ClrNavLevel,\n  NavDetectionOompaLoompa,\n  MainContainerWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_NAVIGATION_DIRECTIVES],\n  exports: [CLR_NAVIGATION_DIRECTIVES],\n})\nexport class ClrNavigationModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  template: `\n      <ng-template>\n        <ng-content></ng-content>\n      </ng-template>\n    `,\n})\nexport class TemplateRefContainer {\n  @ViewChild(TemplateRef, { static: false })\n  template: TemplateRef<any>;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { TemplateRefContainer } from './template-ref-container';\n\nexport * from './template-ref-container';\n\nexport const TEMPLATE_REF_DIRECTIVES: Type<any>[] = [TemplateRefContainer];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TEMPLATE_REF_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TEMPLATE_REF_DIRECTIVES],\n  entryComponents: [TEMPLATE_REF_DIRECTIVES],\n  exports: [TEMPLATE_REF_DIRECTIVES],\n})\nexport class ClrTemplateRefModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-tabs' })\nexport class TabsWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Inject, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../../utils/conditional/if-active.service';\n\nimport { TabsWillyWonka } from './tabs-willy-wonka';\n\n@Directive({ selector: '[clrTabLink], clr-tab-content' })\nexport class ActiveOompaLoompa extends OompaLoompa {\n  private ifActive: IfActiveService;\n  private id: number;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: TabsWillyWonka,\n    @Inject(IF_ACTIVE_ID) id: number,\n    ifActive: IfActiveService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clrTabLink and clr-tab-content should only be used inside of a clr-tabs');\n    }\n    super(cdr, willyWonka);\n    this.ifActive = ifActive;\n    this.id = id;\n  }\n\n  get flavor() {\n    return this.ifActive.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\n\n// TODO: if we find more components that could use this, consider moving this to utils\n@Injectable()\nexport class AriaService {\n  public ariaLabelledBy: string;\n  public ariaControls: string;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, ViewContainerRef } from '@angular/core';\nimport { ClrTab } from '../tab';\nimport { TabsLayout } from '../enums/tabs-layout.enum';\n\n@Injectable()\nexport class TabsService {\n  private _children: ClrTab[] = [];\n\n  layout: TabsLayout = TabsLayout.HORIZONTAL;\n\n  register(tab: ClrTab) {\n    this._children.push(tab);\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  get activeTab() {\n    return this.children.find((tab: ClrTab) => {\n      return tab.active;\n    });\n  }\n\n  get overflowTabs() {\n    if (this.layout === TabsLayout.VERTICAL) {\n      return [];\n    } else {\n      return this.children.filter((tab: ClrTab) => tab.tabLink.inOverflow === true);\n    }\n  }\n\n  unregister(tab: ClrTab) {\n    const index = this.children.indexOf(tab);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  tabContentViewContainer: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EmbeddedViewRef, Inject, Input, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { AriaService } from './providers/aria.service';\nimport { TabsService } from './providers/tabs.service';\n\nlet nbTabContentComponents: number = 0;\n\n@Component({\n  selector: 'clr-tab-content',\n  template: `\n    <ng-template #tabContentProjectedRef>\n      <section [id]=\"tabContentId\" role=\"tabpanel\" class=\"tab-content\" [class.active]=\"active\"\n               [hidden]=\"!active\"\n               [attr.aria-labelledby]=\"ariaLabelledBy\"\n               [attr.aria-expanded]=\"active\"\n               [attr.aria-hidden]=\"!active\">\n        <ng-content></ng-content>\n      </section>\n    </ng-template>\n    `,\n})\nexport class ClrTabContent implements OnDestroy {\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private ariaService: AriaService,\n    private tabsService: TabsService\n  ) {\n    if (!this.tabContentId) {\n      this.tabContentId = 'clr-tab-content-' + nbTabContentComponents++;\n    }\n  }\n\n  private viewRef: EmbeddedViewRef<ClrTabContent>;\n\n  // The template must be applied on the top-down phase of view-child initialization to prevent\n  // components in the content from initializing before a content container exists.\n  // Some child components need their container for sizing calculations.\n  /* tslint:disable:no-unused-variable */\n  @ViewChild('tabContentProjectedRef', { static: true })\n  private set templateRef(value: TemplateRef<ClrTabContent>) {\n    this.viewRef = this.tabsService.tabContentViewContainer.createEmbeddedView(value);\n  }\n  /* tslint:enable:no-unused-variable */\n\n  get ariaLabelledBy(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  get tabContentId(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  @Input('id')\n  set tabContentId(id: string) {\n    this.ariaService.ariaControls = id;\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  ngOnDestroy(): void {\n    const index = this.tabsService.tabContentViewContainer.indexOf(this.viewRef);\n    if (index > -1) {\n      this.tabsService.tabContentViewContainer.remove(index);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { InjectionToken } from '@angular/core';\n\nlet nbTabsComponent = 0;\n\nexport const TABS_ID = new InjectionToken<number>('TABS_ID');\n\nexport function tokenFactory() {\n  return 'clr-tabs-' + nbTabsComponent++;\n}\n\nexport const TABS_ID_PROVIDER = {\n  provide: TABS_ID,\n  useFactory: tokenFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrFocusDirection {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  BOTH = 'both',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// Event.key key codes for standard browsers and IE/Edge\n\nexport enum KeyCodes {\n  ArrowUp = 'ArrowUp',\n  ArrowDown = 'ArrowDown',\n  ArrowRight = 'ArrowRight',\n  ArrowLeft = 'ArrowLeft',\n  Space = ' ',\n  Escape = 'Escape',\n  Home = 'Home',\n  End = 'End',\n  Enter = 'Enter',\n  Tab = 'Tab',\n}\n\nexport enum IEKeyCodes {\n  ArrowUp = 'Up',\n  ArrowDown = 'Down',\n  ArrowRight = 'Right',\n  ArrowLeft = 'Left',\n  Space = 'Spacebar',\n  Escape = 'Esc',\n  Home = 'Home',\n  End = 'End',\n  Enter = 'Enter',\n  Tab = 'Tab',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { TemplateRefContainer } from '../../utils/template-ref/template-ref-container';\nimport { TabsService } from './providers/tabs.service';\n\nimport { AriaService } from './providers/aria.service';\nimport { TABS_ID } from './tabs-id.provider';\nimport { TabsLayout } from './enums/tabs-layout.enum';\n\nlet nbTabLinkComponents: number = 0;\n\n@Directive({\n  selector: '[clrTabLink]',\n  host: {\n    '[attr.aria-hidden]': 'false',\n    '[class.btn]': 'true',\n    role: 'tab',\n    type: 'button',\n  },\n})\nexport class ClrTabLink {\n  private _inOverflow: boolean;\n\n  @Input('clrTabLinkInOverflow')\n  set inOverflow(inOverflow) {\n    this._inOverflow = inOverflow;\n  }\n\n  get inOverflow(): boolean {\n    return this._inOverflow && this.tabsService.layout !== TabsLayout.VERTICAL;\n  }\n\n  @HostBinding('class.btn-link')\n  @HostBinding('class.nav-link')\n  get addLinkClasses() {\n    return !this.inOverflow;\n  }\n\n  templateRefContainer: TemplateRefContainer;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private ariaService: AriaService,\n    public el: ElementRef,\n    private cfr: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number\n  ) {\n    if (!this.tabLinkId) {\n      this.tabLinkId = 'clr-tab-link-' + nbTabLinkComponents++;\n    }\n\n    // Tab links can be rendered in one of two places: in the main area or inside the overflow dropdown menu.\n    // Here, we create a container so that its template can be used to create embeddedView on the fly.\n    // See TabsService's renderView() method and how it's used in Tabs class for an example.\n    const factory = this.cfr.resolveComponentFactory(TemplateRefContainer);\n    this.templateRefContainer = this.viewContainerRef.createComponent(factory, 1, undefined, [\n      [this.el.nativeElement],\n    ]).instance;\n  }\n\n  @HostBinding('attr.aria-controls')\n  get ariaControls(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  get tabLinkId(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  @HostBinding('id')\n  @Input('id')\n  set tabLinkId(id: string) {\n    this.ariaService.ariaLabelledBy = id;\n  }\n\n  @HostListener('click')\n  activate() {\n    this.ifActiveService.current = this.id;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-selected')\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, Inject } from '@angular/core';\n\nimport { IF_ACTIVE_ID, IF_ACTIVE_ID_PROVIDER, IfActiveService } from '../../utils/conditional/if-active.service';\n\nimport { AriaService } from './providers/aria.service';\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\n\n@Component({\n  selector: 'clr-tab',\n  template: `\n        <ng-content></ng-content>\n    `,\n  providers: [IF_ACTIVE_ID_PROVIDER, AriaService],\n})\nexport class ClrTab {\n  @ContentChild(ClrTabLink, { static: true })\n  tabLink: ClrTabLink;\n  @ContentChild(ClrTabContent, { static: true })\n  tabContent: ClrTabContent;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private tabsService: TabsService\n  ) {\n    tabsService.register(this);\n  }\n\n  ngOnDestroy() {\n    this.tabsService.unregister(this);\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Injector, SkipSelf } from '@angular/core';\n\nimport { AbstractPopover } from '../../popover/common/abstract-popover';\nimport { Point } from '../../popover/common/popover';\n\n@Component({\n  selector: 'clr-tab-overflow-content',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n  },\n})\nexport class ClrTabOverflowContent extends AbstractPopover {\n  constructor(injector: Injector, @SkipSelf() parentHost: ElementRef) {\n    super(injector, parentHost);\n    this.anchorPoint = Point.BOTTOM_RIGHT;\n    this.popoverPoint = Point.RIGHT_TOP;\n    this.closeOnOutsideClick = true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Inject, PLATFORM_ID, HostBinding } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: '[clrKeyFocusItem]',\n})\nexport class ClrKeyFocusItem {\n  @HostBinding('attr.tabindex') tabIndex = -1;\n\n  get nativeElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(private elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.elementRef.nativeElement.focus();\n    }\n  }\n}\n","/*\n* Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n*/\n\nimport { KeyCodes, IEKeyCodes } from './../key-codes.enum';\n\nexport function preventArrowKeyScroll(event: KeyboardEvent) {\n  const keyCodes = getKeyCodes(event);\n\n  if (\n    event.key === keyCodes.ArrowUp ||\n    event.key === keyCodes.ArrowDown ||\n    event.key === keyCodes.ArrowLeft ||\n    event.key === keyCodes.ArrowRight\n  ) {\n    // prevent element container scroll\n    // MDN references this is really the only way to prevent native browser interactions\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets\n    event.preventDefault();\n  }\n}\n\nexport function getKeyCodes(event: KeyboardEvent) {\n  // IE does not properly follow the spec for `event.key` so we need to return a different enum for the key events\n  // We use `event.key` for optimal browser support, to detect IE/Edge check if `event.code` is undefined\n  const isIEKeyboardEvent = event.code === undefined;\n  return isIEKeyboardEvent ? IEKeyCodes : KeyCodes;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStrategy {\n  Default = 'default', // only one panel at a time\n  Multi = 'multi', // can have multiple panels open at a time\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStatus {\n  Inactive = 'inactive',\n  Error = 'error',\n  Complete = 'complete',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { EventEmitter, HostListener, Input, Output, Component, ContentChildren, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrKeyFocusItem } from './key-focus-item';\nimport { ClrFocusDirection } from './enums/focus-direction.enum';\nimport { KeyCodes } from './../key-codes.enum';\nimport { FocusableItem } from './interfaces';\nimport { preventArrowKeyScroll, getKeyCodes } from './util';\n\n@Component({\n  selector: '[clrKeyFocus]',\n  template: '<ng-content></ng-content>',\n})\nexport class ClrKeyFocus {\n  @Input('clrDirection') direction = ClrFocusDirection.VERTICAL;\n  @Input('clrFocusOnLoad') focusOnLoad = false;\n  @Output('clrFocusChange') private focusChange: EventEmitter<void> = new EventEmitter<void>();\n  @ContentChildren(ClrKeyFocusItem, { descendants: true })\n  private clrKeyFocusItems: QueryList<ClrKeyFocusItem>;\n\n  private _focusableItems: Array<FocusableItem>;\n  @Input('clrKeyFocus')\n  set focusableItems(elements: Array<FocusableItem>) {\n    // We accept a list of focusable elements (HTMLElements or existing Directives) or auto query for clrKeyFocusItem\n    // We accept a list reference in the cases where we cannot use ContentChildren to query\n    // ContentChildren can be unavailable if content is projected outside the scope of the component (see tabs).\n    if (elements && elements.length) {\n      this._focusableItems = elements;\n      this.initializeFocus();\n    }\n  }\n\n  get focusableItems() {\n    if (this._focusableItems) {\n      return this._focusableItems;\n    } else {\n      return this.clrKeyFocusItems.toArray();\n    }\n  }\n\n  private _current: number = 0;\n  get current() {\n    return this._current;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForItemUpdates());\n    this.initializeFocus();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.prevKeyPressed(event) && this.currentFocusIsNotFirstItem()) {\n      this.keyAction(() => this._current--);\n    } else if (this.nextKeyPressed(event) && this.currentFocusIsNotLastItem()) {\n      this.keyAction(() => this._current++);\n    } else if (event.code === KeyCodes.Home) {\n      this.keyAction(() => (this._current = 0));\n    } else if (event.code === KeyCodes.End) {\n      this.keyAction(() => (this._current = this.focusableItems.length - 1));\n    }\n\n    preventArrowKeyScroll(event);\n  }\n\n  @HostListener('click', ['$event'])\n  setClickedItemCurrent(event: any) {\n    let position: number;\n\n    if (this.focusableItems[0].nativeElement) {\n      position = this.focusableItems.map(item => item.nativeElement).indexOf(event.target);\n    } else {\n      position = this.focusableItems.indexOf(event.target);\n    }\n\n    if (position > -1) {\n      this._current = position;\n    }\n  }\n\n  resetTabFocus() {\n    this.currentItem.tabIndex = -1;\n    this._current = 0;\n    this.currentItem.tabIndex = 0;\n  }\n\n  moveTo(position: number) {\n    if (this.positionInRange(position) && position !== this._current) {\n      this.keyAction(() => (this._current = position));\n    }\n  }\n\n  private positionInRange(position: number) {\n    return position >= 0 && position < this.focusableItems.length;\n  }\n\n  private get currentItem() {\n    if (this._current >= this.focusableItems.length) {\n      return null;\n    }\n\n    return this.focusableItems[this._current];\n  }\n\n  private currentFocusIsNotFirstItem() {\n    return this._current - 1 >= 0;\n  }\n\n  private currentFocusIsNotLastItem() {\n    return this._current + 1 < this.focusableItems.length;\n  }\n\n  private initializeFocus() {\n    if (this.focusableItems && this.focusableItems.length) {\n      this.focusableItems.forEach(i => (i.tabIndex = -1));\n      this.currentItem.tabIndex = 0;\n    }\n\n    if (this.focusOnLoad) {\n      this.currentItem.focus();\n      this.focusChange.next();\n    }\n  }\n\n  private listenForItemUpdates() {\n    return this.clrKeyFocusItems.changes.subscribe(() => {\n      this.focusableItems.forEach(item => (item.tabIndex = -1));\n      this._current = 0;\n      this.currentItem.tabIndex = 0;\n    });\n  }\n\n  private keyAction(action: Function) {\n    this.currentItem.tabIndex = -1;\n    action.call(this);\n    this.currentItem.tabIndex = 0;\n    this.currentItem.focus();\n    this.focusChange.next();\n  }\n\n  private nextKeyPressed(event: KeyboardEvent) {\n    const keyCodes = getKeyCodes(event);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return event.key === keyCodes.ArrowDown;\n      case ClrFocusDirection.HORIZONTAL:\n        return event.key === keyCodes.ArrowRight;\n      case ClrFocusDirection.BOTH:\n        return event.key === keyCodes.ArrowDown || event.key === keyCodes.ArrowRight;\n      default:\n        return false;\n    }\n  }\n\n  private prevKeyPressed(event: KeyboardEvent) {\n    const keyCodes = getKeyCodes(event);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return event.key === keyCodes.ArrowUp;\n      case ClrFocusDirection.HORIZONTAL:\n        return event.key === keyCodes.ArrowLeft;\n      case ClrFocusDirection.BOTH:\n        return event.key === keyCodes.ArrowUp || event.key === keyCodes.ArrowLeft;\n      default:\n        return false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  Inject,\n  QueryList,\n  Input,\n  OnDestroy,\n  HostBinding,\n  ViewContainerRef,\n  ViewChild,\n  PLATFORM_ID,\n} from '@angular/core';\n\nimport { IfActiveService } from '../../utils/conditional/if-active.service';\nimport { IfOpenService } from '../../utils/conditional/if-open.service';\n\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTab } from './tab';\nimport { ClrTabLink } from './tab-link.directive';\nimport { TABS_ID, TABS_ID_PROVIDER } from './tabs-id.provider';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { TabsLayout } from './enums/tabs-layout.enum';\nimport { Subscription } from 'rxjs';\nimport { ClrKeyFocus } from '../../utils/focus/key-focus/key-focus';\nimport { startWith, filter } from 'rxjs/operators';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-tabs',\n  template: `\n        <ul class=\"nav\" role=\"tablist\" [attr.aria-owns]=\"tabIds\" [clrKeyFocus]=\"tabLinkElements\" clrDirection=\"both\"\n            (clrFocusChange)=\"checkFocusVisible()\">\n            <!--tab links-->\n            <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                <ng-container *ngIf=\"link.tabsId === tabsId && !link.inOverflow\">\n                    <li role=\"presentation\" class=\"nav-item\">\n                        <ng-container [ngTemplateOutlet]=\"link.templateRefContainer.template\"></ng-container>\n                    </li>\n                </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"tabsService.overflowTabs.length > 0\">\n                <div class=\"tabs-overflow bottom-right\" [class.open]=\"ifOpenService.open\" role=\"presentation\">\n                    <li role=\"application\" class=\"nav-item\" (click)=\"toggleOverflow($event)\">\n                        <button class=\"btn btn-link nav-link dropdown-toggle\" type=\"button\" aria-hidden=\"true\"\n                                [class.active]=\"activeTabInOverflow\" [class.open]=\"inOverflow()\" tabIndex=\"-1\">\n                            <clr-icon shape=\"ellipsis-horizontal\"\n                              [class.is-info]=\"ifOpenService.open\"\n                              [attr.title]=\"commonStrings.keys.more\"></clr-icon>\n                        </button>\n                    </li>\n                    <!--tab links in overflow menu-->\n                    <clr-tab-overflow-content>\n                        <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                            <ng-container *ngIf=\"link.tabsId === tabsId && link.inOverflow\"\n                                          [ngTemplateOutlet]=\"link.templateRefContainer.template\">\n                            </ng-container>\n                        </ng-container>\n                    </clr-tab-overflow-content>\n                </div>\n            </ng-container>\n        </ul>\n        <ng-container #tabContentViewContainer></ng-container>\n    `,\n  providers: [IfActiveService, IfOpenService, TabsService, TABS_ID_PROVIDER],\n})\nexport class ClrTabs implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  private get overflowPosition() {\n    return this._tabLinkDirectives.filter(link => !link.inOverflow).length;\n  }\n\n  /* tslint:disable:no-unused-variable */\n  @ViewChild('tabContentViewContainer', { static: true, read: ViewContainerRef })\n  private set tabContentViewContainer(value: ViewContainerRef) {\n    this.tabsService.tabContentViewContainer = value;\n  }\n  /* tslint:enable:no-unused-variable */\n\n  @Input('clrLayout')\n  set layout(layout: TabsLayout) {\n    if (\n      Object.keys(TabsLayout)\n        .map(key => {\n          return TabsLayout[key];\n        })\n        .indexOf(layout) >= 0\n    ) {\n      this.tabsService.layout = layout;\n    }\n  }\n  get layout(): TabsLayout {\n    return this.tabsService.layout;\n  }\n\n  @ContentChildren(ClrTab) private tabs: QueryList<ClrTab>;\n\n  private _tabLinkDirectives: ClrTabLink[] = [];\n  get tabLinkDirectives(): ClrTabLink[] {\n    return this._tabLinkDirectives;\n  }\n\n  tabLinkElements: HTMLElement[] = [];\n\n  @ViewChild(ClrKeyFocus, { static: true })\n  keyFocus: ClrKeyFocus;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    public ifOpenService: IfOpenService,\n    public tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  get activeTabInOverflow() {\n    return this.tabsService.overflowTabs.indexOf(this.tabsService.activeTab) > -1;\n  }\n\n  get tabIds() {\n    return this.tabsService.children.map(tab => tab.tabLink.tabLinkId).join(' ');\n  }\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForTabLinkChanges(), this.listenForOverflowMenuFocusChanges());\n\n    if (typeof this.ifActiveService.current === 'undefined' && this.tabLinkDirectives[0]) {\n      this.tabLinkDirectives[0].activate();\n    }\n  }\n\n  toggleOverflow(event: any) {\n    this.ifOpenService.toggleWithEvent(event);\n  }\n\n  checkFocusVisible() {\n    if (!this.ifOpenService.open && this.inOverflow()) {\n      this.ifOpenService.open = true;\n    } else if (this.ifOpenService.open && !this.inOverflow()) {\n      this.ifOpenService.open = false;\n    }\n  }\n\n  inOverflow() {\n    return (\n      this.tabLinkElements.indexOf(document.activeElement as HTMLElement) > -1 &&\n      this.keyFocus.current >= this.overflowPosition\n    );\n  }\n\n  @HostBinding('class.tabs-vertical')\n  get isVertical() {\n    return this.layout === TabsLayout.VERTICAL;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n\n  private listenForTabLinkChanges() {\n    return this.tabs.changes.pipe(startWith(this.tabs.map(tab => tab.tabLink))).subscribe(() => {\n      this._tabLinkDirectives = this.tabs.map(tab => tab.tabLink);\n      this.tabLinkElements = this._tabLinkDirectives.map(tab => tab.el.nativeElement);\n    });\n  }\n\n  private listenForOverflowMenuFocusChanges() {\n    return this.ifOpenService.openChange.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(open => {\n      if (open && !this.inOverflow()) {\n        this.focusToFirstItemInOverflow();\n      } else if (!open && this.nextFocusedItemIsNotInOverflow()) {\n        this.keyFocus.resetTabFocus();\n      }\n    });\n  }\n\n  private focusToFirstItemInOverflow() {\n    this.keyFocus.moveTo(this.overflowPosition);\n  }\n\n  private nextFocusedItemIsNotInOverflow() {\n    return this.tabLinkElements.find(e => e === document.activeElement) === undefined;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrKeyFocus } from './key-focus';\nimport { ClrKeyFocusItem } from './key-focus-item';\n\nconst KEY_FOCUS_DIRECTIVES: Type<any>[] = [ClrKeyFocus, ClrKeyFocusItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [KEY_FOCUS_DIRECTIVES],\n  exports: [KEY_FOCUS_DIRECTIVES],\n})\nexport class ClrKeyFocusModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonPopoverModule } from '../../popover/common/popover.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrTemplateRefModule } from '../../utils/template-ref/template-ref.module';\n\nimport { ActiveOompaLoompa } from './chocolate/active-oompa-loompa';\nimport { TabsWillyWonka } from './chocolate/tabs-willy-wonka';\nimport { ClrTab } from './tab';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\nimport { ClrTabOverflowContent } from './tab-overflow-content';\nimport { ClrTabs } from './tabs';\nimport { ClrKeyFocusModule } from '../../utils/focus/key-focus/key-focus.module';\n\nexport const CLR_TABS_DIRECTIVES: Type<any>[] = [\n  ClrTabContent,\n  ClrTab,\n  ClrTabs,\n  ClrTabOverflowContent,\n  ClrTabLink,\n  TabsWillyWonka,\n  ActiveOompaLoompa,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrCommonPopoverModule,\n    ClrConditionalModule,\n    ClrIconModule,\n    ClrTemplateRefModule,\n    ClrKeyFocusModule,\n  ],\n  declarations: [CLR_TABS_DIRECTIVES],\n  exports: [CLR_TABS_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrTabsModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const FOCUS_ON_VIEW_INIT = new InjectionToken<boolean>('FOCUS_ON_VIEW_INIT');\n\n// This provider holds the default value for clrFocusOnViewInit directive's isEnabled property.\n// So users can interject this provider and set their own value for this provider.\nexport const FOCUS_ON_VIEW_INIT_PROVIDER = {\n  provide: FOCUS_ON_VIEW_INIT,\n  useValue: true,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_ON_VIEW_INIT } from './focus-on-view-init.provider';\n\n/*  This directive is for guiding the document focus to the newly added content when its view is initialized \n    so that assistive technologies can read its content. */\n@Directive({\n  selector: '[clrFocusOnViewInit]',\n})\nexport class ClrFocusOnViewInit implements AfterViewInit {\n  constructor(\n    private el: ElementRef,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(FOCUS_ON_VIEW_INIT) private focusOnViewInit: boolean,\n    @Inject(DOCUMENT) document: any,\n    private renderer: Renderer2\n  ) {\n    this._isEnabled = this.focusOnViewInit;\n\n    // Angular compiler doesn't understand the type Document\n    // when working out the metadata for injectable parameters,\n    // even though it understands the injection token DOCUMENT\n    // https://github.com/angular/angular/issues/20351\n    this.document = document;\n  }\n\n  private document: Document;\n  private directFocus = true; // true if the element gets focused without need to set tabindex;\n\n  @HostListener('focusout')\n  onFocusout() {\n    if (!this.directFocus) {\n      // manually set attributes and styles should be removed\n      this.renderer.removeAttribute(this.el.nativeElement, 'tabindex');\n      this.renderer.setStyle(this.el.nativeElement, 'outline', null);\n    }\n  }\n\n  private _isEnabled: boolean;\n  @Input('clrFocusOnViewInit')\n  set isEnabled(value: boolean) {\n    if (this.focusOnViewInit && typeof value === 'boolean') {\n      this._isEnabled = value;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.focus();\n  }\n\n  private focus() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!this._isEnabled) {\n      return;\n    }\n    if (this.document && this.document.activeElement !== this.el.nativeElement) {\n      this.el.nativeElement.focus();\n      if (this.document.activeElement !== this.el.nativeElement) {\n        // if it's not directly focused now, it means it was a non-interactive element\n        // so we need to give it a tabindex.\n        this.directFocus = false;\n        this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n        this.renderer.setStyle(this.el.nativeElement, 'outline', 'none');\n        this.el.nativeElement.focus();\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrFocusOnViewInit } from './focus-on-view-init';\nimport { FOCUS_ON_VIEW_INIT_PROVIDER } from './focus-on-view-init.provider';\n\nexport const FOCUS_ON_VIEW_INIT_DIRECTIVES: Type<any>[] = [ClrFocusOnViewInit];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n  providers: [FOCUS_ON_VIEW_INIT_PROVIDER],\n  exports: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n})\nexport class ClrFocusOnViewInitModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavGroupRegistrationService {\n  public navGroupCount: number = 0;\n\n  registerNavGroup() {\n    this.navGroupCount++;\n  }\n\n  unregisterNavGroup(): void {\n    this.navGroupCount--;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavIconService {\n  private _icons: number = 0;\n\n  get hasIcons(): boolean {\n    return this._icons > 0;\n  }\n\n  registerIcon(): void {\n    this._icons++;\n  }\n\n  unregisterIcon(): void {\n    this._icons--;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavService {\n  private _animateOnCollapsed: Subject<boolean> = new Subject<boolean>();\n\n  get animateOnCollapsed(): Observable<boolean> {\n    return this._animateOnCollapsed.asObservable();\n  }\n\n  private _collapsedChanged: Subject<boolean> = new Subject<boolean>();\n\n  get collapsedChanged(): Observable<boolean> {\n    return this._collapsedChanged.asObservable();\n  }\n\n  private _collapsed: boolean = false;\n\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n\n  set collapsed(value: boolean) {\n    value = !!value;\n    if (this.collapsible && this._collapsed !== value) {\n      this.updateCollapseBehavior(value);\n    }\n  }\n\n  private _collapsible: boolean = false;\n\n  get collapsible(): boolean {\n    return this._collapsible;\n  }\n\n  set collapsible(value: boolean) {\n    value = !!value;\n    if (this._collapsible !== value) {\n      if (!value && this.collapsed) {\n        this.updateCollapseBehavior(false);\n      }\n      this._collapsible = value;\n    }\n  }\n\n  private updateCollapseBehavior(value: boolean): void {\n    this._animateOnCollapsed.next(value);\n    this._collapsed = value;\n    this._collapsedChanged.next(value);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-vertical-nav',\n  templateUrl: './vertical-nav.html',\n  providers: [VerticalNavService, VerticalNavIconService, VerticalNavGroupRegistrationService],\n  host: {\n    class: 'clr-vertical-nav',\n    '[class.is-collapsed]': 'collapsed',\n    '[class.has-nav-groups]': 'hasNavGroups',\n    '[class.has-icons]': 'hasIcons',\n  },\n})\nexport class ClrVerticalNav implements OnDestroy {\n  get collapsible(): boolean {\n    return this._navService.collapsible;\n  }\n\n  @Input('clrVerticalNavCollapsible')\n  set collapsible(value: boolean) {\n    this._navService.collapsible = value;\n  }\n\n  get collapsed(): boolean {\n    return this._navService.collapsed;\n  }\n\n  @Input('clrVerticalNavCollapsed')\n  set collapsed(value: boolean) {\n    this._navService.collapsed = value;\n  }\n\n  @Output('clrVerticalNavCollapsedChange')\n  private _collapsedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  get hasNavGroups(): boolean {\n    return this._navGroupRegistrationService.navGroupCount > 0;\n  }\n\n  get hasIcons(): boolean {\n    return this._navIconService.hasIcons;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.collapsible) {\n      return null;\n    }\n    return !this.collapsed ? 'true' : 'false';\n  }\n\n  private _sub: Subscription;\n\n  constructor(\n    private _navService: VerticalNavService,\n    private _navIconService: VerticalNavIconService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._sub = this._navService.collapsedChanged.subscribe(value => {\n      this._collapsedChanged.emit(value);\n    });\n  }\n\n  toggleByButton() {\n    this.collapsed = !this.collapsed;\n  }\n\n  ngOnDestroy() {\n    this._sub.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavGroupService {\n  private _expandChange: Subject<boolean> = new Subject<boolean>();\n\n  get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  expand(): void {\n    this._expandChange.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\nimport { AfterContentInit, Component, EventEmitter, HostBinding, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\nconst EXPANDED_STATE: string = 'expanded';\nconst COLLAPSED_STATE: string = 'collapsed';\n\n@Component({\n  selector: 'clr-vertical-nav-group',\n  templateUrl: './vertical-nav-group.html',\n  providers: [IfExpandService, VerticalNavGroupService],\n  animations: [\n    trigger('clrExpand', [\n      state(EXPANDED_STATE, style({ height: '*' })),\n      state(COLLAPSED_STATE, style({ height: 0, 'overflow-y': 'hidden', visibility: 'hidden' })),\n      transition(`${EXPANDED_STATE} <=> ${COLLAPSED_STATE}`, animate('0.2s ease-in-out')),\n    ]),\n  ],\n  host: { class: 'nav-group' },\n})\nexport class ClrVerticalNavGroup implements AfterContentInit, OnDestroy {\n  constructor(\n    private _itemExpand: IfExpandService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    private _navGroupService: VerticalNavGroupService,\n    private _navService: VerticalNavService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._navGroupRegistrationService.registerNavGroup();\n\n    // FIXME: This subscription handles a corner case\n    // Vertical Nav collapse requires the animation to run first and then\n    // remove the nodes from the DOM. If the user directly sets the input\n    // on the clrIfExpanded directive, we have no chance to run the animation\n    // and wait for it to complete. This subscription makes sure that the\n    // animation states are correct for that edge case.\n    this._subscriptions.push(\n      this._itemExpand.expandChange.subscribe(value => {\n        if (value && this.expandAnimationState === COLLAPSED_STATE) {\n          if (this._navService.collapsed) {\n            this._navService.collapsed = false;\n          }\n          this.expandAnimationState = EXPANDED_STATE;\n        } else if (!value && this.expandAnimationState === EXPANDED_STATE) {\n          this.expandAnimationState = COLLAPSED_STATE;\n        }\n      })\n    );\n\n    // 1. If the nav is collapsing, close the open nav group + save its state\n    // 2. If the nav is expanding, expand the nav group if the previous state was expanded\n    this._subscriptions.push(\n      this._navService.animateOnCollapsed.subscribe((goingToCollapse: boolean) => {\n        if (goingToCollapse && this.expanded) {\n          this.wasExpanded = true;\n          this.expandAnimationState = COLLAPSED_STATE;\n        } else if (!goingToCollapse && this.wasExpanded) {\n          this.expandGroup();\n          this.wasExpanded = false;\n        }\n      })\n    );\n\n    // If a link is clicked, expand the nav group\n    this._subscriptions.push(\n      this._navGroupService.expandChange.subscribe((expand: boolean) => {\n        if (expand && !this.expanded) {\n          this.expandGroup();\n        }\n      })\n    );\n  }\n\n  private wasExpanded: boolean = false;\n\n  @HostBinding('class.is-expanded')\n  get expanded(): boolean {\n    return this._itemExpand.expanded;\n  }\n\n  set expanded(value: boolean) {\n    if (this._itemExpand.expanded !== value) {\n      this._itemExpand.expanded = value;\n      this.expandedChange.emit(value);\n    }\n  }\n\n  @Input('clrVerticalNavGroupExpanded')\n  set userExpandedInput(value: boolean) {\n    value = !!value;\n    if (this.expanded !== value) {\n      // We have to call toggleExpand because some cases require animations to occur first\n      // Directly setting the Expand service value skips the animation and can result in\n      // nodes in the DOM but the nav group still being collapsed\n      this.toggleExpand();\n    }\n  }\n\n  @Output('clrVerticalNavGroupExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  private _subscriptions: Subscription[] = [];\n\n  private _expandAnimationState: string = COLLAPSED_STATE;\n\n  expandGroup(): void {\n    this.expanded = true;\n    // Expanded animation occurs after Expand.expand is set to true\n    this.expandAnimationState = EXPANDED_STATE;\n  }\n\n  collapseGroup(): void {\n    // If a Vertical Nav Group toggle button is clicked while the Vertical Nav is in Collapsed state,\n    // the Vertical Nav should be expanded first.\n    this.expandAnimationState = COLLAPSED_STATE;\n  }\n\n  // closes a group after the collapse animation\n  expandAnimationDone($event: AnimationEvent) {\n    if ($event.toState === COLLAPSED_STATE) {\n      this.expanded = false;\n    }\n  }\n\n  get expandAnimationState(): string {\n    return this._expandAnimationState;\n  }\n\n  set expandAnimationState(value: string) {\n    if (value !== this._expandAnimationState) {\n      this._expandAnimationState = value;\n    }\n  }\n\n  toggleExpand(): void {\n    if (this.expanded) {\n      this.collapseGroup();\n    } else {\n      // If nav is collasped, first open the nav\n      if (this._navService.collapsed) {\n        this._navService.collapsed = false;\n      }\n      // then expand the nav group\n      this.expandGroup();\n    }\n  }\n\n  ngAfterContentInit() {\n    // This makes sure that if someone marks a nav group expanded in a collapsed nav\n    // the expanded property is switched back to collapsed state.\n    if (this._navService.collapsed && this.expanded) {\n      this.wasExpanded = true;\n      this.expandAnimationState = COLLAPSED_STATE;\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this._navGroupRegistrationService.unregisterNavGroup();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-vertical-nav-group-children',\n  template: `\n        <ng-content></ng-content>\n    `,\n})\nexport class ClrVerticalNavGroupChildren {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy } from '@angular/core';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\n\n@Directive({ selector: '[clrVerticalNavIcon]', host: { class: 'nav-icon' } })\nexport class ClrVerticalNavIcon implements OnDestroy {\n  constructor(private _verticalNavIconService: VerticalNavIconService) {\n    this._verticalNavIconService.registerIcon();\n  }\n\n  ngOnDestroy() {\n    this._verticalNavIconService.unregisterIcon();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, HostListener, Optional } from '@angular/core';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\n\n@Component({\n  selector: '[clrVerticalNavLink]',\n  template: `\n        <ng-content select=\"[clrVerticalNavIcon]\"></ng-content>\n        <span class=\"nav-text\">\n            <ng-content></ng-content>    \n        </span>\n    `,\n  host: { class: 'nav-link' },\n})\nexport class ClrVerticalNavLink {\n  constructor(@Optional() private _navGroupService: VerticalNavGroupService) {}\n\n  @HostListener('click')\n  public expandParentNavGroup(): void {\n    if (this._navGroupService) {\n      this._navGroupService.expand();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrVerticalNav } from './vertical-nav';\nimport { ClrVerticalNavGroup } from './vertical-nav-group';\nimport { ClrVerticalNavGroupChildren } from './vertical-nav-group-children';\nimport { ClrVerticalNavIcon } from './vertical-nav-icon';\nimport { ClrVerticalNavLink } from './vertical-nav-link';\n\nexport const CLR_VERTICAL_NAV_DIRECTIVES: Type<any>[] = [\n  ClrVerticalNav,\n  ClrVerticalNavLink,\n  ClrVerticalNavGroup,\n  ClrVerticalNavGroupChildren,\n  ClrVerticalNavIcon,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrConditionalModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_VERTICAL_NAV_DIRECTIVES],\n  exports: [CLR_VERTICAL_NAV_DIRECTIVES, ClrConditionalModule, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrVerticalNavModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrMainContainerModule } from './main-container/main-container.module';\nimport { ClrNavigationModule } from './nav/navigation.module';\nimport { ClrTabsModule } from './tabs/tabs.module';\nimport { ClrVerticalNavModule } from './vertical-nav/vertical-nav.module';\n\n@NgModule({ exports: [ClrMainContainerModule, ClrNavigationModule, ClrTabsModule, ClrVerticalNavModule] })\nexport class ClrLayoutModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class ScrollingService {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  stopScrolling(): void {\n    this._document.body.classList.add('no-scrolling');\n  }\n\n  resumeScrolling(): void {\n    if (this._document.body.classList.contains('no-scrolling')) {\n      this._document.body.classList.remove('no-scrolling');\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\nimport {\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  ViewChild,\n} from '@angular/core';\nimport { FocusTrapDirective } from '../utils/focus-trap/focus-trap.directive';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../utils/id-generator/id-generator.service';\nimport { ScrollingService } from '../utils/scrolling/scrolling-service';\n\n@Component({\n  selector: 'clr-modal',\n  viewProviders: [ScrollingService],\n  templateUrl: './modal.html',\n  styles: [\n    `\n        :host { display: none; }\n        :host.open { display: inline; }\n    `,\n  ],\n  animations: [\n    trigger('fadeDown', [\n      transition('* => false', [style({ opacity: 0, transform: 'translate(0, -25%)' }), animate('0.2s ease-in-out')]),\n      transition('false => *', [animate('0.2s ease-in-out', style({ opacity: 0, transform: 'translate(0, -25%)' }))]),\n    ]),\n    trigger('fade', [\n      transition('void => *', [style({ opacity: 0 }), animate('0.2s ease-in-out', style({ opacity: 0.85 }))]),\n      transition('* => void', [animate('0.2s ease-in-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrModal implements OnChanges, OnDestroy {\n  @ViewChild(FocusTrapDirective, { static: false })\n  focusTrap: FocusTrapDirective;\n\n  @HostBinding('class.open')\n  @Input('clrModalOpen')\n  _open: boolean = false;\n  @Output('clrModalOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrModalClosable') closable: boolean = true;\n  @Input('clrModalSize') size: string;\n  @Input('clrModalStaticBackdrop') staticBackdrop: boolean = true;\n  @Input('clrModalSkipAnimation') skipAnimation: string = 'false';\n\n  // presently this is only used by wizards\n  @Input('clrModalOverrideScrollService') bypassScrollService: boolean = false;\n  @Input('clrModalPreventClose') stopClose: boolean = false;\n  @Output('clrModalAlternateClose') altClose: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  constructor(\n    private _scrollingService: ScrollingService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public modalId: string\n  ) {}\n\n  // Detect when _open is set to true and set no-scrolling to true\n  ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n    if (!this.bypassScrollService && changes && changes.hasOwnProperty('_open')) {\n      if (changes._open.currentValue) {\n        this._scrollingService.stopScrolling();\n      } else {\n        this._scrollingService.resumeScrolling();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._scrollingService.resumeScrolling();\n  }\n\n  open(): void {\n    if (this._open) {\n      return;\n    }\n    this._open = true;\n    this._openChanged.emit(true);\n  }\n\n  @HostListener('body:keyup.escape')\n  close(): void {\n    if (this.stopClose) {\n      this.altClose.emit(false);\n      return;\n    }\n    if (!this.closable || !this._open) {\n      return;\n    }\n    this._open = false;\n    // SPECME\n    this.focusTrap.setPreviousFocus(); // Handles moving focus back to the element that had it before.\n  }\n\n  fadeDone(e: AnimationEvent) {\n    if (e.toState === 'void') {\n      // TODO: Investigate if we can decouple from animation events\n      this._openChanged.emit(false);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\n\n/**\n * Allows modal overflow area to be scrollable via keyboard.\n * The modal body will focus with keyboard navigation only.\n * This allows inner focusable items to be focused without\n * the overflow scroll being focused.\n */\n@Directive({\n  selector: '.modal-body',\n  host: {\n    '[attr.tabindex]': 'tabindex',\n  },\n})\nexport class ClrModalBody {\n  tabindex = 0;\n\n  @HostListener('mousedown')\n  mouseDown() {\n    // tabindex = 0 binding should be removed\n    // so it won't be focused when click starts with mousedown\n    delete this.tabindex;\n  }\n\n  @HostListener('mouseup')\n  mouseUp() {\n    // set the tabindex binding back when click is completed with mouseup\n    this.tabindex = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrFocusTrapModule } from '../utils/focus-trap/focus-trap.module';\nimport { ClrModal } from './modal';\nimport { ClrModalBody } from './modal-body';\nimport { ClrFocusOnViewInitModule } from '../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nexport const CLR_MODAL_DIRECTIVES: Type<any>[] = [ClrModal, ClrModalBody];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusTrapModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_MODAL_DIRECTIVES],\n  exports: [CLR_MODAL_DIRECTIVES, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrModalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Point } from '../common/popover';\n\nexport interface Position {\n  anchorPoint: Point;\n  popoverPoint: Point;\n  offsetY: number;\n  offsetX: number;\n}\n\nexport const SIGNPOST_POSITIONS: { [input: string]: Position } = {\n  'top-left': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_RIGHT, offsetY: -10, offsetX: 0 },\n  'top-middle': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_CENTER, offsetY: -10, offsetX: 0 },\n  'top-right': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_LEFT, offsetY: -10, offsetX: 0 },\n  'right-top': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_BOTTOM, offsetY: 2, offsetX: 14 },\n  'right-middle': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n  'right-bottom': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_TOP, offsetY: -1, offsetX: 14 },\n  'bottom-right': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_LEFT, offsetY: 9, offsetX: -1 },\n  'bottom-middle': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_CENTER, offsetY: 9, offsetX: 12 },\n  'bottom-left': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_RIGHT, offsetY: 9, offsetX: 0 },\n  'left-bottom': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_TOP, offsetY: 0, offsetX: -14 },\n  'left-middle': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_CENTER, offsetY: 4, offsetX: -14 },\n  'left-top': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_BOTTOM, offsetY: 0, offsetX: -14 },\n  default: { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional, OnDestroy, PLATFORM_ID } from '@angular/core';\n\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { SIGNPOST_POSITIONS } from './signpost-positions';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n// aka where the arrow / pointer is at in relation to the anchor\nconst POSITIONS: string[] = [\n  'top-left',\n  'top-middle',\n  'top-right',\n  'right-top',\n  'right-middle', // default\n  'right-bottom',\n  'bottom-right',\n  'bottom-middle',\n  'bottom-left',\n  'left-bottom',\n  'left-middle',\n  'left-top',\n];\n\n@Component({\n  selector: 'clr-signpost-content',\n  template: `\n      <div class=\"signpost-wrap\">\n          <div class=\"popover-pointer\"></div>\n          <div class=\"signpost-content-body\">\n              <ng-content></ng-content>\n          </div>\n          <div class=\"signpost-content-header\">\n              <button type=\"button\" [attr.aria-label]=\"commonStrings.keys.signpostClose\" class=\"signpost-action close\"\n                      (click)=\"close()\" [attr.aria-controls]=\"signpostContentId\">\n                  <clr-icon shape=\"close\" [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n      </div>\n  `,\n  host: { '[class.signpost-content]': 'true', '[id]': 'signpostContentId' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrSignpostContent extends AbstractPopover implements OnDestroy {\n  private document: Document;\n\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public signpostContentId: string,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(DOCUMENT) document: any\n  ) {\n    super(injector, parentHost);\n    if (!parentHost) {\n      throw new Error('clr-signpost-content should only be used inside of a clr-signpost');\n    }\n    // Defaults\n    this.position = 'right-middle';\n    this.closeOnOutsideClick = true;\n    this.signpostIdService.setId(signpostContentId);\n\n    this.document = document;\n  }\n\n  /**********\n   *\n   * @description\n   * Close function that uses the signpost instance to toggle the state of the content popover.\n   *\n   */\n  close() {\n    this.ifOpenService.open = false;\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  /*********\n   *\n   * @description\n   * A setter for the position of the ClrSignpostContent popover. This is a combination of the following:\n   * - anchorPoint - where on the trigger to anchor the ClrSignpostContent\n   * - popoverPoint - where on the ClrSignpostContent container to align with the anchorPoint\n   * - offsetY - where on the Y axis to align the ClrSignpostContent so it meets specs\n   * - offsetX - where on the X axis to align the ClrSignpostContent so it meets specs\n   * There are 12 possible positions to place a ClrSignpostContent container:\n   * - top-left\n   * - top-middle\n   * - top-right\n   * - right-top\n   * - right-middle\n   * - right-bottom\n   * - bottom-right\n   * - bottom-middle\n   * - bottom-left\n   * - left-bottom\n   * - left-middle\n   * - left-top\n   *\n   * I think of it as follows for 'top-left' -> CONTAINER_SIDE-SIDE_POSITION. In this case CONTAINER_SIDE is 'top'\n   * meaning the top of the trigger icon (above the icon that hides/shows) the ClrSignpostContent. And, SIDE_POSITION\n   * is 'left' meaning two things: 1) the ClrSignpostContent container extends to the left and 2) the 'arrow/pointer'\n   * linking the SingpostContent to the trigger points down at the horizontal center of the trigger icon.\n   *\n   * @param newPosition\n   */\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right-middle';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, this.position);\n\n    const setPosition = SIGNPOST_POSITIONS[this.position];\n    this.anchorPoint = setPosition.anchorPoint;\n    this.popoverPoint = setPosition.popoverPoint;\n    this.popoverOptions.offsetY = setPosition.offsetY;\n    this.popoverOptions.offsetX = setPosition.offsetX;\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId) && this.el.nativeElement.contains(this.document.activeElement)) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrCommonPopoverModule } from '../common/popover.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrSignpost } from './signpost';\nimport { ClrSignpostContent } from './signpost-content';\nimport { ClrSignpostTrigger } from './signpost-trigger';\n\nexport const CLR_SIGNPOST_DIRECTIVES: Type<any>[] = [ClrSignpost, ClrSignpostContent, ClrSignpostTrigger];\n\n@NgModule({\n  imports: [CommonModule, ClrCommonPopoverModule, ClrIconModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_SIGNPOST_DIRECTIVES],\n  exports: [CLR_SIGNPOST_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrSignpostModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class TooltipIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  updateId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef } from '@angular/core';\nimport { IfOpenService } from '../../utils/conditional/if-open.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\n@Component({\n  selector: 'clr-tooltip',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.tooltip]': 'true',\n  },\n  providers: [\n    IfOpenService,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    // TODO: consider centralizing the unique id string on a service that provides ariaAttributes that need it\n    // AriaService in layout/tabs/providers might be a good starting point.\n    UNIQUE_ID_PROVIDER,\n    TooltipIdService,\n  ],\n})\nexport class ClrTooltip {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional } from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\nconst POSITIONS: string[] = ['bottom-left', 'bottom-right', 'top-left', 'top-right', 'right', 'left'];\n\nconst SIZES: string[] = ['xs', 'sm', 'md', 'lg'];\n\n@Component({\n  selector: 'clr-tooltip-content',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.tooltip-content]': 'true',\n    '[style.opacity]': '1',\n    '[attr.role]': '\"tooltip\"',\n    '[id]': 'id',\n  },\n})\nexport class ClrTooltipContent extends AbstractPopover {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    private tooltipIdService: TooltipIdService\n  ) {\n    super(injector, parentHost);\n\n    if (!parentHost) {\n      throw new Error('clr-tooltip-content should only be used inside of a clr-tooltip');\n    }\n\n    // Defaults\n    this.position = 'right';\n    this.size = 'sm';\n\n    // Set the default id in case consumer does not supply a custom id.\n    this.updateId(uniqueId);\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input()\n  set id(value: string) {\n    value ? this.updateId(value) : this.updateId('');\n  }\n  private _id;\n\n  private updateId(id: string) {\n    this._id = id;\n    this.tooltipIdService.updateId(id);\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.position);\n\n    // set the popover values based on direction\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'right':\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'left':\n        this.anchorPoint = Point.LEFT_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      default:\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private _size: string;\n\n  get size() {\n    return this._size;\n  }\n\n  @Input('clrSize')\n  set size(size: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.size);\n    if (size && SIZES.indexOf(size) > -1) {\n      this._size = size;\n    } else {\n      this._size = 'sm';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.size);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\nimport { IfOpenService } from '../../utils/conditional/if-open.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrTooltipTrigger]',\n  host: {\n    tabindex: '0',\n    '[class.tooltip-trigger]': 'true',\n    '[attr.aria-describedby]': 'ariaDescribedBy',\n    '[attr.role]': '\"button\"',\n  },\n})\nexport class ClrTooltipTrigger {\n  public ariaDescribedBy;\n  private subs: Subscription[] = [];\n  constructor(private ifOpenService: IfOpenService, private tooltipIdService: TooltipIdService) {\n    // The aria-described by comes from the id of content. It\n    this.subs.push(this.tooltipIdService.id.subscribe(tooltipId => (this.ariaDescribedBy = tooltipId)));\n  }\n\n  @HostListener('mouseenter')\n  @HostListener('focus')\n  showTooltip(): void {\n    this.ifOpenService.open = true;\n  }\n\n  @HostListener('mouseleave')\n  @HostListener('blur')\n  hideTooltip(): void {\n    this.ifOpenService.open = false;\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrCommonPopoverModule } from '../common/popover.module';\n\nimport { ClrTooltip } from './tooltip';\nimport { ClrTooltipContent } from './tooltip-content';\nimport { ClrTooltipTrigger } from './tooltip-trigger';\n\nexport const CLR_TOOLTIP_DIRECTIVES: Type<any>[] = [ClrTooltip, ClrTooltipTrigger, ClrTooltipContent];\n\n@NgModule({\n  imports: [CommonModule, ClrCommonPopoverModule],\n  declarations: [CLR_TOOLTIP_DIRECTIVES],\n  exports: [CLR_TOOLTIP_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrTooltipModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrDropdownModule } from './dropdown/dropdown.module';\nimport { ClrSignpostModule } from './signpost/signpost.module';\nimport { ClrTooltipModule } from './tooltip/tooltip.module';\n\n@NgModule({ exports: [ClrDropdownModule, ClrSignpostModule, ClrTooltipModule] })\nexport class ClrPopoverModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ButtonHubService {\n  public buttonsReady: boolean = false;\n\n  private _previousBtnClicked = new Subject<any>();\n  public get previousBtnClicked(): Observable<any> {\n    return this._previousBtnClicked.asObservable();\n  }\n\n  private _nextBtnClicked = new Subject<any>();\n  public get nextBtnClicked(): Observable<any> {\n    return this._nextBtnClicked.asObservable();\n  }\n\n  private _dangerBtnClicked = new Subject<any>();\n  public get dangerBtnClicked(): Observable<any> {\n    return this._dangerBtnClicked.asObservable();\n  }\n\n  private _cancelBtnClicked = new Subject<any>();\n  public get cancelBtnClicked(): Observable<any> {\n    return this._cancelBtnClicked.asObservable();\n  }\n\n  private _finishBtnClicked = new Subject<any>();\n  public get finishBtnClicked(): Observable<any> {\n    return this._finishBtnClicked.asObservable();\n  }\n\n  private _customBtnClicked = new Subject<any>();\n  public get customBtnClicked(): Observable<any> {\n    return this._customBtnClicked.asObservable();\n  }\n\n  public buttonClicked(buttonType: string): void {\n    if ('previous' === buttonType) {\n      this._previousBtnClicked.next();\n    } else if ('next' === buttonType) {\n      this._nextBtnClicked.next();\n    } else if ('finish' === buttonType) {\n      this._finishBtnClicked.next();\n    } else if ('danger' === buttonType) {\n      this._dangerBtnClicked.next();\n    } else if ('cancel' === buttonType) {\n      this._cancelBtnClicked.next();\n    } else {\n      this._customBtnClicked.next(buttonType);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\n/**\n * PageCollectionService manages the collection of pages assigned to the wizard and offers\n * a number of functions useful across the wizards providers and subcomponents -- all related\n * to essentially lookups on the collection of pages.\n *\n * The easiest way to access PageCollectionService is via the wizard. The\n * following example would allow you to access your instance of the wizard from your host\n * component and thereby access the page collection via YourHostComponent.wizard.pageCollection.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n * The heart of the page collection is the query list of pages, which it is assigned as a\n * reference to the Wizard.pages QueryList when the wizard is created.\n *\n */\n@Injectable()\nexport class PageCollectionService {\n  /**\n   * A reference to the Wizard.pages QueryList.\n   *\n   * Populated when the wizard is created.\n   *\n   * @memberof PageCollectionService\n   */\n  public pages: QueryList<ClrWizardPage>;\n\n  /**\n   * Converts the PageCollectionService.pages QueryList to an array and returns it.\n   *\n   * Useful for many instances when you would prefer a QueryList to act like an array.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesAsArray(): ClrWizardPage[] {\n    return this.pages ? this.pages.toArray() : [];\n  }\n\n  /**\n   * Returns the length of the pages query list.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesCount(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /**\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get penultimatePage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 2) {\n      return;\n    }\n\n    return this.pagesAsArray[pageCount - 2];\n  }\n\n  /**\n   * Returns the last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get lastPage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 1) {\n      return;\n    }\n\n    return this.pagesAsArray[pageCount - 1];\n  }\n\n  /**\n   * Returns the first page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get firstPage(): ClrWizardPage {\n    if (!this.pagesCount) {\n      return;\n    }\n\n    return this.pagesAsArray[0];\n  }\n\n  /**\n   * Used mostly internally, but accepts a string ID and returns a ClrWizardPage\n   * object that matches the ID passed. Note that IDs here should include the prefix\n   * \"clr-wizard-page-\".\n   *\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageById(id: string): ClrWizardPage {\n    const foundPages: ClrWizardPage[] = this.pages.filter((page: ClrWizardPage) => id === page.id);\n    return this.checkResults(foundPages, id);\n  }\n\n  /**\n   * Accepts s number as a parameter and treats that number as the index of the page\n   * you're looking for in the collection of pages. Returns a  wizard page object.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageByIndex(index: number): ClrWizardPage {\n    const pageCount = this.pagesCount;\n    const pagesLastIndex: number = pageCount > 1 ? pageCount - 1 : 0;\n\n    if (index < 0) {\n      throw new Error('Cannot retrieve page with index of ' + index);\n    }\n\n    if (index > pagesLastIndex) {\n      throw new Error('Page index is greater than length of pages array.');\n    }\n\n    return this.pagesAsArray[index];\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns its index in the\n   * collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageIndex(page: ClrWizardPage): number {\n    const index = this.pagesAsArray.indexOf(page);\n\n    if (index < 0) {\n      throw new Error('Requested page cannot be found in collection of pages.');\n    }\n\n    return index;\n  }\n\n  /**\n   * Consolidates guard logic that prevents a couple of unfortunate edge cases with\n   * look ups on the collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  private checkResults(results: ClrWizardPage[], requestedPageId: string) {\n    const foundPagesCount: number = results.length || 0;\n\n    if (foundPagesCount > 1) {\n      throw new Error('More than one page has the requested id ' + requestedPageId + '.');\n    } else if (foundPagesCount < 1) {\n      throw new Error('No page can be found with the id ' + requestedPageId + '.');\n    } else {\n      return results[0];\n    }\n  }\n\n  /**\n   * Accepts two numeric indexes and returns an array of wizard page objects that include\n   * all wizard pages in the page collection from the first index to the second.\n   *\n   * @memberof PageCollectionService\n   */\n  public pageRange(start: number, end: number): ClrWizardPage[] {\n    let pages: ClrWizardPage[] = [];\n\n    if (start < 0 || end < 0) {\n      return [];\n    }\n\n    if (start === null || typeof start === 'undefined' || isNaN(start)) {\n      return [];\n    }\n\n    if (end === null || typeof end === 'undefined' || isNaN(end)) {\n      return [];\n    }\n\n    if (end > this.pagesCount) {\n      end = this.pagesCount;\n    }\n\n    pages = this.pagesAsArray;\n\n    if (end - start === 0) {\n      // just return the one page they want\n      return [this.getPageByIndex(start)];\n    }\n\n    // slice end does not include item referenced by end index, which is weird for users\n    // incrementing end index here to correct that so users and other methods\n    // don't have to think about it\n    end = end + 1;\n\n    // slice does not return the last one in the range but it does include the first one\n    // does not modify original array\n    return pages.slice(start, end);\n  }\n\n  /**\n   * Accepts two wizard page objects and returns those page objects with all other page\n   * objects between them in the page collection. It doesn't care which page is ahead of the\n   * other in the parameters. It will be smart enough to figure that out  on its own.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageRangeFromPages(page: ClrWizardPage, otherPage: ClrWizardPage): ClrWizardPage[] {\n    const pageIndex = this.getPageIndex(page);\n    const otherPageIndex = this.getPageIndex(otherPage);\n    let startIndex: number;\n    let endIndex: number;\n\n    if (pageIndex <= otherPageIndex) {\n      startIndex = pageIndex;\n      endIndex = otherPageIndex;\n    } else {\n      startIndex = otherPageIndex;\n      endIndex = pageIndex;\n    }\n    return this.pageRange(startIndex, endIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately before it in the page collection. Returns null if there is\n   * no page before the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPreviousPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const previousPageIndex = myPageIndex - 1;\n    if (previousPageIndex < 0) {\n      return null;\n    }\n    return this.getPageByIndex(previousPageIndex);\n  }\n\n  /**\n   * Accepts a wizard page object as a parameter and returns a Boolean that says if\n   * the page you sent it is complete.\n   *\n   * @memberof PageCollectionService\n   */\n  public previousPageIsCompleted(page: ClrWizardPage) {\n    let previousPage: ClrWizardPage;\n\n    if (!page) {\n      return false;\n    }\n\n    previousPage = this.getPreviousPage(page);\n\n    if (null === previousPage) {\n      // page is the first page. no previous page.\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately after it in the page collection. Returns null if there is\n   * no page after the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getNextPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const nextPageIndex = myPageIndex + 1;\n\n    if (nextPageIndex >= this.pagesAsArray.length) {\n      return null;\n    }\n    return this.getPageByIndex(nextPageIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and generates a step item id from the\n   * page ID. Returns the generated step item ID as a string.\n   *\n   * @memberof PageCollectionService\n   */\n  public getStepItemIdForPage(page: ClrWizardPage) {\n    const pageId = page.id;\n    const pageIdParts = pageId.split('-').reverse();\n\n    pageIdParts[1] = 'step';\n    return pageIdParts.reverse().join('-');\n  }\n\n  /**\n   * Generally only used internally to mark that a specific page has been \"committed\".\n   * This involves marking the page complete and firing the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) output. Takes the wizard page object that you intend to\n   * mark completed as a parameter.\n   *\n   * @memberof PageCollectionService\n   */\n  public commitPage(page: ClrWizardPage) {\n    const pageHasOverrides = page.stopNext || page.preventDefault;\n    page.completed = true;\n\n    if (!pageHasOverrides) {\n      // prevent loop of event emission; alternate flows work off\n      // of event emitters this is how they break that cycle.\n      page.onCommit.emit(page.id);\n    }\n  }\n\n  // used by the navService to navigate back to first possible step after\n  // pages are reset\n\n  /**\n   *\n   * @memberof PageCollectionService\n   */\n  private _pagesReset = new Subject<boolean>();\n\n  /**\n   * An observable that the navigation service listens to in order to know when\n   * the page collection completed states have been reset to false so that way it\n   * can also reset the navigation to make the first page in the page collection\n   * current/active.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesReset(): Observable<boolean> {\n    return this._pagesReset.asObservable();\n  }\n\n  /**\n   * Sets all completed states of the pages in the page collection to false and\n   * notifies the navigation service to likewise reset the navigation.\n   *\n   * @memberof PageCollectionService\n   */\n  public reset() {\n    this.pagesAsArray.forEach((page: ClrWizardPage) => {\n      page.completed = false;\n    });\n    this._pagesReset.next(true);\n  }\n\n  /**\n   * Rolls through all the pages in the page collection to make sure there are no\n   * incomplete pages sandwiched between completed pages in the workflow. Identifies\n   * the first incomplete page index and sets all pages behind it to a completed\n   * state of false.\n   *\n   * @memberof PageCollectionService\n   */\n  public updateCompletedStates(): void {\n    const firstIncompleteIndex = this.findFirstIncompletePageIndex();\n\n    if (firstIncompleteIndex === this.pagesAsArray.length - 1) {\n      // all complete no need to do anything\n      return;\n    }\n\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (index > firstIncompleteIndex) {\n        page.completed = false;\n      }\n    });\n  }\n\n  /**\n   * Retrieves the index of the first incomplete page in the page collection.\n   *\n   * @memberof PageCollectionService\n   */\n  public findFirstIncompletePageIndex(): number {\n    let returnIndex: number = null;\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (null === returnIndex && false === page.completed) {\n        returnIndex = index;\n      }\n    });\n\n    // fallthrough, all completed, return last page\n    if (null === returnIndex) {\n      returnIndex = this.pagesCount - 1;\n    }\n\n    return returnIndex;\n  }\n\n  public findFirstIncompletePage(): ClrWizardPage {\n    const myIncompleteIndex = this.findFirstIncompletePageIndex();\n    return this.pagesAsArray[myIncompleteIndex];\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\nimport { ButtonHubService } from './button-hub.service';\nimport { PageCollectionService } from './page-collection.service';\n\n/**\n * Performs navigation functions for a wizard and manages the current page. Presented as a\n * separate service to encapsulate the behavior of navigating and completing the wizard so\n * that it can be shared across the wizard and its sub-components.\n *\n * The easiest way to access the navigation service is there a reference on your wizard. The\n * Following example would allow you to access your instance of the wizard from your host\n * component and thereby access the navigation service via YourHostComponent.wizard.navService.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n */\n@Injectable()\nexport class WizardNavigationService implements OnDestroy {\n  /**\n   * Is notified when a previous button is clicked in the wizard. Performs checks\n   * before alerting the current page of the button click. Enacts navigation to\n   * the previous page if not overridden at the page level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previousButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Next button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public nextButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a danger button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public dangerButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a  finish button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public finishButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Custom button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public customButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Cancel button is clicked in the wizard. Notifies the wizard,\n   * which handles all cancel functionality, if cancel is not overridden at the page\n   * level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancelButtonSubscription: Subscription;\n\n  /**\n   * Resets navigation to make the first page current when the page collection service\n   * emits an event notifying WizardNavigationService that it has reset all pages\n   * to their pristine, incomplete state.\n   *\n   * @memberof WizardNavigationService\n   */\n  public pagesResetSubscription: Subscription;\n\n  /**\n   * Creates an instance of WizardNavigationService. Also sets up subscriptions\n   * that listen to the button service to determine when a button has been clicked\n   * in the wizard. Is also responsible for taking action when the page collection\n   * requests that navigation be reset to its pristine state.\n   *\n   * @memberof WizardNavigationService\n   */\n  constructor(public pageCollection: PageCollectionService, public buttonService: ButtonHubService) {\n    this.previousButtonSubscription = this.buttonService.previousBtnClicked.subscribe(() => {\n      const currentPage = this.currentPage;\n      if (this.currentPageIsFirst || currentPage.previousStepDisabled) {\n        return;\n      }\n      currentPage.previousButtonClicked.emit(currentPage);\n      if (!currentPage.preventDefault) {\n        this.previous();\n      }\n    });\n\n    this.nextButtonSubscription = this.buttonService.nextBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('next');\n    });\n\n    this.dangerButtonSubscription = this.buttonService.dangerBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('danger');\n    });\n\n    this.finishButtonSubscription = this.buttonService.finishBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('finish');\n    });\n\n    this.customButtonSubscription = this.buttonService.customBtnClicked.subscribe((type: string) => {\n      if (!this.wizardStopNavigation) {\n        this.currentPage.customButtonClicked.emit(type);\n      }\n    });\n\n    this.cancelButtonSubscription = this.buttonService.cancelBtnClicked.subscribe(() => {\n      if (this.wizardStopNavigation) {\n        return;\n      }\n\n      if (this.currentPage.preventDefault) {\n        this.currentPage.pageOnCancel.emit(this.currentPage);\n      } else {\n        this.cancel();\n      }\n    });\n\n    this.pagesResetSubscription = this.pageCollection.pagesReset.subscribe(() => {\n      this.setFirstPageCurrent();\n    });\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  ngOnDestroy(): void {\n    this.previousButtonSubscription.unsubscribe();\n    this.nextButtonSubscription.unsubscribe();\n    this.dangerButtonSubscription.unsubscribe();\n    this.finishButtonSubscription.unsubscribe();\n    this.customButtonSubscription.unsubscribe();\n    this.cancelButtonSubscription.unsubscribe();\n    this.pagesResetSubscription.unsubscribe();\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  private _currentChanged = new Subject<ClrWizardPage>();\n\n  /**\n   * An Observable that is predominantly used amongst the subcomponents and services\n   * of the wizard. It is recommended that users listen to the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output instead of this Observable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageChanged(): Observable<ClrWizardPage> {\n    // TODO: MAKE SURE EXTERNAL OUTPUTS SAY 'CHANGE' NOT 'CHANGED'\n    // A BREAKING CHANGE SO AWAITING MINOR RELEASE\n    return this._currentChanged.asObservable();\n  }\n\n  /**\n   * A Boolean flag used by the ClrWizardPage to avoid a race condition when pages are\n   * loading and there is no current page defined.\n   *\n   * @memberof WizardNavigationService\n   */\n  public navServiceLoaded = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.forceForward (clrWizardForceForwardNavigation) input. When true,\n   * navigating backwards in the stepnav menu will reset any skipped pages' completed\n   * state to false.\n   *\n   * This is useful when a wizard executes validation on a page-by-page basis when\n   * the next button is clicked.\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceForwardNavigation = false;\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  public get currentPageTitle(): TemplateRef<any> {\n    // when the querylist of pages is empty. this is the first place it fails...\n    if (!this.currentPage) {\n      return null;\n    }\n    return this.currentPage.title;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the first\n   * page in the Wizard.\n   *\n   * This is helpful for determining whether a page is navigable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsFirst(): boolean {\n    return this.pageCollection.firstPage === this.currentPage;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the\n   * last page in the Wizard.\n   *\n   * This is used to determine which buttons should display in the wizard footer.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsLast(): boolean {\n    return this.pageCollection.lastPage === this.currentPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _currentPage: ClrWizardPage;\n\n  /**\n   * Returns the ClrWizardPage object of the current page or null.\n   *\n   * @memberof WizardNavigationService\n   */\n  get currentPage(): ClrWizardPage {\n    if (!this._currentPage) {\n      return null;\n    }\n    return this._currentPage;\n  }\n\n  /**\n   * Accepts a ClrWizardPage object, since that object to be the current/active\n   * page in the wizard, and emits the ClrWizardPage.onLoad (clrWizardPageOnLoad)\n   * event for that page.\n   *\n   * Note that all of this work is bypassed if the ClrWizardPage object is already\n   * the current page.\n   *\n   * @memberof WizardNavigationService\n   */\n  set currentPage(page: ClrWizardPage) {\n    if (this._currentPage !== page && !this.wizardStopNavigation) {\n      this._currentPage = page;\n      page.onLoad.emit(page.id);\n      this._currentChanged.next(page);\n    }\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToNextPage = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that forward navigation\n   * has occurred. It is recommended that you use the Wizard.onMoveNext\n   * (clrWizardOnNext) output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToNextPage(): Observable<boolean> {\n    return this._movedToNextPage.asObservable();\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _wizardFinished = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that the nav service\n   * has approved completion of the wizard.\n   *\n   * It is recommended that you use the Wizard.wizardFinished (clrWizardOnFinish)\n   * output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get wizardFinished(): Observable<boolean> {\n    return this._wizardFinished.asObservable();\n  }\n\n  /**\n   * This is a public function that can be used to programmatically advance\n   * the user to the next page.\n   *\n   * When invoked, this method will move the wizard to the next page after\n   * successful validation. Note that this method goes through all checks\n   * and event emissions as if Wizard.next(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.next(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public next(): void {\n    if (this.currentPageIsLast) {\n      this.checkAndCommitCurrentPage('finish');\n    } else {\n      this.checkAndCommitCurrentPage('next');\n    }\n  }\n\n  /**\n   * Bypasses checks and most event emissions to force a page to navigate forward.\n   *\n   * Comparable to calling Wizard.next() or Wizard.forceNext().\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceNext(): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    const nextPage: ClrWizardPage = this.pageCollection.getNextPage(currentPage);\n\n    // catch errant null or undefineds that creep in\n    if (!nextPage) {\n      throw new Error('The wizard has no next page to go to.');\n    }\n\n    if (this.wizardStopNavigation) {\n      return;\n    }\n\n    if (!currentPage.completed) {\n      // this is a state that alt next flows can get themselves in...\n      this.pageCollection.commitPage(currentPage);\n    }\n    this.currentPage = nextPage;\n  }\n\n  /**\n   * Accepts a button/action type as a parameter. Encapsulates all logic for\n   * event emissions, state of the current page, and wizard and page level overrides.\n   *\n   * Avoid calling this function directly unless you really know what you're doing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public checkAndCommitCurrentPage(buttonType: string): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    let iAmTheLastPage: boolean;\n\n    let isNext: boolean;\n    let isDanger: boolean;\n    let isDangerNext: boolean;\n    let isDangerFinish: boolean;\n    let isFinish: boolean;\n\n    if (!currentPage.readyToComplete || this.wizardStopNavigation) {\n      return;\n    }\n\n    iAmTheLastPage = this.currentPageIsLast;\n\n    isNext = buttonType === 'next';\n    isDanger = buttonType === 'danger';\n    isDangerNext = isDanger && !iAmTheLastPage;\n    isDangerFinish = isDanger && iAmTheLastPage;\n    isFinish = buttonType === 'finish' || isDangerFinish;\n\n    if (isFinish && !iAmTheLastPage) {\n      return;\n    }\n\n    currentPage.primaryButtonClicked.emit(buttonType);\n\n    if (isFinish) {\n      currentPage.finishButtonClicked.emit(currentPage);\n    } else if (isDanger) {\n      currentPage.dangerButtonClicked.emit();\n    } else if (isNext) {\n      currentPage.nextButtonClicked.emit();\n    }\n\n    if (currentPage.stopNext || currentPage.preventDefault) {\n      currentPage.onCommit.emit(currentPage.id);\n      return;\n    }\n\n    // order is very important with these emitters!\n    if (isFinish) {\n      // mark page as complete\n      if (!this.wizardHasAltNext) {\n        this.pageCollection.commitPage(currentPage);\n      }\n      this._wizardFinished.next();\n    }\n\n    if (this.wizardHasAltNext) {\n      this.pageCollection.commitPage(currentPage);\n\n      if (isNext || isDangerNext) {\n        this._movedToNextPage.next(true);\n      }\n      // jump out here, no matter what type we're looking at\n      return;\n    }\n\n    if (isNext || isDangerNext) {\n      this.forceNext();\n    }\n\n    if (!this.wizardHasAltNext && !this.wizardStopNavigation) {\n      this._movedToNextPage.next(true);\n    }\n  }\n\n  /**\n   * This is a public function that can be used to programmatically conclude\n   * the wizard.\n   *\n   * When invoked, this method will  initiate the work involved with finalizing\n   * and finishing the wizard workflow. Note that this method goes through all\n   * checks and event emissions as if Wizard.finish(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.finish(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public finish(): void {\n    this.checkAndCommitCurrentPage('finish');\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToPreviousPage = new Subject<boolean>();\n\n  /**\n   * Notifies the wizard when backwards navigation has occurred via the\n   * previous button.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToPreviousPage(): Observable<boolean> {\n    return this._movedToPreviousPage.asObservable();\n  }\n\n  /**\n   * Programmatically moves the wizard to the page before the current page.\n   *\n   * In most instances, it makes more sense to call Wizard.previous()\n   * which does the same thing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previous(): void {\n    let previousPage: ClrWizardPage;\n\n    if (this.currentPageIsFirst || this.wizardStopNavigation) {\n      return;\n    }\n\n    previousPage = this.pageCollection.getPreviousPage(this.currentPage);\n\n    if (!previousPage) {\n      return;\n    }\n\n    this._movedToPreviousPage.next(true);\n\n    if (this.forceForwardNavigation) {\n      this.currentPage.completed = false;\n    }\n\n    this.currentPage = previousPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _cancelWizard = new Subject<any>();\n\n  /**\n   * Notifies the wizard that a user is trying to cancel it.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get notifyWizardCancel(): Observable<any> {\n    return this._cancelWizard.asObservable();\n  }\n\n  /**\n   * Allows a hook into the cancel workflow of the wizard from the nav service. Note that\n   * this route goes through all checks and event emissions as if a cancel button had\n   * been clicked.\n   *\n   * In most cases, users looking for a hook into the cancel routine are actually looking\n   * for a way to close the wizard from their host component because they have prevented\n   * the default cancel action.\n   *\n   * In this instance, it is recommended that you use Wizard.close() to avoid any event\n   * emission loop resulting from an event handler calling back into routine that will\n   * again evoke the events it handles.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancel(): void {\n    this._cancelWizard.next();\n  }\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopCancel (clrWizardPreventDefaultCancel) input. When true, the cancel\n   * routine is subverted and must be reinstated in the host component calling Wizard.close()\n   * at some point.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltCancel: boolean = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNext (clrWizardPreventDefaultNext) input. When true, the next and finish\n   * routines are subverted and must be reinstated in the host component calling Wizard.next(),\n   * Wizard.forceNext(), Wizard.finish(), or Wizard.forceFinish().\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltNext: boolean = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNavigation (clrWizardPreventNavigation) input. When true, all\n   * navigational elements in the wizard are disabled.\n   *\n   * This is intended to freeze the wizard in place. Events are not fired so this is\n   * not a way to implement alternate functionality for navigation.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardStopNavigation: boolean = false;\n\n  /**\n   * A boolean flag shared with the stepnav items that prevents user clicks on\n   * stepnav items from navigating the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardDisableStepnav: boolean = false;\n\n  /**\n   * Performs all required checks to determine if a user can navigate to a page. Checking at each\n   * point if a page is navigable -- completed where the page immediately after the last completed\n   * page.\n   *\n   * Takes two parameters. The first one must be either the ClrWizardPage object or the ID of the\n   * ClrWizardPage object that you want to make the current page.\n   *\n   * The second parameter is optional and is a Boolean flag for \"lazy completion\". What this means\n   * is the Wizard will mark all pages between the current page and the page you want to navigate\n   * to as completed. This is useful for informational wizards that do not require user action,\n   * allowing an easy means for users to jump ahead.\n   *\n   * To avoid checks on navigation, use ClrWizardPage.makeCurrent() instead.\n   *\n   * @memberof WizardNavigationService\n   */\n  public goTo(pageToGoToOrId: any, lazyComplete: boolean = false) {\n    let pageToGoTo: ClrWizardPage;\n    let currentPage: ClrWizardPage;\n    let myPages: PageCollectionService;\n    let pagesToCheck: ClrWizardPage[];\n    let okayToMove: boolean;\n    let goingForward: boolean;\n    let currentPageIndex: number;\n    let goToPageIndex: number;\n\n    myPages = this.pageCollection;\n    pageToGoTo = typeof pageToGoToOrId === 'string' ? myPages.getPageById(pageToGoToOrId) : pageToGoToOrId;\n    currentPage = this.currentPage;\n\n    // no point in going to the current page. you're there already!\n    // also hard block on any navigation when stopNavigation is true\n    if (pageToGoTo === currentPage || this.wizardStopNavigation) {\n      return;\n    }\n\n    currentPageIndex = myPages.getPageIndex(currentPage);\n    goToPageIndex = myPages.getPageIndex(pageToGoTo);\n    goingForward = goToPageIndex > currentPageIndex;\n    pagesToCheck = myPages.getPageRangeFromPages(this.currentPage, pageToGoTo);\n\n    okayToMove = lazyComplete || this.canGoTo(pagesToCheck);\n\n    if (!okayToMove) {\n      return;\n    }\n\n    if (goingForward && lazyComplete) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        if (page !== pageToGoTo) {\n          page.completed = true;\n        }\n      });\n    } else if (!goingForward && this.forceForwardNavigation) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        page.completed = false;\n      });\n    }\n\n    this.currentPage = pageToGoTo;\n  }\n\n  /**\n   * Accepts a range of ClrWizardPage objects as a parameter. Performs the work of checking\n   * those objects to determine if navigation can be accomplished.\n   *\n   * @memberof WizardNavigationService\n   */\n  public canGoTo(pagesToCheck: ClrWizardPage[]): boolean {\n    let okayToMove = true;\n    const myPages = this.pageCollection;\n\n    // previous page can be important when moving because if it's completed it\n    // allows us to move to the page even if it's incomplete...\n    let previousPagePasses: boolean;\n\n    if (!pagesToCheck || pagesToCheck.length < 1) {\n      return false;\n    }\n\n    pagesToCheck.forEach((page: ClrWizardPage) => {\n      let previousPage: ClrWizardPage;\n\n      if (!okayToMove) {\n        return;\n      }\n\n      if (page.completed) {\n        // default is true. just jump out instead of complicating it.\n        return;\n      }\n\n      // so we know our page is not completed...\n      previousPage = myPages.getPageIndex(page) > 0 ? myPages.getPreviousPage(page) : null;\n      previousPagePasses = previousPage === null || previousPage.completed === true;\n\n      // we are false if not the current page AND previous page is not completed\n      // (but must have a previous page)\n      if (!page.current && !previousPagePasses) {\n        okayToMove = false;\n      }\n      // falls through to true as default\n    });\n\n    return okayToMove;\n  }\n\n  /**\n   * Looks through the collection of pages to find the first one that is incomplete\n   * and makes that page the current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setLastEnabledPageCurrent(): void {\n    const allPages: ClrWizardPage[] = this.pageCollection.pagesAsArray;\n    let lastCompletedPageIndex: number = null;\n\n    allPages.forEach((page: ClrWizardPage, index: number) => {\n      if (page.completed) {\n        lastCompletedPageIndex = index;\n      }\n    });\n\n    if (lastCompletedPageIndex === null) {\n      // always is at least the first item...\n      lastCompletedPageIndex = 0;\n    } else if (lastCompletedPageIndex + 1 < allPages.length) {\n      lastCompletedPageIndex = lastCompletedPageIndex + 1;\n    }\n\n    this.currentPage = allPages[lastCompletedPageIndex];\n  }\n\n  /**\n   * Finds the first page in the collection of pages and makes that page the\n   * current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setFirstPageCurrent(): void {\n    this.currentPage = this.pageCollection.pagesAsArray[0];\n  }\n\n  /**\n   * Updates the stepnav on the left side of the wizard when pages are dynamically\n   * added or removed from the collection of pages.\n   *\n   * @memberof WizardNavigationService\n   */\n  public updateNavigation(): void {\n    let toSetCurrent: ClrWizardPage;\n    let currentPageRemoved: boolean;\n\n    this.pageCollection.updateCompletedStates();\n\n    currentPageRemoved = this.pageCollection.pagesAsArray.indexOf(this.currentPage) < 0;\n    if (currentPageRemoved) {\n      toSetCurrent = this.pageCollection.findFirstIncompletePage();\n      this.currentPage = toSetCurrent;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { ClrWizardHeaderAction } from '../wizard-header-action';\nimport { WizardNavigationService } from './wizard-navigation.service';\n\n@Injectable()\nexport class HeaderActionService {\n  // this service communicates information about the presence/display of header actions\n  // across the wizard\n\n  constructor(public navService: WizardNavigationService) {}\n\n  public wizardHeaderActions: QueryList<ClrWizardHeaderAction>;\n\n  public get wizardHasHeaderActions(): boolean {\n    const wizardHdrActions = this.wizardHeaderActions;\n    if (!wizardHdrActions) {\n      return false;\n    }\n    return wizardHdrActions.toArray().length > 0;\n  }\n\n  public get currentPageHasHeaderActions(): boolean {\n    return this.navService.currentPage ? this.navService.currentPage.hasHeaderActions : false;\n  }\n\n  public get showWizardHeaderActions(): boolean {\n    return !this.currentPageHasHeaderActions && this.wizardHasHeaderActions;\n  }\n\n  public get displayHeaderActionsWrapper(): boolean {\n    return this.currentPageHasHeaderActions || this.wizardHasHeaderActions;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nlet wizardHeaderActionIndex = 0;\n\n@Component({\n  selector: 'clr-wizard-header-action',\n  template: `\n        <button \n            type=\"button\"\n            class=\"btn clr-wizard-header-action btn-link\"\n            [id]=\"id\"\n            [class.disabled]=\"disabled\"\n            (click)=\"click()\"\n            [title]=\"title\">\n            <ng-content></ng-content>\n        </button>\n    `,\n  host: { class: 'clr-wizard-header-action-wrapper' },\n})\nexport class ClrWizardHeaderAction {\n  // title is explanatory text added to the header action\n  @Input('title') title: string = '';\n\n  // If our host has an ID attribute, we use this instead of our index.\n  @Input('id') _id: string = (wizardHeaderActionIndex++).toString();\n\n  public get id(): string {\n    return `clr-wizard-header-action-${this._id}`;\n  }\n\n  @Input('clrWizardHeaderActionDisabled') public disabled: boolean = false;\n\n  @Output('actionClicked') headerActionClicked: EventEmitter<string> = new EventEmitter(false);\n\n  click(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // passing the header action id allows users to have one method that\n    // routes to many different actions based on the type of header action\n    // clicked. this is further aided by users being able to specify ids\n    // for their header actions.\n    this.headerActionClicked.emit(this._id);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageButtons]' })\nexport class ClrWizardPageButtons {\n  constructor(public pageButtonsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageHeaderActions]' })\nexport class ClrWizardPageHeaderActions {\n  constructor(public pageHeaderActionsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageNavTitle]' })\nexport class ClrWizardPageNavTitle {\n  constructor(public pageNavTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageTitle]' })\nexport class ClrWizardPageTitle {\n  constructor(public pageTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\n\nlet wizardPageIndex = 0;\n\n/**\n * The ClrWizardPage component is responsible for displaying the content of each step\n * in the wizard workflow.\n *\n * ClrWizardPage component has hooks into the navigation service (ClrWizardPage.navService),\n * page collection (ClrWizardPage.pageCollection), and button service\n * (ClrWizardPage.buttonService). These three providers are shared across the components\n * within each instance of a Wizard.\n *\n */\n@Component({\n  selector: 'clr-wizard-page',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[id]': 'id',\n    '[attr.aria-hidden]': '!current',\n    '[attr.aria-labelledby]': 'stepItemId',\n    '[class.active]': 'current',\n    '[class.clr-wizard-page]': 'true',\n  },\n})\nexport class ClrWizardPage implements OnInit {\n  /**\n   * Creates an instance of ClrWizardPage.\n   *\n   * @memberof WizardPage\n   */\n  constructor(\n    private navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService\n  ) {}\n\n  /**\n   * Contains a reference to the page title which is used for a number\n   * of different tasks for display in the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageTitle, { static: true })\n  public pageTitle: ClrWizardPageTitle;\n\n  /**\n   * Contains a reference to the desired title for the page's step in the\n   * navigation on the left side of the wizard. Can be projected to change the\n   * navigation link's text.\n   *\n   * If not defined, then ClrWizardPage.pageTitle will be displayed in the stepnav.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageNavTitle, { static: true })\n  public pageNavTitle: ClrWizardPageNavTitle;\n\n  /**\n   * Contains a reference to the buttons defined within the page. If not defined,\n   * the wizard defaults to the set of buttons defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageButtons, { static: true })\n  public _buttons: ClrWizardPageButtons;\n\n  /**\n   * Contains a reference to the header actions defined within the page. If not defined,\n   * the wizard defaults to the set of header actions defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageHeaderActions, { static: true })\n  public _headerActions: ClrWizardPageHeaderActions;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _nextStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the next page.\n   *\n   * Useful for in-page validation because it prevents forward navigation\n   * and visibly disables the next button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get nextStepDisabled(): boolean {\n    return this._nextStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow forward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageNextDisabled')\n  public set nextStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._nextStepDisabled) {\n      this._nextStepDisabled = valBool;\n      this.nextStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.nextStepDisabled changes.\n   * Should emit the new value of nextStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNextDisabledChange') nextStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _previousStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the previous page.\n   *\n   * Useful for in-page validation because it prevents backward navigation\n   * and visibly disables the previous button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousStepDisabled(): boolean {\n    return this._previousStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow backward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreviousDisabled')\n  public set previousStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._previousStepDisabled) {\n      this._previousStepDisabled = valBool;\n      this.previousStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.previousStepDisabled changes.\n   * Should emit the new value of previousStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreviousDisabledChange')\n  public previousStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   * Overrides all actions from the page level, so you can use an alternate function for\n   * validation or data-munging with a ClrWizardPage.onCommit (clrWizardPageOnCommit output),\n   * ClrWizardPage.onCancel (clrWizardPageOnCancel output), or one\n   * of the granular page-level button click event emitters.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreventDefault') public preventDefault: boolean = false;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopCancel = false;\n\n  /**\n   * A getter that retrieves whether the page is preventing the cancel action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Overrides the cancel action from the page level. Allows you to use an\n   * alternate function for validation or data-munging before cancelling the\n   * wizard when combined with the ClrWizardPage.onCancel\n   * (the clrWizardPageOnCancel output).\n   *\n   * Requires that you manually close the wizard from your host component,\n   * usually with a call to Wizard.forceNext() or wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultCancel')\n  public set stopCancel(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopCancel) {\n      this._stopCancel = valBool;\n      this.stopCancelChange.emit(valBool);\n    }\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreventDefaultCancelChange') stopCancelChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopNext = false;\n\n  /**\n   * A getter that tells you whether the page is preventing the next action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopNext(): boolean {\n    return this._stopNext;\n  }\n\n  /**\n   * Overrides forward navigation from the page level. Allows you to use an\n   * alternate function for validation or data-munging before moving the\n   * wizard to the next pagewhen combined with the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) or ClrWizardPage.nextButtonClicked\n   * (clrWizardPageNext) outputs.\n   *\n   * Requires that you manually tell the wizard to navigate forward from\n   * the hostComponent, usually with a call to Wizard.forceNext() or\n   * wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultNext')\n  public set stopNext(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopNext) {\n      this._stopNext = valBool;\n    }\n  }\n\n  /**\n   * An event emitter carried over from a legacy version of ClrWizardPage.\n   * Fires an event on ClrWizardPage whenever the next or finish buttons\n   * are clicked and the page is the current page of the Wizard.\n   *\n   * Note that this does not automatically emit an event when a custom\n   * button is used in place of a next or finish button.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCommit') onCommit: EventEmitter<string> = new EventEmitter<string>(false);\n\n  /**\n   * Emits an event when ClrWizardPage becomes the current page of the\n   * Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnLoad') onLoad: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * Emits an event when the ClrWizardPage invokes the cancel routine for the wizard.\n   *\n   * Can be used in conjunction with the ClrWizardPage.stopCancel\n   * (clrWizardPagePreventDefaultCancel) or ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) inputs to implement custom cancel\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before cancelling the wizard.\n   *\n   * Note that this requires you to call Wizard.close() from the host component.\n   * This constitues a full replacement of the cancel functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCancel') pageOnCancel: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the finish button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom finish\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to complete\n   * the wizard.\n   *\n   * Note that this requires you to call Wizard.finish() or Wizard.forceFinish()\n   * from the host component. This combination creates a full replacement of\n   * the finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageFinish') finishButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the previous button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom backwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * backwards in the wizard.\n   *\n   * Note that this requires you to call Wizard.previous()\n   * from the host component. This combination creates a full replacement of\n   * the backwards navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrevious') previousButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the next button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * to the next page in the wizard.\n   *\n   * Note that this requires you to call Wizard.forceNext() or Wizard.next()\n   * from the host component. This combination creates a full replacement of\n   * the forward navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNext') nextButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a danger button is clicked and the ClrWizardPage is\n   * the wizard's current page. By default, a danger button will act as\n   * either a \"next\" or \"finish\" button depending on if the ClrWizardPage is the\n   * last page or not.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level when the danger button is clicked.\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageDanger') dangerButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a next, finish, or danger button is clicked and the\n   * ClrWizardPage is the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level, regardless of the type of\n   * primary button.\n   *\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrimary') primaryButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  @Output('clrWizardPageCustomButton') customButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * An input value that is used internally to generate the ClrWizardPage ID as\n   * well as the step nav item ID.\n   *\n   * Typed as any because it should be able to accept numbers as well as\n   * strings. Passing an index for wizard whose pages are created with an\n   * ngFor loop is a common use case.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('id') _id: any = (wizardPageIndex++).toString();\n\n  /**\n   * A read-only getter that generates an ID string for the wizard page from\n   * either the value passed to the ClrWizardPage \"id\" input or a wizard page\n   * counter shared across all wizard pages in the application.\n   *\n   * Note that the value passed into the ID input Will be prefixed with\n   * \"clr-wizard-page-\".\n   *\n   * @readonly\n   *\n   * @memberof ClrWizardPage\n   */\n  public get id() {\n    // covers things like null, undefined, false, and empty string\n    // while allowing zero to pass\n    const idIsNonZeroFalsy = !this._id && this._id !== 0;\n\n    // in addition to non-zero falsy we also want to make sure _id is not a negative\n    // number.\n    if (idIsNonZeroFalsy || this._id < 0) {\n      // guard here in the event that input becomes undefined or null by accident\n      this._id = (wizardPageIndex++).toString();\n    }\n    return `clr-wizard-page-${this._id}`;\n  }\n\n  /**\n   * A read-only getter that serves as a convenience for those who would rather\n   * not think in the terms of !ClrWizardPage.nextStepDisabled. For some use cases,\n   * ClrWizardPage.readyToComplete is more logical and declarative.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get readyToComplete(): boolean {\n    return !this.nextStepDisabled;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _complete: boolean = false;\n\n  /**\n   * A page is marked as completed if it is both readyToComplete and completed,\n   * as in the next or finish action has been executed while this page was current.\n   *\n   * Note there is and open question about how to handle pages that are marked\n   * complete but who are no longer readyToComplete. This might indicate an error\n   * state for the ClrWizardPage. Currently, the wizard does not acknowledge this state\n   * and only returns that the page is incomplete.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get completed(): boolean {\n    return this._complete && this.readyToComplete;\n\n    // FOR V2: UNWIND COMPLETED, READYTOCOMPLETE, AND ERRORS\n    // SUCH THAT ERRORS IS ITS OWN INPUT. IF A STEP IS\n    // INCOMPLETE AND ERRORED, ERRORED WILL NOT SHOW.\n    // FIRST QUESTION: AM I GREY OR COLORED?\n    // SECOND QUESTION: AM I GREEN OR RED?\n  }\n\n  /**\n   * A ClrWizardPage can be manually set to completed using this boolean setter.\n   * It is recommended that users rely on the convenience functions in the wizard\n   * and navigation service instead of manually setting pagesâ completion state.\n   *\n   * @memberof ClrWizardPage\n   */\n  public set completed(value: boolean) {\n    this._complete = value;\n  }\n\n  /**\n   * Checks with the navigation service to see if it is the current page.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get current(): boolean {\n    return this.navService.currentPage === this;\n  }\n\n  public get disabled(): boolean {\n    return !this.enabled;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page is navigable\n   * in the wizard. A wizard page can be navigated to if it is completed\n   * or the page before it is completed.\n   *\n   * This getter handles the logic for enabling or disabling the links in\n   * the step nav on the left Side of the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get enabled(): boolean {\n    return this.current || this.completed || this.previousCompleted;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page before this\n   * ClrWizardPage is completed. This is useful for determining whether or not\n   * a page is navigable if it is not current or already completed.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousCompleted(): boolean {\n    const previousPage = this.pageCollection.getPreviousPage(this);\n\n    if (!previousPage) {\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get title(): TemplateRef<any> {\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get navTitle(): TemplateRef<any> {\n    if (this.pageNavTitle) {\n      return this.pageNavTitle.pageNavTitleTemplateRef;\n    }\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get headerActions(): TemplateRef<any> {\n    if (!this._headerActions) {\n      return;\n    }\n    return this._headerActions.pageHeaderActionsTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasHeaderActions(): boolean {\n    return !!this._headerActions;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get buttons(): TemplateRef<any> {\n    if (!this._buttons) {\n      return;\n    }\n    return this._buttons.pageButtonsTemplateRef;\n  }\n\n  /**\n   * A read-only getter that returns a boolean that says whether or\n   * not the ClrWizardPage includes buttons. Used to determine if the\n   * Wizard should override the default button set defined as\n   * its direct children.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasButtons(): boolean {\n    return !!this._buttons;\n  }\n\n  /**\n   * Uses the nav service to make the ClrWizardPage the current page in the\n   * wizard. Bypasses all checks but still emits the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output.\n   *\n   * In most cases, it is better to use the default navigation functions\n   * in Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public makeCurrent(): void {\n    this.navService.currentPage = this;\n  }\n\n  /**\n   * Links the nav service and establishes the current page if one is not defined.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public ngOnInit(): void {\n    const navService = this.navService;\n    if (!navService.currentPage && !navService.navServiceLoaded) {\n      this.makeCurrent();\n      this.navService.navServiceLoaded = true;\n    }\n  }\n\n  /**\n   * A read-only getter that returns the id used by the step nav item associated with the page.\n   *\n   * ClrWizardPage needs this ID string for aria information.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stepItemId(): string {\n    return this.pageCollection.getStepItemIdForPage(this);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  IterableDiffers,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  PLATFORM_ID,\n  Inject,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { HeaderActionService } from './providers/header-actions.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: 'clr-wizard',\n  providers: [WizardNavigationService, PageCollectionService, ButtonHubService, HeaderActionService],\n  templateUrl: './wizard.html',\n  host: {\n    '[class.clr-wizard]': 'true',\n    '[class.wizard-md]': \"size == 'md'\",\n    '[class.wizard-lg]': \"size == 'lg'\",\n    '[class.wizard-xl]': \"size == 'xl'\",\n    '[class.lastPage]': 'navService.currentPageIsLast',\n  },\n})\nexport class ClrWizard implements OnDestroy, AfterContentInit, DoCheck {\n  /**\n   * Set the modal size of the wizard. Set using `[clrWizardSize]` input.\n   */\n  @Input('clrWizardSize') size = 'xl';\n\n  /**\n   * Tells the modal part of the wizard whether it should have a close \"X\"\n   * in the top right corner. Set using `[clrWizardClosable]` input.\n   */\n  @Input('clrWizardClosable') closable = true;\n\n  /**\n   * Resets page completed states when navigating backwards.\n   * Set using `[clrWizardForceForwardNavigation]` input.\n   */\n  @Input('clrWizardForceForwardNavigation')\n  set forceForward(value: boolean) {\n    this._forceForward = !!value;\n    this.navService.forceForwardNavigation = value;\n  }\n  private _forceForward: boolean = false;\n  get forceForward(): boolean {\n    return this._forceForward;\n  }\n\n  _open = false;\n  /**\n   * Toggles open/close of the wizard component.\n   * Set using the `[clrWizardOpen]` input.\n   */\n  @Input('clrWizardOpen')\n  set clrWizardOpen(open: boolean) {\n    if (open) {\n      this.buttonService.buttonsReady = true;\n    }\n    this._open = open;\n  }\n\n  /**\n   * Prevents ClrWizard from moving to the next page or closing itself on finishing.\n   * Set using the `[clrWizardPreventDefaultNext]` input. Note that using stopNext\n   * will require you to create your own calls to .next() and .finish() in your\n   * host component to make the ClrWizard work as expected.\n   */\n  @Input('clrWizardPreventDefaultNext')\n  set stopNext(value: boolean) {\n    this._stopNext = !!value;\n    this.navService.wizardHasAltNext = value;\n  }\n  private _stopNext: boolean = false;\n  get stopNext() {\n    return this._stopNext;\n  }\n\n  /**\n   * Prevents ClrWizard from closing when the cancel button or close \"X\" is clicked.\n   * Set using the `[clrWizardPreventDefaultCancel]` input.\n   *\n   * Note that using stopCancel will require you to create your own calls to `close()` in your host compone`nt\n   * to make the ClrWizard work as expected. Useful for doing checks or prompts\n   * before closing a ClrWizard.\n   */\n  @Input('clrWizardPreventDefaultCancel')\n  set stopCancel(value: boolean) {\n    this._stopCancel = !!value;\n    this.navService.wizardHasAltCancel = value;\n  }\n  private _stopCancel: boolean = false;\n  get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Prevents ClrWizard from performing any form of navigation away from the current\n   * page. Set using the `[clrWizardPreventNavigation]` input.\n   * Note that stopNavigation is meant to freeze the wizard in place, typically\n   * during a long validation or background action where you want the wizard to\n   * display loading content but not allow the user to execute navigation in\n   * the stepnav, close X, or the  back, finish, or next buttons.\n   */\n  @Input('clrWizardPreventNavigation')\n  set stopNavigation(value: boolean) {\n    this._stopNavigation = !!value;\n    this.navService.wizardStopNavigation = value;\n  }\n  private _stopNavigation = false;\n  get stopNavigation() {\n    return this._stopNavigation;\n  }\n\n  /**\n   * Prevents clicks on the links in the stepnav from working.\n   * Set using `[clrWizardDisableStepnav]` input.\n   * A more granular bypassing of navigation which can be useful when your\n   * ClrWizard is in a state of completion and you don't want users to be\n   * able to jump backwards and change things.\n   */\n  @Input('clrWizardDisableStepnav')\n  set disableStepnav(value: boolean) {\n    this._disableStepnav = !!value;\n    this.navService.wizardDisableStepnav = value;\n  }\n  private _disableStepnav: boolean = false;\n  get disableStepnav(): boolean {\n    return this._disableStepnav;\n  }\n\n  /**\n   * Used to communicate to the underlying modal that animations are not\n   * wanted. Primary use is for the display of static/inline wizards.\n   * Set using `[clrWizardPreventModalAnimation]` input.\n   */\n  /** @deprecated since 3.0, input should be removed in 4.0 because is only related to inline wizards */\n  @Input('clrWizardPreventModalAnimation') _stopModalAnimations: boolean = false;\n  get stopModalAnimations(): string {\n    return this._stopModalAnimations ? 'true' : 'false';\n  }\n\n  /**\n   * Emits when the wizard is opened or closed.\n   * Listen via `(clrWizardOpenChange)` event.\n   */\n  @Output('clrWizardOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /**\n   * Emits when the wizard is canceled. Listen via `(clrWizardOnCancel)` event.\n   * Can be combined with the `[clrWizardPreventDefaultCancel]` input to create\n   * wizard-level custom cancel routines.\n   */\n  @Output('clrWizardOnCancel') onCancel: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is completed. Listen via `(clrWizardOnFinish)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom completion routines.\n   */\n  @Output('clrWizardOnFinish') wizardFinished: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is reset. Listen via `(clrWizardOnReset)` event.\n   */\n  @Output('clrWizardOnReset') onReset: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the current page has changed. Listen via `(clrWizardCurrentPageChanged)` event.\n   * output. Useful for non-blocking validation.\n   */\n  @Output('clrWizardCurrentPageChanged') currentPageChanged: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the next page. Listen via `(clrWizardOnNext)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom navigation routines, which are useful for validation.\n   */\n  @Output('clrWizardOnNext') onMoveNext: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the previous page. Can be useful for validation.\n   * Listen via `(clrWizardOnPrevious)` event.\n   */\n\n  @Output('clrWizardOnPrevious') onMovePrevious: EventEmitter<any> = new EventEmitter<any>(false);\n\n  @ContentChildren(ClrWizardPage) pages: QueryList<ClrWizardPage>;\n  @ContentChildren(ClrWizardHeaderAction) headerActions: QueryList<ClrWizardHeaderAction>;\n  @ViewChild('wizardTitle', { static: false })\n  wizardTitle: ElementRef;\n\n  public get currentPage() {\n    return this.navService.currentPage;\n  }\n\n  public set currentPage(page: ClrWizardPage) {\n    this.navService.goTo(page, true);\n  }\n\n  public get isLast() {\n    return this.navService.currentPageIsLast;\n  }\n\n  public get isFirst() {\n    return this.navService.currentPageIsFirst;\n  }\n\n  public get isStatic() {\n    return (this.elementRef.nativeElement as HTMLElement).classList.contains('clr-wizard--inline');\n  }\n\n  private differ: any; // for marking when the collection of wizard pages has been added to or deleted from\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService,\n    public headerActionService: HeaderActionService,\n    private elementRef: ElementRef,\n    differs: IterableDiffers\n  ) {\n    this.subscriptions.push(\n      this.listenForNextPageChanges(),\n      this.listenForPreviousPageChanges(),\n      this.listenForCancelChanges(),\n      this.listenForFinishedChanges(),\n      this.listenForPageChanges()\n    );\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  public ngAfterContentInit() {\n    this.pageCollection.pages = this.pages;\n    this.headerActionService.wizardHeaderActions = this.headerActions;\n    this.initializeButtons();\n  }\n\n  public ngDoCheck() {\n    this.updateNavOnPageChanges();\n  }\n\n  public ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  /**\n   * Marks Wizard as finished. By default it does not execute event\n   * emissions or checks before completing and closing. This method is commonly\n   * used as part of an alternative navigation with `[clrWizardPreventDefaultNext]`.\n   *\n   * If `skipChecksAndEmits` is true, the wizard will complete and close\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   */\n  public finish(skipChecksAndEmits = true) {\n    if (skipChecksAndEmits) {\n      this.forceFinish();\n    } else {\n      this.navService.finish();\n    }\n  }\n\n  /**\n   * Marks the wizard as finished but does run checks and emissions.\n   * Good for a last step in an alternate workflow. Does the same thing as\n   * calling `ClrWizard.finish(true)` or `ClrWizard.finish()` without a parameter.\n   */\n  public forceFinish() {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this.close();\n  }\n\n  /**\n   * Opens the wizard. If there is no current page defined, sets the first page in the wizard to be current.\n   */\n  public open(): void {\n    this._open = true;\n\n    if (!this.currentPage) {\n      this.navService.setFirstPageCurrent();\n    }\n\n    // Only render buttons when wizard is opened, to avoid chocolate errors\n    this.buttonService.buttonsReady = true;\n\n    this._openChanged.emit(true);\n  }\n\n  /**\n   * Closes the wizard. Call this directly instead of `cancel()` to implement alternative cancel functionality.\n   */\n  public close(): void {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this._open = false;\n    this._openChanged.emit(false);\n  }\n\n  /**\n   * Used to open and close the wizard. By default the wizard will\n   * close if invoked with no parameter. If parameter is true wizard will open\n   * else if false will close.\n   */\n  public toggle(open: boolean): void {\n    if (open) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Moves the wizard to the previous page.\n   */\n  public previous(): void {\n    this.navService.previous();\n  }\n\n  /**\n   * By default, `next()` does not execute event emissions.\n   * This method is commonly called as part of an alternative navigation\n   * with `[clrWizardPreventDefaultNext]`. The wizard will move to the next page\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   *\n   * If `skipChecksAndEmits` is false, the wizard will execute default checks\n   * and emit events as normal. This is useful for custom buttons or programmatic\n   * workflows that are not executing the wizards default checks and emissions.\n   * It is another way to navigate without having to rewrite the wizardâs default\n   * functionality from scratch.\n   */\n  public next(skipChecksAndEmits: boolean = true): void {\n    if (skipChecksAndEmits) {\n      this.forceNext();\n    } else {\n      this.navService.next();\n    }\n  }\n\n  /**\n   * Moves the wizard to the next page without the checks and emissions.\n   * Good for a last step in an alternate workflow.\n   * Alias for `ClrWizard.next(true)` or `ClrWizard.next()`\n   */\n  public forceNext(): void {\n    this.navService.forceNext();\n  }\n\n  /**\n   * Cancels and closes the wizard. Do not use this for an override of the cancel\n   * the functionality with `[clrWizardPreventDefaultCancel]`, `[clrWizardPreventPageDefaultCancel]`,\n   * or `[clrWizardPagePreventDefault]` because it will initiate the same checks\n   * and event emissions that invoked your event handler. Use `ClrWizard.close()` instead.\n   */\n  public cancel(): void {\n    this.navService.cancel();\n  }\n\n  /**\n   * Overrides behavior of the underlying modal to avoid collisions with\n   * alternative cancel functionality. In most cases, use `ClrWizard.cancel()` instead.\n   */\n  public modalCancel(): void {\n    if (this.closable) {\n      this.checkAndCancel();\n    }\n  }\n\n  /**\n   * Checks for alternative cancel flows defined at the current page or\n   * wizard level. Performs a canceled if not. Emits events that initiate\n   * the alternative cancel outputs `(clrWizardPageOnCancel)` and `(clrWizardOnCancel)`.\n   */\n  public checkAndCancel(): void {\n    const currentPage = this.currentPage;\n    const currentPageHasOverrides = currentPage.stopCancel || currentPage.preventDefault;\n\n    if (this.stopNavigation) {\n      return;\n    }\n\n    currentPage.pageOnCancel.emit();\n    if (!currentPageHasOverrides) {\n      this.onCancel.emit();\n    }\n\n    if (!this.stopCancel && !currentPageHasOverrides) {\n      this.close();\n    }\n  }\n\n  /**\n   * Navigates to a given page in the Wizard. Navigation will invoke the wizardâs default\n   * checks and event emissions.\n   *\n   * The format of the expected ID parameter can be found in the return of the\n   * ClrWizardPage.id getter, usually prefixed with `clr-wizard-page-` and then either a\n   * numeric ID or the ID specified for the `ClrWizardPage` componentâs `id` input.\n   */\n  public goTo(pageId: string): void {\n    if (!pageId) {\n      return;\n    }\n\n    this.navService.goTo(pageId);\n  }\n\n  /**\n   * Reset sets all WizardPages to incomplete and sets the first page in the `ClrWizard` to\n   * be the current page, resetting the wizard navigation.\n   * Use `(clrWizardOnReset)` event to reset the data or model of your wizard.\n   */\n  public reset(): void {\n    this.pageCollection.reset();\n    this.onReset.next();\n  }\n\n  private listenForNextPageChanges(): Subscription {\n    return this.navService.movedToNextPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMoveNext.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForPreviousPageChanges(): Subscription {\n    return this.navService.movedToPreviousPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMovePrevious.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForCancelChanges(): Subscription {\n    return this.navService.notifyWizardCancel.subscribe(() => this.checkAndCancel());\n  }\n\n  private listenForFinishedChanges(): Subscription {\n    return this.navService.wizardFinished.subscribe(() => this.emitWizardFinished());\n  }\n\n  private listenForPageChanges(): Subscription {\n    return this.navService.currentPageChanged.subscribe(() => this.currentPageChanged.emit());\n  }\n\n  private updateNavOnPageChanges(): void {\n    const changes = this.differ.diff(this.pages);\n    if (changes) {\n      changes.forEachAddedItem(() => this.navService.updateNavigation());\n      changes.forEachRemovedItem(() => this.navService.updateNavigation());\n    }\n  }\n\n  private initializeButtons(): void {\n    // Only trigger buttons ready if default is open (inlined)\n    if (this._open) {\n      this.buttonService.buttonsReady = true;\n    }\n  }\n\n  private emitWizardFinished(): void {\n    if (!this.stopNext) {\n      this.forceFinish();\n    }\n    this.wizardFinished.emit();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\n\nexport const DEFAULT_BUTTON_TYPES: any = {\n  cancel: 'cancel',\n  previous: 'previous',\n  next: 'next',\n  finish: 'finish',\n  danger: 'danger',\n};\n\nexport const CUSTOM_BUTTON_TYPES: any = {\n  cancel: 'custom-cancel',\n  previous: 'custom-previous',\n  next: 'custom-next',\n  finish: 'custom-finish',\n  danger: 'custom-danger',\n};\n\n@Component({\n  selector: 'clr-wizard-button',\n  template: `\n        <button\n            type=\"button\"\n            class=\"btn clr-wizard-btn\"\n            [class.btn-link]=\"isCancel\"\n            [class.clr-wizard-btn--tertiary]=\"isCancel\"\n            [class.btn-outline]=\"isPrevious\"\n            [class.clr-wizard-btn--secondary]=\"isPrevious\"\n            [class.btn-primary]=\"isPrimaryAction\"\n            [class.clr-wizard-btn--primary]=\"isPrimaryAction\"\n            [class.btn-success]=\"isFinish\"\n            [class.btn-danger]=\"isDanger\"\n            [class.disabled]=\"isDisabled\"\n            [attr.disabled]=\"_disabledAttribute\"\n            (click)=\"click()\">\n            <ng-content></ng-content>\n        </button>\n    `,\n  host: { class: 'clr-wizard-btn-wrapper', '[attr.aria-hidden]': 'isHidden' },\n  styles: ['[aria-hidden=\"true\"] { display: none; }'],\n})\nexport class ClrWizardButton {\n  @Input('type') public type: string = '';\n\n  @Input('clrWizardButtonDisabled') public disabled: boolean = false;\n\n  @Input('clrWizardButtonHidden') public hidden: boolean = false;\n\n  // EventEmitter which is emitted when a button is clicked.\n  @Output('clrWizardButtonClicked') wasClicked: EventEmitter<string> = new EventEmitter<string>(false);\n\n  constructor(public navService: WizardNavigationService, public buttonService: ButtonHubService) {}\n\n  private checkDefaultAndCustomType(valueToCheck: string = '', typeToLookUp: string) {\n    if (DEFAULT_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    if (CUSTOM_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    return false;\n  }\n\n  public get isCancel(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'cancel');\n  }\n\n  public get isNext(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'next');\n  }\n\n  public get isPrevious(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'previous');\n  }\n\n  public get isFinish(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'finish');\n  }\n\n  public get isDanger(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'danger');\n  }\n\n  public get isPrimaryAction(): boolean {\n    return this.isNext || this.isDanger || this.isFinish;\n  }\n\n  public get _disabledAttribute(): string | null {\n    if (this.isDisabled) {\n      return '';\n    }\n    return null;\n  }\n\n  public get isDisabled(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const disabled = true;\n    const nav = this.navService;\n    const page = this.navService.currentPage;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !disabled;\n    }\n\n    if (this.disabled || nav.wizardStopNavigation || !page) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !disabled;\n    }\n\n    if (this.isPrevious && (nav.currentPageIsFirst || page.previousStepDisabled)) {\n      return disabled;\n    }\n\n    if (this.isDanger && !page.readyToComplete) {\n      return disabled;\n    }\n\n    if (this.isNext && (nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    if (this.isFinish && (!nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    return !disabled;\n  }\n\n  public get isHidden(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const hidden = true;\n    const nav = this.navService;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !hidden;\n    }\n\n    if (this.hidden) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !hidden;\n    }\n\n    if (this.isPrevious && nav.currentPageIsFirst) {\n      return hidden;\n    }\n\n    if (this.isNext && nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    if (this.isFinish && !nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    return !hidden;\n  }\n\n  click(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.wasClicked.emit(this.type);\n    this.buttonService.buttonClicked(this.type);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-wizard-title, clr-wizard-pagetitle' })\nexport class ClrWizardCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { PageCollectionService } from './providers/page-collection.service';\n\n@Component({\n  selector: 'clr-wizard-stepnav',\n  template: `\n    <div class=\"clr-wizard-stepnav-list\">\n      <div *ngFor=\"let page of pageService.pages\" clr-wizard-stepnav-item [page]=\"page\" class=\"clr-wizard-stepnav-item\"></div>\n    </div>\n  `,\n  host: { class: 'clr-wizard-stepnav' },\n})\nexport class ClrWizardStepnav {\n  constructor(public pageService: PageCollectionService) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: '[clr-wizard-stepnav-item]',\n  template: `\n        <button type=\"button\" class=\"btn btn-link clr-wizard-stepnav-link\" (click)=\"click()\" [attr.disabled]=\"isDisabled ? '' : null\">\n            <ng-template [ngTemplateOutlet]=\"page.navTitle\"></ng-template>\n        </button>\n    `,\n  host: {\n    '[id]': 'id',\n    '[attr.aria-selected]': 'isCurrent',\n    '[attr.aria-controls]': 'id',\n    '[class.clr-nav-link]': 'true',\n    '[class.nav-item]': 'true',\n    '[class.active]': 'isCurrent',\n    '[class.disabled]': 'isDisabled',\n    '[class.no-click]': '!canNavigate',\n    '[class.complete]': 'isComplete',\n  },\n})\nexport class ClrWizardStepnavItem {\n  @Input('page') public page: ClrWizardPage;\n\n  constructor(public navService: WizardNavigationService, public pageCollection: PageCollectionService) {}\n\n  private pageGuard(): void {\n    if (!this.page) {\n      throw new Error('Wizard stepnav item is not associated with a wizard page.');\n    }\n  }\n\n  public get id(): string {\n    this.pageGuard();\n    return this.pageCollection.getStepItemIdForPage(this.page);\n  }\n\n  public get isDisabled(): boolean {\n    this.pageGuard();\n    return this.page.disabled || this.navService.wizardStopNavigation || this.navService.wizardDisableStepnav;\n  }\n\n  public get isCurrent(): boolean {\n    this.pageGuard();\n    return this.page.current;\n  }\n\n  public get isComplete(): boolean {\n    this.pageGuard();\n    return this.page.completed;\n  }\n\n  public get canNavigate(): boolean {\n    this.pageGuard();\n    return this.pageCollection.previousPageIsCompleted(this.page);\n  }\n\n  click(): void {\n    this.pageGuard();\n\n    // if we click on our own stepnav or a disabled stepnav, we don't want to do anything\n    if (this.isDisabled || this.isCurrent) {\n      return;\n    }\n\n    this.navService.goTo(this.page);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAlertModule } from '../emphasis/alert/alert.module';\nimport { ClrModalModule } from '../modal/modal.module';\n\nimport { ClrWizard } from './wizard';\nimport { ClrWizardButton } from './wizard-button';\nimport { ClrWizardCustomTags } from './wizard-custom-tags';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\nimport { ClrWizardStepnav } from './wizard-stepnav';\nimport { ClrWizardStepnavItem } from './wizard-stepnav-item';\n\nexport const CLR_WIZARD_DIRECTIVES: any[] = [\n  ClrWizard,\n  ClrWizardPage,\n  ClrWizardStepnav,\n  ClrWizardStepnavItem,\n  ClrWizardButton,\n  ClrWizardHeaderAction,\n  ClrWizardCustomTags,\n  ClrWizardPageTitle,\n  ClrWizardPageNavTitle,\n  ClrWizardPageButtons,\n  ClrWizardPageHeaderActions,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrModalModule, ClrAlertModule],\n  declarations: [CLR_WIZARD_DIRECTIVES],\n  exports: [CLR_WIZARD_DIRECTIVES],\n})\nexport class ClrWizardModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\n\nlet accordionCount = 0;\n\nexport class AccordionPanelModel {\n  status = AccordionStatus.Inactive;\n  index: number = null;\n  disabled = false;\n  open = false;\n  templateId = `${this.id}-${this.accordionId}`;\n  constructor(public id: string, public accordionId: number | string) {}\n}\n\nexport class AccordionModel {\n  protected strategy = AccordionStrategy.Default;\n  protected accordionCount = accordionCount++;\n  protected _panels: { [id: string]: AccordionPanelModel } = {};\n\n  get panels(): AccordionPanelModel[] {\n    return Object.keys(this._panels).map(id => this._panels[id]);\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.strategy = strategy;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    ids.forEach((id, index) => (this._panels[id].index = index));\n    this.removeOldPanels(ids);\n  }\n\n  addPanel(id: string, open = false) {\n    this._panels[id] = new AccordionPanelModel(id, this.accordionCount);\n    this._panels[id].open = open;\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    const panelIsOpen = this._panels[panelId].open;\n    if (this.strategy === AccordionStrategy.Default) {\n      this.closeAllPanels();\n    }\n\n    this._panels[panelId].open = open !== undefined ? open : !panelIsOpen;\n  }\n\n  disablePanel(panelId: string, disabled: boolean) {\n    this._panels[panelId].disabled = disabled;\n  }\n\n  private closeAllPanels() {\n    this.panels.forEach(panel => (this._panels[panel.id].open = false));\n  }\n\n  private removeOldPanels(ids: string[]) {\n    this.panels\n      .filter(panel => ids.find(id => id === panel.id) === undefined)\n      .forEach(panel => delete this._panels[panel.id]);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AccordionModel, AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\n\n@Injectable()\nexport class AccordionService {\n  protected accordion = new AccordionModel();\n  protected readonly _panelsChanges = new BehaviorSubject<AccordionPanelModel[]>(this.accordion.panels);\n\n  getPanelChanges(panelId: string): Observable<AccordionPanelModel> {\n    return this._panelsChanges.pipe(map(panels => panels.find(s => s.id === panelId)));\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.accordion.setStrategy(strategy);\n  }\n\n  addPanel(panelId: string, open = false) {\n    this.accordion.addPanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    this.accordion.togglePanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  disablePanel(panelId: string, disabled?: boolean) {\n    this.accordion.disablePanel(panelId, disabled);\n    this.emitUpdatedPanels();\n  }\n\n  updatePanelOrder(ids: string[]) {\n    this.accordion.updatePanelOrder(ids);\n    this.emitUpdatedPanels();\n  }\n\n  protected emitUpdatedPanels() {\n    this._panelsChanges.next(this.accordion.panels);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const defaultAnimationTiming = '0.2s ease-in-out';\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { defaultAnimationTiming } from '../../utils/animations/constants';\n\nexport const panelAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n  ]),\n];\n\nexport const stepAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n    transition('* => void', [\n      style({ display: 'block' }),\n      animate(defaultAnimationTiming, style({ height: 0, display: 'none' })),\n    ]),\n  ]),\n];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-description, clr-step-description',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-description]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionDescription {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  EventEmitter,\n  Output,\n  SimpleChanges,\n  Inject,\n  OnInit,\n  OnChanges,\n  ContentChildren,\n  QueryList,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { AccordionService } from './providers/accordion.service';\nimport { AccordionStatus } from './enums/accordion-status.enum';\nimport { panelAnimation } from './utils/animation';\nimport { IfExpandService } from '../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from './models/accordion.model';\nimport { ClrAccordionDescription } from './accordion-description';\n\n@Component({\n  selector: 'clr-accordion-panel',\n  templateUrl: './accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: panelAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrAccordionPanel implements OnInit, OnChanges {\n  @Input('clrAccordionPanelDisabled') disabled = false;\n  @Input('clrAccordionPanelOpen') panelOpen = false;\n  @Output('clrAccordionPanelOpenChange') panelOpenChange = new EventEmitter<boolean>();\n  @ContentChildren(ClrAccordionDescription) accordionDescription: QueryList<ClrAccordionDescription>;\n\n  panel: Observable<AccordionPanelModel>;\n  readonly AccordionStatus = AccordionStatus;\n  isAccordion = true;\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private accordionService: AccordionService,\n    private ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) public id: string\n  ) {}\n\n  ngOnInit() {\n    this.panel = this.accordionService.getPanelChanges(this.id).pipe(tap(panel => this.emitPanelChange(panel)));\n    this.accordionService.addPanel(this.id, this.panelOpen);\n    this.accordionService.togglePanel(this.id, this.panelOpen);\n    this.accordionService.disablePanel(this.id, this.disabled);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.panel && changes.panelOpen && changes.panelOpen.currentValue !== changes.panelOpen.previousValue) {\n      this.accordionService.togglePanel(this.id, changes.panelOpen.currentValue);\n    }\n\n    if (this.panel && changes.disabled && changes.disabled.currentValue !== changes.disabled.previousValue) {\n      this.accordionService.disablePanel(this.id, changes.disabled.currentValue);\n    }\n  }\n\n  togglePanel() {\n    this.accordionService.togglePanel(this.id);\n  }\n\n  collapsePanelOnAnimationDone(panel: AccordionPanelModel) {\n    if (!panel.open) {\n      this.ifExpandService.expanded = false;\n    }\n  }\n\n  getPanelStateClasses(panel: AccordionPanelModel) {\n    return `clr-accordion-panel-${panel.status} ${panel.open ? 'clr-accordion-panel-open' : ''}`;\n  }\n\n  getAccordionContentId(id: string) {\n    return `clr-accordion-content-${id}'`;\n  }\n\n  getAccordionHeaderId(id: string) {\n    return `clr-accordion-header-${id}`;\n  }\n\n  private emitPanelChange(panel: AccordionPanelModel) {\n    this.panelOpenChange.emit(panel.open);\n\n    if (panel.open) {\n      this.ifExpandService.expanded = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-title, clr-step-title',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-title]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionTitle {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { AccordionService } from './providers/accordion.service';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { AccordionStrategy } from './enums/accordion-strategy.enum';\n\n@Component({\n  selector: 'clr-accordion',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion]': 'true' },\n  providers: [AccordionService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordion implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrAccordionMultiPanel') multiPanel = false;\n  @ContentChildren(ClrAccordionPanel, { descendants: true })\n  panels: QueryList<ClrAccordionPanel>;\n  subscriptions: Subscription[] = [];\n\n  constructor(private accordionService: AccordionService) {}\n\n  ngOnInit() {\n    this.setAccordionStrategy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.multiPanel.currentValue !== changes.multiPanel.previousValue) {\n      this.setAccordionStrategy();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private setAccordionStrategy() {\n    const strategy = this.multiPanel ? AccordionStrategy.Multi : AccordionStrategy.Default;\n    this.accordionService.setStrategy(strategy);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes\n      .pipe(startWith(this.panels))\n      .subscribe(panels => this.accordionService.updatePanelOrder(panels.toArray().map(p => p.id)));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-content, clr-step-content',\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionContent {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-accordion' })\nexport class AccordionWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../utils/chocolate/oompa-loompa';\nimport { AccordionWillyWonka } from './accordion-willy-wonka';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-accordion-panel' })\nexport class AccordionOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: AccordionWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-accordion-panel should only be used inside of clr-accordion');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { ClrAccordionTitle } from './accordion-title';\nimport { ClrAccordionDescription } from './accordion-description';\nimport { ClrAccordion } from './accordion';\nimport { ClrAccordionContent } from './accordion-content';\nimport { AccordionOompaLoompa } from './chocolate/accordion-oompa-loompa';\nimport { AccordionWillyWonka } from './chocolate/accordion-willy-wonka';\n\nconst declarations = [\n  ClrAccordion,\n  ClrAccordionPanel,\n  ClrAccordionTitle,\n  ClrAccordionDescription,\n  ClrAccordionContent,\n  AccordionOompaLoompa,\n  AccordionWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [...declarations],\n  exports: [...declarations],\n})\nexport class ClrAccordionModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionModel } from '../../models/accordion.model';\nimport { AccordionStatus } from '../../enums/accordion-status.enum';\n\nexport class StepperModel extends AccordionModel {\n  get allPanelsCompleted(): boolean {\n    return this.panels.length && this.getNumberOfIncompletePanels() === 0 && this.getNumberOfOpenPanels() === 0;\n  }\n\n  addPanel(id: string, open = false) {\n    super.addPanel(id, open);\n    this._panels[id].disabled = true;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    super.updatePanelOrder(ids);\n    this.openFirstPanel();\n  }\n\n  togglePanel(panelId: string) {\n    if (this._panels[panelId].status === AccordionStatus.Complete) {\n      this._panels[panelId].open = !this._panels[panelId].open;\n    }\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    if (currentPanelValid) {\n      this.completePanel(currentPanelId);\n      this.openNextPanel(this._panels[currentPanelId].id);\n    } else {\n      this.setPanelError(currentPanelId);\n    }\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.panels.filter(() => this._panels[panelId] !== undefined).forEach(panel => {\n      if (panel.index < this._panels[panelId].index) {\n        this.completePanel(panel.id);\n      } else if (panel.id === panelId) {\n        this._panels[panel.id].open = true;\n      } else {\n        this._panels[panel.id].open = false;\n      }\n    });\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    ids.forEach(id => this.setPanelError(id));\n  }\n\n  resetPanels() {\n    this.panels.forEach(p => this.resetPanel(p.id));\n    this.openFirstPanel();\n  }\n\n  getNextPanel(currentPanelId: string) {\n    return this.panels.find(s => s.index === this._panels[currentPanelId].index + 1);\n  }\n\n  private resetAllFuturePanels(panelId: string) {\n    this.panels.filter(panel => panel.index >= this._panels[panelId].index).forEach(panel => this.resetPanel(panel.id));\n  }\n\n  private resetPanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Inactive;\n    this._panels[panelId].open = false;\n    this._panels[panelId].disabled = true;\n  }\n\n  private openFirstPanel() {\n    const firstPanel = this.getFirstPanel();\n    this._panels[firstPanel.id].open = true;\n    this._panels[firstPanel.id].disabled = true;\n  }\n\n  private completePanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Complete;\n    this._panels[panelId].disabled = false;\n    this._panels[panelId].open = false;\n  }\n\n  private openNextPanel(currentPanelId: string) {\n    const nextPanel = this.getNextPanel(currentPanelId);\n\n    if (nextPanel) {\n      this.resetAllFuturePanels(nextPanel.id);\n      this._panels[nextPanel.id].open = true;\n      this._panels[nextPanel.id].disabled = true;\n    }\n  }\n\n  private setPanelError(panelId: string) {\n    this.resetAllFuturePanels(panelId);\n    this._panels[panelId].open = true;\n    this._panels[panelId].status = AccordionStatus.Error;\n  }\n\n  private getFirstPanel() {\n    return this.panels.find(panel => panel.index === 0);\n  }\n\n  private getNumberOfIncompletePanels() {\n    return this.panels.reduce((prev, next) => (next.status !== AccordionStatus.Complete ? prev + 1 : prev), 0);\n  }\n\n  private getNumberOfOpenPanels() {\n    return this.panels.reduce((prev, next) => (next.open !== false ? prev + 1 : prev), 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\n\nimport { AccordionService } from './../../providers/accordion.service';\nimport { StepperModel } from '../models/stepper.model';\n\n@Injectable()\nexport class StepperService extends AccordionService {\n  readonly panelsCompleted = this.getAllCompletedPanelChanges();\n  protected accordion = new StepperModel();\n\n  private _activeStepChanges = new Subject<string>();\n  readonly activeStep = this._activeStepChanges.asObservable();\n\n  resetPanels() {\n    this.accordion.resetPanels();\n    this.emitUpdatedPanels();\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    this.accordion.setPanelsWithErrors(ids);\n    this.emitUpdatedPanels();\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    this.accordion.navigateToNextPanel(currentPanelId, currentPanelValid);\n    this.updateNextStep(currentPanelId, currentPanelValid);\n    this.emitUpdatedPanels();\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.accordion.overrideInitialPanel(panelId);\n    this.emitUpdatedPanels();\n  }\n\n  private updateNextStep(currentPanelId: string, currentPanelValid: boolean) {\n    const nextPanel = this.accordion.getNextPanel(currentPanelId);\n\n    if (currentPanelValid && nextPanel) {\n      this._activeStepChanges.next(nextPanel.id);\n    } else if (currentPanelValid) {\n      this._activeStepChanges.next(currentPanelId);\n    }\n  }\n\n  private getAllCompletedPanelChanges(): Observable<boolean> {\n    return this._panelsChanges.pipe(map(() => this.accordion.allPanelsCompleted), distinctUntilChanged());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener, HostBinding, Input, OnInit } from '@angular/core';\n\nimport { StepperService } from './providers/stepper.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\nexport enum ClrStepButtonType {\n  Next = 'next',\n  Submit = 'submit',\n}\n\n@Directive({\n  selector: '[clrStepButton]',\n  host: {\n    '[class.clr-step-button]': 'true',\n    '[class.btn]': 'true',\n    '[type]': \"'button'\",\n  },\n})\nexport class ClrStepButton implements OnInit {\n  @Input('clrStepButton') type: ClrStepButtonType | string = ClrStepButtonType.Next;\n  @HostBinding('class.btn-primary') submitButton = false;\n\n  constructor(private clrStep: ClrStepperPanel, private stepperService: StepperService) {}\n\n  ngOnInit() {\n    this.submitButton = this.type === ClrStepButtonType.Submit;\n  }\n\n  @HostListener('click')\n  navigateToNextPanel() {\n    this.stepperService.navigateToNextPanel(this.clrStep.id, this.clrStep.formGroup.valid);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Optional,\n  Inject,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { FormGroupName, NgModelGroup } from '@angular/forms';\nimport { tap, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { StepperService } from './providers/stepper.service';\nimport { stepAnimation } from '../utils/animation';\nimport { triggerAllFormControlValidation } from '../../utils/forms/validation';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\nimport { ClrAccordionPanel } from '../accordion-panel';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-stepper-panel',\n  templateUrl: './../accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: stepAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrStepperPanel extends ClrAccordionPanel implements OnInit {\n  isAccordion = false;\n\n  @ViewChild('headerButton', { static: false })\n  headerButton: ElementRef;\n  private subscriptions: Subscription[] = [];\n\n  get formGroup() {\n    return this.formGroupName ? this.formGroupName.control : this.ngModelGroup.control;\n  }\n\n  get id() {\n    return this.formGroupName ? this.formGroupName.name : this.ngModelGroup.name;\n  }\n\n  set id(_value) {} // overriding parent id required empty setter\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public commonStrings: ClrCommonStringsService,\n    @Optional() private formGroupName: FormGroupName,\n    @Optional() private ngModelGroup: NgModelGroup,\n    private stepperService: StepperService,\n    ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) id: string\n  ) {\n    super(commonStrings, stepperService, ifExpandService, id);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.panel = this.panel.pipe(tap(panel => this.triggerAllFormControlValidationIfError(panel)));\n    this.stepperService.disablePanel(this.id, true);\n    this.listenToFocusChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenToFocusChanges() {\n    this.subscriptions.push(\n      this.stepperService.activeStep\n        .pipe(filter(panelId => isPlatformBrowser(this.platformId) && panelId === this.id))\n        .subscribe(() => this.headerButton.nativeElement.focus())\n    );\n  }\n\n  private triggerAllFormControlValidationIfError(panel: AccordionPanelModel) {\n    if (panel.status === AccordionStatus.Error) {\n      triggerAllFormControlValidation(this.formGroup);\n    }\n  }\n}\n","/*\n* Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n*/\n\nimport { FormGroup, FormControl } from '@angular/forms';\n\nexport function triggerAllFormControlValidation(formGroup: FormGroup) {\n  Object.keys(formGroup.controls).forEach(field => {\n    const control = formGroup.get(field);\n    if (control instanceof FormControl) {\n      control.markAsTouched();\n      control.markAsDirty();\n      control.updateValueAndValidity();\n    } else if (control instanceof FormGroup) {\n      triggerAllFormControlValidation(control);\n    }\n  });\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  Optional,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n} from '@angular/core';\nimport { FormGroupDirective, NgForm } from '@angular/forms';\nimport { startWith, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { StepperService } from './providers/stepper.service';\nimport { AccordionService } from '../providers/accordion.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\n@Component({\n  selector: 'form[clrStepper]',\n  template: `<ng-content></ng-content>`,\n  host: {\n    '[class.clr-accordion]': 'true',\n    '[class.clr-stepper-forms]': 'true',\n  },\n  providers: [StepperService, { provide: AccordionService, useExisting: StepperService }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrStepper implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrInitialStep') initialPanel: string;\n  @ContentChildren(ClrStepperPanel, { descendants: true })\n  panels: QueryList<ClrStepperPanel>;\n  subscriptions: Subscription[] = [];\n  form: FormGroupDirective | NgForm;\n\n  constructor(\n    @Optional() private formGroup: FormGroupDirective,\n    @Optional() private ngForm: NgForm,\n    private stepperService: StepperService\n  ) {}\n\n  ngOnInit() {\n    if (!this.formGroup && !this.ngForm) {\n      throw new Error('To use stepper a Reactive or Template Form is required.');\n    }\n\n    this.form = this.formGroup ? this.formGroup : this.ngForm;\n    this.subscriptions.push(this.listenForPanelsCompleted());\n    this.subscriptions.push(this.listenForFormResetChanges());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.initialPanel.currentValue !== changes.initialPanel.previousValue) {\n      this.stepperService.overrideInitialPanel(this.initialPanel);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForFormResetChanges() {\n    return this.form.statusChanges\n      .pipe(filter(() => this.form.pristine)) // https://github.com/angular/angular/issues/10887\n      .subscribe(() => this.stepperService.resetPanels());\n  }\n\n  private listenForPanelsCompleted() {\n    return this.stepperService.panelsCompleted.subscribe(panelsCompleted => {\n      if (panelsCompleted && this.form.valid) {\n        this.form.ngSubmit.emit();\n      } else if (!this.form.valid && this.form.touched) {\n        this.setPanelsWithFormErrors();\n      }\n    });\n  }\n\n  private setPanelsWithFormErrors() {\n    const panelsWithErrors = this.panels.reduce((panels, p) => (p.formGroup.invalid ? [...panels, p.id] : panels), []);\n    this.stepperService.setPanelsWithErrors(panelsWithErrors);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes.pipe(startWith(this.panels)).subscribe(panels => {\n      this.stepperService.updatePanelOrder(panels.toArray().map(p => p.id));\n\n      if (this.initialPanel) {\n        this.stepperService.overrideInitialPanel(this.initialPanel);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'form[clrStepper]' })\nexport class StepperWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { StepperWillyWonka } from './stepper-willy-wonka';\nimport { IfExpandService } from '../../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-stepper-panel, [clrStepButton]' })\nexport class StepperOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: StepperWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-stepper-panel should only be used inside of clrStepper');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAccordionModule } from '../accordion.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrStepButton } from './../stepper/step-button';\nimport { ClrStepper } from './../stepper/stepper';\nimport { ClrStepperPanel } from './stepper-panel';\nimport { StepperOompaLoompa } from './chocolate/stepper-oompa-loompa';\nimport { StepperWillyWonka } from './chocolate/stepper-willy-wonka';\n\nconst declarations = [ClrStepper, ClrStepButton, ClrStepperPanel, StepperOompaLoompa, StepperWillyWonka];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrAccordionModule],\n  declarations: [...declarations],\n  exports: [...declarations, ClrAccordionModule],\n})\nexport class ClrStepperModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { AriaLiveService, AriaLivePoliteness } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  providers: [AriaLiveService],\n  selector: 'clr-progress-bar',\n  template: `\n    <progress [id]=\"id\" [attr.max]=\"max\" [attr.value]=\"value\" [attr.data-displayval]=\"displayValue\"></progress>\n    <span *ngIf=\"displayAriaLive()\">{{ displayValue }}</span>\n  `,\n})\nexport class ClrProgressBar {\n  constructor(private ariaLiveService: AriaLiveService) {}\n\n  /**\n   * Handle component ID\n   */\n  private _ID: string;\n  @HostBinding('attr.id') externalId: string = '';\n  @Input()\n  set id(value: string) {\n    this._ID = value;\n    this.externalId = null;\n  }\n  get id() {\n    return this._ID;\n  }\n\n  // Progress\n  @Input('clrMax') max: number = 100;\n  @Input('clrDisplayval') displayval: string;\n\n  private _value: number = 0;\n  @Input('clrValue')\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n    if (this.displayAriaLive()) {\n      this.ariaLiveService.announce(this.displayValue, this.ariaLive);\n    }\n  }\n\n  // Styles\n  @HostBinding('class.progress')\n  get progressClass() {\n    return true;\n  }\n\n  private _labeled: boolean;\n  @HostBinding('class.labeled')\n  get labeledClass() {\n    return this._labeled;\n  }\n\n  @Input('clrLabeled')\n  set clrLabeled(value: boolean | string) {\n    this._labeled = isBooleanAttributeSet(value);\n  }\n\n  private _fade: boolean;\n  @HostBinding('class.progress-fade')\n  get fadeClass() {\n    return this._fade;\n  }\n\n  @Input('clrFade')\n  set clrFade(value: boolean | string) {\n    this._fade = isBooleanAttributeSet(value);\n  }\n\n  private _loop: boolean;\n  @HostBinding('class.loop')\n  get loopClass() {\n    return this._loop;\n  }\n\n  @Input('clrLoop')\n  set clrLoop(value: boolean | string) {\n    this._loop = isBooleanAttributeSet(value);\n  }\n\n  private _success: boolean;\n  @HostBinding('class.success')\n  get successClass() {\n    return this._success;\n  }\n\n  @Input('clrSuccess')\n  set clrSuccess(value: boolean | string) {\n    this._success = isBooleanAttributeSet(value);\n  }\n\n  private _danger: boolean;\n  @HostBinding('class.danger')\n  get dangerClass() {\n    return this._danger;\n  }\n\n  @Input('clrDanger')\n  set clrDanger(value: boolean | string) {\n    this._danger = isBooleanAttributeSet(value);\n  }\n\n  private _flash: boolean;\n  @HostBinding('class.flash')\n  get flashClass() {\n    return this._flash;\n  }\n\n  @Input('clrFlash')\n  set clrFlash(value: boolean | string) {\n    this._flash = isBooleanAttributeSet(value);\n  }\n\n  private _flashDanger: boolean;\n  @HostBinding('class.flash-danger')\n  get flashDangerClass() {\n    return this._flashDanger;\n  }\n\n  @Input('clrFlashDanger')\n  set clrFlashDanger(value: boolean | string) {\n    this._flashDanger = isBooleanAttributeSet(value);\n  }\n\n  // Aria Live\n  @Input('clrAssertive') assertive: boolean;\n  @Input('clrOff') off: boolean;\n\n  /**\n   * Make sure that we always will have something that is readable\n   * for the screen reader\n   */\n  get displayValue() {\n    if (this.displayval) {\n      return this.displayval;\n    }\n    return `${this.value}%`;\n  }\n\n  /**\n   * Display aria-live only when there is value and it's not 0 or equal to the max value\n   */\n  displayAriaLive() {\n    return (this.value !== undefined || this.value !== 0) && this.value !== this.max;\n  }\n\n  get ariaLive(): AriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return AriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return AriaLivePoliteness.off;\n    }\n    return AriaLivePoliteness.polite;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrProgressBar } from './progress-bar';\n\nexport const CLR_PROGRESS_BAR_DIRECTIVES: Type<any>[] = [ClrProgressBar];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_PROGRESS_BAR_DIRECTIVES],\n  exports: [CLR_PROGRESS_BAR_DIRECTIVES],\n})\nexport class ClrProgressBarModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonModule } from './button/button.module';\nimport { ClrDataModule } from './data/data.module';\nimport { ClrDragAndDropModule } from './utils/drag-and-drop/drag-and-drop.module';\nimport { ClrEmphasisModule } from './emphasis/emphasis.module';\nimport { ClrFormsModule } from './forms/forms.module';\nimport { ClrIconModule } from './icon/icon.module';\nimport { ClrLayoutModule } from './layout/layout.module';\nimport { ClrModalModule } from './modal/modal.module';\nimport { ClrPopoverModule } from './popover/popover.module';\nimport { ClrConditionalModule } from './utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from './utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrFocusTrapModule } from './utils/focus-trap/focus-trap.module';\nimport { ClrLoadingModule } from './utils/loading/loading.module';\nimport { ClrWizardModule } from './wizard/wizard.module';\nimport { ClrStepperModule } from './accordion/stepper/stepper.module';\nimport { ClrSpinnerModule } from './progress/spinner/spinner.module';\nimport { ClrProgressBarModule } from './progress/progress-bars/progress-bar.module';\nimport { ClrPopoverModuleNext } from './utils/popover/popover.module';\n\n@NgModule({\n  exports: [\n    ClrEmphasisModule,\n    ClrDataModule,\n    ClrIconModule,\n    ClrModalModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n    ClrButtonModule,\n    ClrFormsModule,\n    ClrLayoutModule,\n    ClrPopoverModule,\n    ClrWizardModule,\n    ClrDragAndDropModule,\n    ClrStepperModule,\n    ClrSpinnerModule,\n    ClrProgressBarModule,\n    ClrPopoverModuleNext,\n  ],\n})\nexport class ClarityModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, state, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function collapse(): AnimationMetadata[] {\n  'use strict';\n  return [\n    state('true', style({ height: 0, 'overflow-y': 'hidden' })),\n    transition('true => false', [animate(defaultAnimationTiming, style({ height: '*', 'overflow-y': 'hidden' }))]),\n    transition('false => true', [style({ height: '*', 'overflow-y': 'hidden' }), animate(defaultAnimationTiming)]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fade(opacity: number = 1): AnimationMetadata[] {\n  return [\n    transition('void => *', [style({ opacity: 0 }), animate(defaultAnimationTiming, style({ opacity: opacity }))]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0 }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fadeSlide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ opacity: 0, transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0, transform: transform }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function slide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ transform: transform }))]),\n  ];\n}\n"]}